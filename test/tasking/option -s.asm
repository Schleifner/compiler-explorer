        ; Module start
        ;source 'C:\\Users\\QXZ3F7O\\AppData\\Local\\Temp\\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\\example.cpp'

$TC18
.5.cnt: .type     object
        .word   0,1075052544
.6.cnt: .type     object
        .word   0,1075314688
.7.cnt: .type     object
        .word   0,1075576832
.8.cnt: .type     object
        .word   0,1076101120
.9.cnt: .type     object
        .word   0,1076363264
.10.cnt:        .type   object
        .word   0,1076494336
.11.cnt:        .type   object
        .word   0,1076887552
.12.cnt:        .type   object
        .word   0,1075838976

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        1  #include <iostream>
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        2   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        3  using namespace std;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        4   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        5  class Box
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        6  {
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        7     public:
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        8        double length;   // 长度
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp        9        double breadth;  // 宽度
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       10        double height;   // 高度
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       11        // 成员函数声明
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       12        double get(void);
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       13        void set( double len, double bre, double hei );
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       14  };
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       15  // 成员函数定义
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       16  double Box::get(void)
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       17  {
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       18      return length * breadth * height;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       19  }
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       20   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       21  void Box::set( double len, double bre, double hei)
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       22  {
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       23      length = len;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       24      breadth = bre;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       25      height = hei;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       26  }
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       27  int main( )
; Function main
main:   .type func
        sub.a   a10,#80

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       28  {
        call    _main

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       29     Box Box1;        // 声明 Box1，类型为 Box
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       30     Box Box2;        // 声明 Box2，类型为 Box
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       31     Box Box3;        // 声明 Box3，类型为 Box
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       32     double volume = 0.0;     // 用于存储体积
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       33   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       34     // box 1 详述
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       35     Box1.height = 5.0; 
        ld.d    e0,.5.cnt
        st.d    [a10]24,e0

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       36     Box1.length = 6.0; 
        ld.d    e0,.6.cnt
        st.d    [a10]8,e0

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       37     Box1.breadth = 7.0;
        ld.d    e0,.7.cnt
        st.d    [a10]16,e0

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       38   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       39     // box 2 详述
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       40     Box2.height = 10.0;
        ld.d    e0,.8.cnt
        st.d    [a10]48,e0

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       41     Box2.length = 12.0;
        ld.d    e0,.9.cnt
        st.d    [a10]32,e0

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       42     Box2.breadth = 13.0;
        ld.d    e0,.10.cnt
        st.d    [a10]40,e0

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       43   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       44     // box 1 的体积
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       45     volume = Box1.height * Box1.length * Box1.breadth;
        ld.d    e0,.5.cnt
        ld.d    e2,.6.cnt
        mul.df  e0,e0,e2
        ld.d    e2,.7.cnt
        mul.df  e8,e0,e2

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       46     cout << "Box1 的体积：" << volume <<endl;
        movh.a  a4,#@his(_ZSt4cout)
        lea     a4,[a4]@los(_ZSt4cout)
        movh.a  a5,#@his(.1.str)
        lea     a5,[a5]@los(.1.str)
        call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
        mov.aa  a4,a2
        mov     e4,d9,d8
        call    _ZNSolsEd
        mov.aa  a15,a2

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
        jz.a    a2,.L2

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         2  //===-------------------------- ostream -----------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        11  #ifndef _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        12  #define _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        15      ostream synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        17  template <class charT, class traits = char_traits<charT> >
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        18  class basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        19      : virtual public basic_ios<charT,traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        20  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        21  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        22      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        23      typedef charT                          char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        24      typedef traits                         traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        25      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        26      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        27      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        28  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        29      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        30      explicit basic_ostream(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        31      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        32      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        34      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        35      basic_ostream& operator=(const basic_ostream& rhs) = delete; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        36      basic_ostream& operator=(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        37      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        38  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        39      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        40      class sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        41  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        42      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        43      basic_ostream& operator<<(basic_ostream& (*pf)(basic_ostream&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        44      basic_ostream& operator<<(basic_ios<charT, traits>& (*pf)(basic_ios<charT,traits>&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        45      basic_ostream& operator<<(ios_base& (*pf)(ios_base&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        46      basic_ostream& operator<<(bool n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        47      basic_ostream& operator<<(short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        48      basic_ostream& operator<<(unsigned short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        49      basic_ostream& operator<<(int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        50      basic_ostream& operator<<(unsigned int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        51      basic_ostream& operator<<(long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        52      basic_ostream& operator<<(unsigned long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        53      basic_ostream& operator<<(long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        54      basic_ostream& operator<<(unsigned long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        55      basic_ostream& operator<<(float f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        56      basic_ostream& operator<<(double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        57      basic_ostream& operator<<(long double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        58      basic_ostream& operator<<(const void* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        59      basic_ostream& operator<<(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        60  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        61      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        62      basic_ostream& put(char_type c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        63      basic_ostream& write(const char_type* s, streamsize n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        64      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        65  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        66      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        67      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        68      basic_ostream& seekp(pos_type);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        69      basic_ostream& seekp(off_type, ios_base::seekdir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        70  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        71      basic_ostream(const basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        72      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        73      // 27.7.3.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        74      basic_ostream& operator=(basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        75      basic_ostream& operator=(const basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        76      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        77  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        78  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        79  // 27.7.2.6.4 character inserters
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        80  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        81  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        82    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, charT);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        84  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        85    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        87  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        88    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        90  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        92  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        93    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, signed char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        95  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        96    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, unsigned char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        98  // NTBS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        99  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       100    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const charT*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       101  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       102  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       103    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       104  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       105  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       106    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       107  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       108  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       109  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       110  basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const signed char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       112  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       113    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const unsigned char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       115  // swap:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       116  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       117    void swap(basic_ostream<charT, traits>& x, basic_ostream<charT, traits>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       118  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       119  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       120    basic_ostream<charT,traits>& endl(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       121  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       122  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       123    basic_ostream<charT,traits>& ends(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       125  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       126    basic_ostream<charT,traits>& flush(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       127  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       128  // rvalue stream insertion
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       129  template <class charT, class traits, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       130    basic_ostream<charT, traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       131    operator<<(basic_ostream<charT, traits>&& os, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       132  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       133  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       134  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       135  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       136  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       137  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       138  #include <ios>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       139  #include <streambuf>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       140  #include <locale>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       141  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       142  #include <bitset>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       143  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       144  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       145  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       146  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       148  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       149  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       150  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       151  class _LIBCPP_TEMPLATE_VIS basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       152      : virtual public basic_ios<_CharT, _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       154  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       155      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       156      typedef _CharT                         char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       157      typedef _Traits                        traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       158      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       159      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       160      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       161  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       162      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       163      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       164      explicit basic_ostream(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       165      { this->init(__sb); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       166      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       167  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       168  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       169      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       170      basic_ostream(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       171  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       172      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       173      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       174      basic_ostream& operator=(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       175  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       176      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       177      void swap(basic_ostream& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       178      { basic_ios<char_type, traits_type>::swap(__rhs); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       179  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       180  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       181      basic_ostream           (const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       182      basic_ostream& operator=(const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       183  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       184      basic_ostream           (const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       185      basic_ostream& operator=(const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       186  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       187  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       188  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       189      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       190      class _LIBCPP_TEMPLATE_VIS sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       191  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       192      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       193      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       194      basic_ostream& operator<<(basic_ostream& (*__pf)(basic_ostream&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       195      { return __pf(*this); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       197      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       198      basic_ostream& operator<<(basic_ios<char_type, traits_type>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       199                                (*__pf)(basic_ios<char_type,traits_type>&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       200      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       201  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       202      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       203      basic_ostream& operator<<(ios_base& (*__pf)(ios_base&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       204      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       206      basic_ostream& operator<<(bool __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       207      basic_ostream& operator<<(short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       208      basic_ostream& operator<<(unsigned short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       209      basic_ostream& operator<<(int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       210      basic_ostream& operator<<(unsigned int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       211      basic_ostream& operator<<(long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       212      basic_ostream& operator<<(unsigned long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       213      basic_ostream& operator<<(long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       214      basic_ostream& operator<<(unsigned long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       215      basic_ostream& operator<<(float __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       216      basic_ostream& operator<<(double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       217      basic_ostream& operator<<(long double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       218      basic_ostream& operator<<(const void* __p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       219      basic_ostream& operator<<(basic_streambuf<char_type, traits_type>* __sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       220  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       221      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       222      basic_ostream& put(char_type __c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       223      basic_ostream& write(const char_type* __s, streamsize __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       224      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       225  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       226      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       227      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       228      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       229      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       230      basic_ostream& seekp(pos_type __pos);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       231      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       232      basic_ostream& seekp(off_type __off, ios_base::seekdir __dir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       233  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       234  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       235      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       236      basic_ostream() {}  // extension, intentially does not initialize
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       237  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       238  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       239  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       240  class _LIBCPP_TEMPLATE_VIS basic_ostream<_CharT, _Traits>::sentry
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       241  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       242      bool __ok_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       243      basic_ostream<_CharT, _Traits>& __os_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       244  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       245      sentry(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       246      sentry& operator=(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       248  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       249      explicit sentry(basic_ostream<_CharT, _Traits>& __os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       250      ~sentry();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       251  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       252      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       253          _LIBCPP_EXPLICIT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       254          operator bool() const {return __ok_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       255  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       256  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       257  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       258  basic_ostream<_CharT, _Traits>::sentry::sentry(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       259      : __ok_(false),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       260        __os_(__os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       262      if (__os.good())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       263      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       264          if (__os.tie())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       265              __os.tie()->flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       266          __ok_ = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       267      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       268  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       269  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       270  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       271  basic_ostream<_CharT, _Traits>::sentry::~sentry()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       272  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       273      if (__os_.rdbuf() && __os_.good() && (__os_.flags() & ios_base::unitbuf)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       274                        && !uncaught_exception())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       275      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       276  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       277          try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       278          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       279  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       280              if (__os_.rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       281                  __os_.setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       282  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       283          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       284          catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       285          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       286          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       287  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       288      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       289  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       290  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       291  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       292  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       293  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       294  basic_ostream<_CharT, _Traits>::basic_ostream(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       295  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       296      this->move(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       297  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       298  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       299  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       300  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       301  basic_ostream<_CharT, _Traits>::operator=(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       302  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       303      swap(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       304      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       305  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       306  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       307  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       309  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       310  basic_ostream<_CharT, _Traits>::~basic_ostream()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       311  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       312  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       313  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       314  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       315  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       316  basic_ostream<_CharT, _Traits>::operator<<(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       317  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       318  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       319      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       320      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       321  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       322          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       323          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       324          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       325              if (__sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       326              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       327  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       328                  try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       329                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       330  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       331                      typedef istreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       332                      typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       333                      _Ip __i(__sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       334                      _Ip __eof;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       335                      _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       336                      size_t __c = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       337                      for (; __i != __eof; ++__i, ++__o, ++__c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       338                      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       339                          *__o = *__i;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       340                          if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       341                              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       342                      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       343                      if (__c == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       344                          this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       345  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       346                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       347                  catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       348                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       349                      this->__set_failbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       350                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       351  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       352              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       353              else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       354                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       355          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       356  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       357      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       358      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       359      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       360          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       361      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       362  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       363      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       364  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       365  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       366  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       367  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       368  basic_ostream<_CharT, _Traits>::operator<<(bool __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       369  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       370  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       371      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       372      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       373  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       374          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       375          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       376          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       377              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       378              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       379              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       380                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       381          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       382  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       383      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       384      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       385      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       386          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       387      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       388  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       389      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       390  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       391  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       392  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       393  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       394  basic_ostream<_CharT, _Traits>::operator<<(short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       395  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       396  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       397      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       398      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       399  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       400          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       401          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       402          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       403              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       404              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       405              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       406              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       407                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       408                          static_cast<long>(static_cast<unsigned short>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       409                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       410                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       411          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       412  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       413      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       414      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       415      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       416          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       417      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       418  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       419      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       420  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       421  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       422  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       423  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       424  basic_ostream<_CharT, _Traits>::operator<<(unsigned short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       425  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       426  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       427      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       428      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       429  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       430          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       431          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       432          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       433              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       434              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       435              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       436                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       437          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       438  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       439      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       440      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       441      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       442          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       443      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       444  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       445      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       446  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       447  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       448  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       449  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       450  basic_ostream<_CharT, _Traits>::operator<<(int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       451  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       452  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       453      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       454      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       455  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       456          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       457          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       458          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       459              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       460              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       461              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       462              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       463                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       464                          static_cast<long>(static_cast<unsigned int>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       465                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       466                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       467          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       468  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       469      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       470      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       471      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       472          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       473      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       474  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       475      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       476  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       477  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       478  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       479  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       480  basic_ostream<_CharT, _Traits>::operator<<(unsigned int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       481  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       482  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       483      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       484      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       485  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       486          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       487          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       488          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       489              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       490              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       491              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       492                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       493          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       494  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       495      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       496      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       497      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       498          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       499      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       500  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       501      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       502  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       504  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       505  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       506  basic_ostream<_CharT, _Traits>::operator<<(long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       507  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       508  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       509      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       510      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       511  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       512          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       513          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       514          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       515              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       516              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       517              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       518                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       519          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       520  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       521      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       522      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       523      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       524          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       525      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       526  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       527      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       528  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       529  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       530  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       531  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       532  basic_ostream<_CharT, _Traits>::operator<<(unsigned long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       533  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       534  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       535      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       536      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       537  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       538          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       539          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       540          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       541              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       542              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       543              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       544                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       545          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       546  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       547      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       548      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       549      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       550          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       551      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       552  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       553      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       554  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       555  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       556  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       557  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       558  basic_ostream<_CharT, _Traits>::operator<<(long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       559  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       560  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       561      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       562      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       563  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       564          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       565          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       566          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       567              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       568              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       569              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       570                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       571          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       572  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       573      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       574      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       575      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       576          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       577      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       578  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       579      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       580  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       581  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       582  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       583  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       584  basic_ostream<_CharT, _Traits>::operator<<(unsigned long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       585  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       586  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       587      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       588      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       589  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       590          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       591          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       592          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       593              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       594              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       595              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       596                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       597          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       598  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       599      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       600      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       601      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       602          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       603      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       604  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       605      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       606  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       607  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       608  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       609  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       610  basic_ostream<_CharT, _Traits>::operator<<(float __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       611  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       612  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       613      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       614      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       615  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       616          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       617          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       618          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       619              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       620              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       621              if (__f.put(*this, *this, this->fill(), static_cast<double>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       622                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       623          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       624  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       625      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       626      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       627      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       628          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       629      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       630  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       631      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       632  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       633  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       634  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       635  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       636  basic_ostream<_CharT, _Traits>::operator<<(double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       637  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       638  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       639      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       640      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       641  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       642          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       643          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       644          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       645              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       646              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       647              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       648                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       649          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       650  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       651      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       652      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       653      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       654          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       655      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       656  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       657      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       658  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       659  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       660  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       661  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       662  basic_ostream<_CharT, _Traits>::operator<<(long double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       663  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       664  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       665      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       666      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       667  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       668          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       669          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       670          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       671              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       672              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       673              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       674                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       675          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       676  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       677      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       678      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       679      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       680          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       681      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       682  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       683      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       684  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       685  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       686  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       687  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       688  basic_ostream<_CharT, _Traits>::operator<<(const void* __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       689  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       690  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       691      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       692      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       693  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       694          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       695          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       696          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       697              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       698              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       699              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       700                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       701          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       702  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       703      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       704      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       705      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       706          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       707      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       708  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       709      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       710  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       711  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       712  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       713  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       714  __put_character_sequence(basic_ostream<_CharT, _Traits>& __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       715                            const _CharT* __str, size_t __len)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       716  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       717  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       718      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       719      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       720  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       721          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       722          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       723          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       724              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       725              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       726                                   __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       727                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       728                                       __str + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       729                                       __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       730                                   __str + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       731                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       732                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       733                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       734          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       735  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       736      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       737      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       738      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       739          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       740      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       741  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       742      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       743  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       744  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       745  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       746  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       747  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       748  operator<<(basic_ostream<_CharT, _Traits>& __os, _CharT __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       750      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       751  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       753  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       754  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       755  operator<<(basic_ostream<_CharT, _Traits>& __os, char __cn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       756  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       757  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       758      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       759      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       760  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       761          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       762          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       763          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       764              _CharT __c = __os.widen(__cn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       765              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       766              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       767                                   &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       768                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       769                                       &__c + 1 :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       770                                       &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       771                                   &__c + 1,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       772                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       773                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       774                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       775          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       776  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       777      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       778      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       779      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       780          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       781      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       782  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       783      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       784  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       785  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       786  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       787  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       788  operator<<(basic_ostream<char, _Traits>& __os, char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       790      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       791  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       793  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       794  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       795  operator<<(basic_ostream<char, _Traits>& __os, signed char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       796  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       797      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       798  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       799  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       800  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       801  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       802  operator<<(basic_ostream<char, _Traits>& __os, unsigned char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       803  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       804      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       805  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       806  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       807  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       808  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       809  operator<<(basic_ostream<_CharT, _Traits>& __os, const _CharT* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       810  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       811      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       812  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       813  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       814  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       815  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       816  operator<<(basic_ostream<_CharT, _Traits>& __os, const char* __strn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       817  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       818  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       819      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       820      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       821  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       822          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       823          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       824          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       825              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       826              size_t __len = char_traits<char>::length(__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       827              const int __bs = 100;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       828              _CharT __wbb[__bs];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       829              _CharT* __wb = __wbb;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       830              unique_ptr<_CharT, void(*)(void*)> __h(0, free);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       831              if (__len > __bs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       832              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       833                  __wb = (_CharT*)malloc(__len*sizeof(_CharT));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       834                  if (__wb == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       835                      __throw_bad_alloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       836                  __h.reset(__wb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       837              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       838              for (_CharT* __p = __wb; *__strn != '\0'; ++__strn, ++__p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       839                  *__p = __os.widen(*__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       840              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       841                                   __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       842                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       843                                       __wb + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       844                                       __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       845                                   __wb + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       846                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       847                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       848                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       849          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       850  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       851      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       852      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       853      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       854          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       855      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       856  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       857      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       858  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       859  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       860  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       861  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       862  operator<<(basic_ostream<char, _Traits>& __os, const char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       863  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       864      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       865  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       866  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       867  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       868  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       869  operator<<(basic_ostream<char, _Traits>& __os, const signed char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       870  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       871      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       872      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       873  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       874  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       875  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       876  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       877  operator<<(basic_ostream<char, _Traits>& __os, const unsigned char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       878  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       879      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       880      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       881  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       882  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       883  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       884  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       885  basic_ostream<_CharT, _Traits>::put(char_type __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       886  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       887  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       888      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       889      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       890  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       891          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       892          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       893          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       894              typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       895              _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       896              *__o = __c;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       897              if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       898                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       899          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       900  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       901      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       902      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       903      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       904          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       905      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       906  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       907      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       908  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       909  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       910  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       911  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       912  basic_ostream<_CharT, _Traits>::write(const char_type* __s, streamsize __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       913  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       914  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       915      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       916      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       917  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       918          sentry __sen(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       919          if (__sen && __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       920          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       921              if (this->rdbuf()->sputn(__s, __n) != __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       922                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       923          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       924  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       925      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       926      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       927      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       928          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       929      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       930  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       931      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       932  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       933  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       934  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       935  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       936  basic_ostream<_CharT, _Traits>::flush()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       937  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       938  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       939      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       940      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       941  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       942          if (this->rdbuf())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       943          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       944              sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       945              if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       946              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       947                  if (this->rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       948                      this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       949              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       950          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       951  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       952      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       953      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       954      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       955          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       956      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       957  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       958      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       959  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       960  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       961  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       962  typename basic_ostream<_CharT, _Traits>::pos_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       963  basic_ostream<_CharT, _Traits>::tellp()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       964  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       965      if (this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       966          return pos_type(-1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       967      return this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::out);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       968  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       969  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       970  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       971  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       972  basic_ostream<_CharT, _Traits>::seekp(pos_type __pos)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       973  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       974      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       975      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       976      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       977          if (this->rdbuf()->pubseekpos(__pos, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       978              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       979      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       980      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       981  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       982  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       983  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       984  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       985  basic_ostream<_CharT, _Traits>::seekp(off_type __off, ios_base::seekdir __dir)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       986  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       987      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       988      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       989      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       990          if (this->rdbuf()->pubseekoff(__off, __dir, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       991              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       992      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       993      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       994  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       996  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       997  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       998  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       999  endl(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1000  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));
        ld.a    a4,[a2]
        ld.w    d15,[a4]-12
        addsc.a a4,a2,d15,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
        j       .L3
.L2:
        mov.a   a4,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
.L3:
        mov     d4,#10
        call    _ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc
        mov.aa  a4,a15
        mov     d4,d2
        call    _ZNSo3putEc

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1002      __os.flush();
        mov.aa  a4,a15
        call    _ZNSo5flushEv

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1003      return __os;      (inlined)
        j       .L4

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1004  }      (inlined)
.L4:

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       47  me <<endl;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       48   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       49     // box 2 的体积
        ld.d    e0,[a10]48
        ld.d    e2,[a10]32
        mul.df  e0,e0,e2
        ld.d    e2,[a10]40
        mul.df  e8,e0,e2

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       50     volume = Box2.height * Box2.length * Box2.breadth;
        movh.a  a4,#@his(_ZSt4cout)
        lea     a4,[a4]@los(_ZSt4cout)
        movh.a  a5,#@his(.2.str)
        lea     a5,[a5]@los(.2.str)
        call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
        mov.aa  a4,a2
        mov     e4,d9,d8
        call    _ZNSolsEd
        mov.aa  a15,a2

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
        jz.a    a2,.L5

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         2  //===-------------------------- ostream -----------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        11  #ifndef _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        12  #define _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        15      ostream synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        17  template <class charT, class traits = char_traits<charT> >
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        18  class basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        19      : virtual public basic_ios<charT,traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        20  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        21  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        22      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        23      typedef charT                          char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        24      typedef traits                         traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        25      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        26      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        27      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        28  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        29      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        30      explicit basic_ostream(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        31      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        32      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        34      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        35      basic_ostream& operator=(const basic_ostream& rhs) = delete; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        36      basic_ostream& operator=(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        37      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        38  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        39      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        40      class sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        41  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        42      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        43      basic_ostream& operator<<(basic_ostream& (*pf)(basic_ostream&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        44      basic_ostream& operator<<(basic_ios<charT, traits>& (*pf)(basic_ios<charT,traits>&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        45      basic_ostream& operator<<(ios_base& (*pf)(ios_base&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        46      basic_ostream& operator<<(bool n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        47      basic_ostream& operator<<(short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        48      basic_ostream& operator<<(unsigned short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        49      basic_ostream& operator<<(int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        50      basic_ostream& operator<<(unsigned int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        51      basic_ostream& operator<<(long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        52      basic_ostream& operator<<(unsigned long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        53      basic_ostream& operator<<(long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        54      basic_ostream& operator<<(unsigned long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        55      basic_ostream& operator<<(float f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        56      basic_ostream& operator<<(double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        57      basic_ostream& operator<<(long double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        58      basic_ostream& operator<<(const void* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        59      basic_ostream& operator<<(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        60  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        61      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        62      basic_ostream& put(char_type c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        63      basic_ostream& write(const char_type* s, streamsize n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        64      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        65  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        66      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        67      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        68      basic_ostream& seekp(pos_type);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        69      basic_ostream& seekp(off_type, ios_base::seekdir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        70  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        71      basic_ostream(const basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        72      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        73      // 27.7.3.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        74      basic_ostream& operator=(basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        75      basic_ostream& operator=(const basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        76      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        77  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        78  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        79  // 27.7.2.6.4 character inserters
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        80  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        81  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        82    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, charT);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        84  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        85    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        87  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        88    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        90  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        92  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        93    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, signed char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        95  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        96    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, unsigned char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        98  // NTBS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        99  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       100    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const charT*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       101  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       102  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       103    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       104  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       105  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       106    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       107  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       108  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       109  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       110  basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const signed char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       112  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       113    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const unsigned char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       115  // swap:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       116  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       117    void swap(basic_ostream<charT, traits>& x, basic_ostream<charT, traits>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       118  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       119  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       120    basic_ostream<charT,traits>& endl(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       121  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       122  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       123    basic_ostream<charT,traits>& ends(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       125  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       126    basic_ostream<charT,traits>& flush(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       127  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       128  // rvalue stream insertion
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       129  template <class charT, class traits, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       130    basic_ostream<charT, traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       131    operator<<(basic_ostream<charT, traits>&& os, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       132  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       133  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       134  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       135  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       136  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       137  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       138  #include <ios>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       139  #include <streambuf>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       140  #include <locale>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       141  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       142  #include <bitset>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       143  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       144  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       145  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       146  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       148  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       149  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       150  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       151  class _LIBCPP_TEMPLATE_VIS basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       152      : virtual public basic_ios<_CharT, _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       154  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       155      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       156      typedef _CharT                         char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       157      typedef _Traits                        traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       158      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       159      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       160      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       161  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       162      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       163      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       164      explicit basic_ostream(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       165      { this->init(__sb); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       166      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       167  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       168  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       169      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       170      basic_ostream(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       171  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       172      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       173      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       174      basic_ostream& operator=(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       175  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       176      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       177      void swap(basic_ostream& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       178      { basic_ios<char_type, traits_type>::swap(__rhs); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       179  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       180  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       181      basic_ostream           (const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       182      basic_ostream& operator=(const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       183  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       184      basic_ostream           (const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       185      basic_ostream& operator=(const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       186  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       187  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       188  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       189      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       190      class _LIBCPP_TEMPLATE_VIS sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       191  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       192      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       193      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       194      basic_ostream& operator<<(basic_ostream& (*__pf)(basic_ostream&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       195      { return __pf(*this); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       197      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       198      basic_ostream& operator<<(basic_ios<char_type, traits_type>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       199                                (*__pf)(basic_ios<char_type,traits_type>&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       200      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       201  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       202      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       203      basic_ostream& operator<<(ios_base& (*__pf)(ios_base&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       204      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       206      basic_ostream& operator<<(bool __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       207      basic_ostream& operator<<(short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       208      basic_ostream& operator<<(unsigned short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       209      basic_ostream& operator<<(int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       210      basic_ostream& operator<<(unsigned int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       211      basic_ostream& operator<<(long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       212      basic_ostream& operator<<(unsigned long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       213      basic_ostream& operator<<(long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       214      basic_ostream& operator<<(unsigned long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       215      basic_ostream& operator<<(float __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       216      basic_ostream& operator<<(double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       217      basic_ostream& operator<<(long double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       218      basic_ostream& operator<<(const void* __p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       219      basic_ostream& operator<<(basic_streambuf<char_type, traits_type>* __sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       220  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       221      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       222      basic_ostream& put(char_type __c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       223      basic_ostream& write(const char_type* __s, streamsize __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       224      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       225  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       226      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       227      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       228      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       229      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       230      basic_ostream& seekp(pos_type __pos);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       231      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       232      basic_ostream& seekp(off_type __off, ios_base::seekdir __dir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       233  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       234  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       235      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       236      basic_ostream() {}  // extension, intentially does not initialize
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       237  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       238  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       239  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       240  class _LIBCPP_TEMPLATE_VIS basic_ostream<_CharT, _Traits>::sentry
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       241  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       242      bool __ok_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       243      basic_ostream<_CharT, _Traits>& __os_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       244  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       245      sentry(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       246      sentry& operator=(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       248  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       249      explicit sentry(basic_ostream<_CharT, _Traits>& __os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       250      ~sentry();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       251  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       252      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       253          _LIBCPP_EXPLICIT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       254          operator bool() const {return __ok_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       255  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       256  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       257  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       258  basic_ostream<_CharT, _Traits>::sentry::sentry(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       259      : __ok_(false),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       260        __os_(__os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       262      if (__os.good())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       263      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       264          if (__os.tie())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       265              __os.tie()->flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       266          __ok_ = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       267      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       268  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       269  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       270  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       271  basic_ostream<_CharT, _Traits>::sentry::~sentry()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       272  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       273      if (__os_.rdbuf() && __os_.good() && (__os_.flags() & ios_base::unitbuf)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       274                        && !uncaught_exception())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       275      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       276  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       277          try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       278          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       279  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       280              if (__os_.rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       281                  __os_.setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       282  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       283          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       284          catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       285          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       286          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       287  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       288      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       289  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       290  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       291  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       292  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       293  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       294  basic_ostream<_CharT, _Traits>::basic_ostream(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       295  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       296      this->move(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       297  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       298  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       299  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       300  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       301  basic_ostream<_CharT, _Traits>::operator=(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       302  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       303      swap(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       304      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       305  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       306  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       307  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       309  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       310  basic_ostream<_CharT, _Traits>::~basic_ostream()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       311  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       312  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       313  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       314  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       315  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       316  basic_ostream<_CharT, _Traits>::operator<<(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       317  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       318  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       319      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       320      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       321  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       322          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       323          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       324          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       325              if (__sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       326              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       327  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       328                  try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       329                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       330  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       331                      typedef istreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       332                      typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       333                      _Ip __i(__sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       334                      _Ip __eof;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       335                      _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       336                      size_t __c = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       337                      for (; __i != __eof; ++__i, ++__o, ++__c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       338                      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       339                          *__o = *__i;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       340                          if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       341                              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       342                      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       343                      if (__c == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       344                          this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       345  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       346                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       347                  catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       348                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       349                      this->__set_failbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       350                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       351  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       352              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       353              else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       354                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       355          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       356  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       357      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       358      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       359      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       360          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       361      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       362  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       363      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       364  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       365  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       366  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       367  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       368  basic_ostream<_CharT, _Traits>::operator<<(bool __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       369  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       370  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       371      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       372      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       373  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       374          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       375          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       376          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       377              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       378              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       379              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       380                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       381          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       382  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       383      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       384      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       385      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       386          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       387      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       388  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       389      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       390  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       391  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       392  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       393  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       394  basic_ostream<_CharT, _Traits>::operator<<(short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       395  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       396  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       397      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       398      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       399  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       400          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       401          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       402          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       403              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       404              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       405              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       406              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       407                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       408                          static_cast<long>(static_cast<unsigned short>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       409                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       410                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       411          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       412  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       413      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       414      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       415      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       416          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       417      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       418  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       419      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       420  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       421  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       422  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       423  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       424  basic_ostream<_CharT, _Traits>::operator<<(unsigned short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       425  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       426  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       427      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       428      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       429  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       430          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       431          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       432          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       433              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       434              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       435              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       436                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       437          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       438  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       439      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       440      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       441      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       442          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       443      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       444  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       445      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       446  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       447  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       448  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       449  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       450  basic_ostream<_CharT, _Traits>::operator<<(int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       451  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       452  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       453      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       454      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       455  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       456          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       457          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       458          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       459              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       460              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       461              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       462              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       463                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       464                          static_cast<long>(static_cast<unsigned int>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       465                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       466                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       467          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       468  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       469      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       470      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       471      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       472          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       473      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       474  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       475      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       476  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       477  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       478  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       479  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       480  basic_ostream<_CharT, _Traits>::operator<<(unsigned int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       481  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       482  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       483      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       484      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       485  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       486          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       487          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       488          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       489              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       490              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       491              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       492                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       493          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       494  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       495      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       496      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       497      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       498          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       499      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       500  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       501      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       502  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       504  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       505  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       506  basic_ostream<_CharT, _Traits>::operator<<(long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       507  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       508  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       509      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       510      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       511  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       512          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       513          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       514          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       515              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       516              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       517              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       518                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       519          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       520  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       521      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       522      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       523      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       524          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       525      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       526  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       527      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       528  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       529  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       530  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       531  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       532  basic_ostream<_CharT, _Traits>::operator<<(unsigned long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       533  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       534  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       535      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       536      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       537  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       538          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       539          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       540          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       541              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       542              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       543              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       544                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       545          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       546  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       547      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       548      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       549      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       550          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       551      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       552  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       553      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       554  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       555  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       556  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       557  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       558  basic_ostream<_CharT, _Traits>::operator<<(long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       559  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       560  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       561      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       562      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       563  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       564          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       565          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       566          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       567              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       568              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       569              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       570                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       571          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       572  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       573      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       574      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       575      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       576          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       577      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       578  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       579      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       580  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       581  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       582  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       583  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       584  basic_ostream<_CharT, _Traits>::operator<<(unsigned long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       585  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       586  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       587      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       588      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       589  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       590          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       591          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       592          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       593              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       594              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       595              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       596                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       597          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       598  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       599      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       600      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       601      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       602          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       603      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       604  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       605      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       606  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       607  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       608  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       609  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       610  basic_ostream<_CharT, _Traits>::operator<<(float __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       611  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       612  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       613      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       614      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       615  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       616          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       617          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       618          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       619              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       620              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       621              if (__f.put(*this, *this, this->fill(), static_cast<double>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       622                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       623          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       624  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       625      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       626      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       627      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       628          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       629      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       630  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       631      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       632  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       633  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       634  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       635  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       636  basic_ostream<_CharT, _Traits>::operator<<(double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       637  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       638  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       639      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       640      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       641  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       642          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       643          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       644          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       645              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       646              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       647              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       648                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       649          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       650  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       651      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       652      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       653      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       654          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       655      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       656  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       657      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       658  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       659  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       660  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       661  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       662  basic_ostream<_CharT, _Traits>::operator<<(long double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       663  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       664  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       665      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       666      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       667  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       668          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       669          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       670          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       671              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       672              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       673              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       674                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       675          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       676  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       677      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       678      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       679      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       680          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       681      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       682  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       683      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       684  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       685  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       686  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       687  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       688  basic_ostream<_CharT, _Traits>::operator<<(const void* __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       689  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       690  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       691      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       692      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       693  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       694          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       695          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       696          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       697              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       698              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       699              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       700                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       701          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       702  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       703      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       704      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       705      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       706          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       707      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       708  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       709      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       710  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       711  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       712  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       713  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       714  __put_character_sequence(basic_ostream<_CharT, _Traits>& __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       715                            const _CharT* __str, size_t __len)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       716  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       717  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       718      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       719      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       720  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       721          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       722          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       723          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       724              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       725              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       726                                   __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       727                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       728                                       __str + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       729                                       __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       730                                   __str + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       731                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       732                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       733                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       734          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       735  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       736      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       737      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       738      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       739          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       740      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       741  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       742      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       743  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       744  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       745  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       746  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       747  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       748  operator<<(basic_ostream<_CharT, _Traits>& __os, _CharT __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       750      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       751  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       753  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       754  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       755  operator<<(basic_ostream<_CharT, _Traits>& __os, char __cn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       756  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       757  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       758      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       759      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       760  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       761          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       762          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       763          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       764              _CharT __c = __os.widen(__cn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       765              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       766              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       767                                   &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       768                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       769                                       &__c + 1 :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       770                                       &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       771                                   &__c + 1,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       772                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       773                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       774                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       775          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       776  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       777      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       778      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       779      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       780          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       781      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       782  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       783      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       784  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       785  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       786  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       787  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       788  operator<<(basic_ostream<char, _Traits>& __os, char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       790      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       791  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       793  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       794  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       795  operator<<(basic_ostream<char, _Traits>& __os, signed char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       796  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       797      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       798  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       799  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       800  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       801  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       802  operator<<(basic_ostream<char, _Traits>& __os, unsigned char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       803  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       804      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       805  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       806  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       807  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       808  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       809  operator<<(basic_ostream<_CharT, _Traits>& __os, const _CharT* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       810  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       811      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       812  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       813  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       814  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       815  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       816  operator<<(basic_ostream<_CharT, _Traits>& __os, const char* __strn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       817  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       818  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       819      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       820      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       821  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       822          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       823          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       824          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       825              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       826              size_t __len = char_traits<char>::length(__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       827              const int __bs = 100;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       828              _CharT __wbb[__bs];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       829              _CharT* __wb = __wbb;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       830              unique_ptr<_CharT, void(*)(void*)> __h(0, free);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       831              if (__len > __bs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       832              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       833                  __wb = (_CharT*)malloc(__len*sizeof(_CharT));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       834                  if (__wb == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       835                      __throw_bad_alloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       836                  __h.reset(__wb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       837              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       838              for (_CharT* __p = __wb; *__strn != '\0'; ++__strn, ++__p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       839                  *__p = __os.widen(*__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       840              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       841                                   __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       842                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       843                                       __wb + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       844                                       __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       845                                   __wb + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       846                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       847                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       848                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       849          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       850  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       851      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       852      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       853      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       854          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       855      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       856  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       857      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       858  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       859  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       860  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       861  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       862  operator<<(basic_ostream<char, _Traits>& __os, const char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       863  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       864      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       865  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       866  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       867  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       868  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       869  operator<<(basic_ostream<char, _Traits>& __os, const signed char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       870  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       871      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       872      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       873  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       874  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       875  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       876  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       877  operator<<(basic_ostream<char, _Traits>& __os, const unsigned char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       878  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       879      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       880      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       881  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       882  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       883  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       884  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       885  basic_ostream<_CharT, _Traits>::put(char_type __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       886  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       887  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       888      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       889      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       890  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       891          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       892          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       893          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       894              typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       895              _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       896              *__o = __c;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       897              if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       898                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       899          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       900  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       901      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       902      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       903      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       904          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       905      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       906  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       907      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       908  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       909  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       910  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       911  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       912  basic_ostream<_CharT, _Traits>::write(const char_type* __s, streamsize __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       913  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       914  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       915      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       916      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       917  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       918          sentry __sen(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       919          if (__sen && __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       920          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       921              if (this->rdbuf()->sputn(__s, __n) != __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       922                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       923          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       924  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       925      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       926      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       927      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       928          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       929      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       930  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       931      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       932  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       933  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       934  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       935  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       936  basic_ostream<_CharT, _Traits>::flush()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       937  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       938  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       939      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       940      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       941  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       942          if (this->rdbuf())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       943          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       944              sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       945              if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       946              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       947                  if (this->rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       948                      this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       949              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       950          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       951  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       952      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       953      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       954      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       955          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       956      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       957  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       958      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       959  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       960  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       961  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       962  typename basic_ostream<_CharT, _Traits>::pos_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       963  basic_ostream<_CharT, _Traits>::tellp()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       964  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       965      if (this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       966          return pos_type(-1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       967      return this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::out);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       968  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       969  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       970  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       971  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       972  basic_ostream<_CharT, _Traits>::seekp(pos_type __pos)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       973  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       974      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       975      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       976      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       977          if (this->rdbuf()->pubseekpos(__pos, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       978              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       979      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       980      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       981  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       982  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       983  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       984  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       985  basic_ostream<_CharT, _Traits>::seekp(off_type __off, ios_base::seekdir __dir)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       986  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       987      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       988      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       989      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       990          if (this->rdbuf()->pubseekoff(__off, __dir, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       991              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       992      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       993      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       994  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       996  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       997  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       998  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       999  endl(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1000  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));
        ld.a    a4,[a2]
        ld.w    d15,[a4]-12
        addsc.a a4,a2,d15,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
        j       .L6
.L5:
        mov.a   a4,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
.L6:
        mov     d4,#10
        call    _ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc
        mov.aa  a4,a15
        mov     d4,d2
        call    _ZNSo3putEc

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1002      __os.flush();
        mov.aa  a4,a15
        call    _ZNSo5flushEv

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1003      return __os;      (inlined)
        j       .L7

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1004  }      (inlined)
.L7:

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       51  readth;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       52     cout << "Box2 的体积：" << volume <<endl;
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       53   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       54   
        ld.d    e0,.9.cnt
        st.d    [a10]0,e0
        lea     a4,[a10]56
        ld.d    e4,.11.cnt
        ld.d    e6,.12.cnt
        call    _ZN3Box3setEddd

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       55     // box 3 详述
        lea     a4,[a10]56
        call    _ZN3Box3getEv
        mov     e8,d3,d2

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       56     Box3.set(16.0, 8.0, 12.0); 
        movh.a  a4,#@his(_ZSt4cout)
        lea     a4,[a4]@los(_ZSt4cout)
        movh.a  a5,#@his(.3.str)
        lea     a5,[a5]@los(.3.str)
        call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
        mov.aa  a4,a2
        mov     e4,d9,d8
        call    _ZNSolsEd
        mov.aa  a15,a2

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
        jz.a    a2,.L8

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         2  //===-------------------------- ostream -----------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        11  #ifndef _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        12  #define _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        15      ostream synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        17  template <class charT, class traits = char_traits<charT> >
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        18  class basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        19      : virtual public basic_ios<charT,traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        20  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        21  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        22      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        23      typedef charT                          char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        24      typedef traits                         traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        25      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        26      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        27      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        28  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        29      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        30      explicit basic_ostream(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        31      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        32      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        34      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        35      basic_ostream& operator=(const basic_ostream& rhs) = delete; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        36      basic_ostream& operator=(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        37      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        38  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        39      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        40      class sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        41  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        42      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        43      basic_ostream& operator<<(basic_ostream& (*pf)(basic_ostream&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        44      basic_ostream& operator<<(basic_ios<charT, traits>& (*pf)(basic_ios<charT,traits>&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        45      basic_ostream& operator<<(ios_base& (*pf)(ios_base&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        46      basic_ostream& operator<<(bool n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        47      basic_ostream& operator<<(short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        48      basic_ostream& operator<<(unsigned short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        49      basic_ostream& operator<<(int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        50      basic_ostream& operator<<(unsigned int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        51      basic_ostream& operator<<(long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        52      basic_ostream& operator<<(unsigned long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        53      basic_ostream& operator<<(long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        54      basic_ostream& operator<<(unsigned long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        55      basic_ostream& operator<<(float f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        56      basic_ostream& operator<<(double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        57      basic_ostream& operator<<(long double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        58      basic_ostream& operator<<(const void* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        59      basic_ostream& operator<<(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        60  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        61      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        62      basic_ostream& put(char_type c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        63      basic_ostream& write(const char_type* s, streamsize n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        64      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        65  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        66      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        67      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        68      basic_ostream& seekp(pos_type);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        69      basic_ostream& seekp(off_type, ios_base::seekdir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        70  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        71      basic_ostream(const basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        72      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        73      // 27.7.3.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        74      basic_ostream& operator=(basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        75      basic_ostream& operator=(const basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        76      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        77  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        78  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        79  // 27.7.2.6.4 character inserters
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        80  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        81  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        82    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, charT);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        84  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        85    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        87  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        88    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        90  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        92  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        93    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, signed char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        95  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        96    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, unsigned char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        98  // NTBS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        99  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       100    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const charT*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       101  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       102  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       103    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       104  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       105  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       106    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       107  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       108  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       109  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       110  basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const signed char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       112  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       113    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const unsigned char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       115  // swap:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       116  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       117    void swap(basic_ostream<charT, traits>& x, basic_ostream<charT, traits>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       118  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       119  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       120    basic_ostream<charT,traits>& endl(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       121  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       122  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       123    basic_ostream<charT,traits>& ends(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       125  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       126    basic_ostream<charT,traits>& flush(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       127  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       128  // rvalue stream insertion
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       129  template <class charT, class traits, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       130    basic_ostream<charT, traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       131    operator<<(basic_ostream<charT, traits>&& os, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       132  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       133  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       134  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       135  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       136  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       137  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       138  #include <ios>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       139  #include <streambuf>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       140  #include <locale>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       141  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       142  #include <bitset>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       143  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       144  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       145  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       146  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       148  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       149  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       150  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       151  class _LIBCPP_TEMPLATE_VIS basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       152      : virtual public basic_ios<_CharT, _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       154  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       155      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       156      typedef _CharT                         char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       157      typedef _Traits                        traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       158      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       159      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       160      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       161  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       162      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       163      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       164      explicit basic_ostream(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       165      { this->init(__sb); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       166      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       167  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       168  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       169      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       170      basic_ostream(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       171  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       172      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       173      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       174      basic_ostream& operator=(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       175  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       176      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       177      void swap(basic_ostream& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       178      { basic_ios<char_type, traits_type>::swap(__rhs); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       179  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       180  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       181      basic_ostream           (const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       182      basic_ostream& operator=(const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       183  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       184      basic_ostream           (const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       185      basic_ostream& operator=(const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       186  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       187  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       188  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       189      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       190      class _LIBCPP_TEMPLATE_VIS sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       191  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       192      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       193      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       194      basic_ostream& operator<<(basic_ostream& (*__pf)(basic_ostream&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       195      { return __pf(*this); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       197      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       198      basic_ostream& operator<<(basic_ios<char_type, traits_type>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       199                                (*__pf)(basic_ios<char_type,traits_type>&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       200      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       201  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       202      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       203      basic_ostream& operator<<(ios_base& (*__pf)(ios_base&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       204      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       206      basic_ostream& operator<<(bool __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       207      basic_ostream& operator<<(short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       208      basic_ostream& operator<<(unsigned short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       209      basic_ostream& operator<<(int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       210      basic_ostream& operator<<(unsigned int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       211      basic_ostream& operator<<(long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       212      basic_ostream& operator<<(unsigned long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       213      basic_ostream& operator<<(long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       214      basic_ostream& operator<<(unsigned long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       215      basic_ostream& operator<<(float __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       216      basic_ostream& operator<<(double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       217      basic_ostream& operator<<(long double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       218      basic_ostream& operator<<(const void* __p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       219      basic_ostream& operator<<(basic_streambuf<char_type, traits_type>* __sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       220  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       221      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       222      basic_ostream& put(char_type __c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       223      basic_ostream& write(const char_type* __s, streamsize __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       224      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       225  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       226      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       227      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       228      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       229      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       230      basic_ostream& seekp(pos_type __pos);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       231      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       232      basic_ostream& seekp(off_type __off, ios_base::seekdir __dir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       233  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       234  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       235      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       236      basic_ostream() {}  // extension, intentially does not initialize
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       237  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       238  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       239  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       240  class _LIBCPP_TEMPLATE_VIS basic_ostream<_CharT, _Traits>::sentry
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       241  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       242      bool __ok_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       243      basic_ostream<_CharT, _Traits>& __os_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       244  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       245      sentry(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       246      sentry& operator=(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       248  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       249      explicit sentry(basic_ostream<_CharT, _Traits>& __os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       250      ~sentry();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       251  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       252      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       253          _LIBCPP_EXPLICIT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       254          operator bool() const {return __ok_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       255  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       256  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       257  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       258  basic_ostream<_CharT, _Traits>::sentry::sentry(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       259      : __ok_(false),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       260        __os_(__os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       262      if (__os.good())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       263      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       264          if (__os.tie())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       265              __os.tie()->flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       266          __ok_ = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       267      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       268  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       269  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       270  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       271  basic_ostream<_CharT, _Traits>::sentry::~sentry()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       272  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       273      if (__os_.rdbuf() && __os_.good() && (__os_.flags() & ios_base::unitbuf)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       274                        && !uncaught_exception())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       275      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       276  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       277          try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       278          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       279  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       280              if (__os_.rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       281                  __os_.setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       282  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       283          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       284          catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       285          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       286          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       287  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       288      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       289  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       290  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       291  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       292  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       293  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       294  basic_ostream<_CharT, _Traits>::basic_ostream(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       295  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       296      this->move(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       297  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       298  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       299  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       300  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       301  basic_ostream<_CharT, _Traits>::operator=(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       302  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       303      swap(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       304      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       305  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       306  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       307  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       309  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       310  basic_ostream<_CharT, _Traits>::~basic_ostream()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       311  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       312  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       313  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       314  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       315  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       316  basic_ostream<_CharT, _Traits>::operator<<(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       317  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       318  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       319      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       320      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       321  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       322          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       323          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       324          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       325              if (__sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       326              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       327  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       328                  try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       329                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       330  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       331                      typedef istreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       332                      typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       333                      _Ip __i(__sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       334                      _Ip __eof;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       335                      _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       336                      size_t __c = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       337                      for (; __i != __eof; ++__i, ++__o, ++__c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       338                      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       339                          *__o = *__i;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       340                          if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       341                              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       342                      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       343                      if (__c == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       344                          this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       345  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       346                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       347                  catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       348                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       349                      this->__set_failbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       350                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       351  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       352              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       353              else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       354                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       355          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       356  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       357      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       358      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       359      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       360          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       361      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       362  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       363      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       364  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       365  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       366  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       367  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       368  basic_ostream<_CharT, _Traits>::operator<<(bool __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       369  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       370  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       371      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       372      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       373  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       374          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       375          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       376          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       377              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       378              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       379              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       380                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       381          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       382  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       383      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       384      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       385      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       386          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       387      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       388  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       389      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       390  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       391  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       392  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       393  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       394  basic_ostream<_CharT, _Traits>::operator<<(short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       395  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       396  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       397      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       398      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       399  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       400          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       401          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       402          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       403              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       404              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       405              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       406              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       407                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       408                          static_cast<long>(static_cast<unsigned short>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       409                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       410                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       411          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       412  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       413      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       414      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       415      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       416          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       417      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       418  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       419      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       420  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       421  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       422  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       423  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       424  basic_ostream<_CharT, _Traits>::operator<<(unsigned short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       425  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       426  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       427      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       428      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       429  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       430          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       431          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       432          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       433              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       434              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       435              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       436                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       437          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       438  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       439      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       440      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       441      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       442          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       443      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       444  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       445      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       446  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       447  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       448  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       449  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       450  basic_ostream<_CharT, _Traits>::operator<<(int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       451  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       452  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       453      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       454      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       455  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       456          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       457          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       458          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       459              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       460              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       461              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       462              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       463                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       464                          static_cast<long>(static_cast<unsigned int>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       465                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       466                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       467          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       468  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       469      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       470      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       471      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       472          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       473      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       474  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       475      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       476  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       477  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       478  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       479  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       480  basic_ostream<_CharT, _Traits>::operator<<(unsigned int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       481  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       482  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       483      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       484      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       485  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       486          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       487          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       488          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       489              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       490              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       491              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       492                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       493          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       494  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       495      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       496      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       497      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       498          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       499      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       500  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       501      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       502  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       504  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       505  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       506  basic_ostream<_CharT, _Traits>::operator<<(long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       507  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       508  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       509      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       510      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       511  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       512          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       513          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       514          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       515              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       516              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       517              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       518                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       519          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       520  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       521      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       522      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       523      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       524          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       525      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       526  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       527      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       528  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       529  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       530  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       531  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       532  basic_ostream<_CharT, _Traits>::operator<<(unsigned long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       533  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       534  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       535      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       536      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       537  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       538          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       539          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       540          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       541              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       542              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       543              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       544                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       545          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       546  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       547      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       548      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       549      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       550          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       551      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       552  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       553      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       554  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       555  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       556  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       557  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       558  basic_ostream<_CharT, _Traits>::operator<<(long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       559  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       560  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       561      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       562      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       563  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       564          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       565          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       566          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       567              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       568              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       569              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       570                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       571          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       572  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       573      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       574      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       575      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       576          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       577      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       578  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       579      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       580  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       581  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       582  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       583  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       584  basic_ostream<_CharT, _Traits>::operator<<(unsigned long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       585  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       586  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       587      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       588      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       589  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       590          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       591          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       592          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       593              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       594              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       595              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       596                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       597          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       598  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       599      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       600      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       601      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       602          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       603      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       604  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       605      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       606  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       607  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       608  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       609  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       610  basic_ostream<_CharT, _Traits>::operator<<(float __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       611  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       612  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       613      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       614      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       615  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       616          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       617          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       618          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       619              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       620              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       621              if (__f.put(*this, *this, this->fill(), static_cast<double>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       622                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       623          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       624  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       625      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       626      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       627      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       628          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       629      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       630  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       631      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       632  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       633  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       634  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       635  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       636  basic_ostream<_CharT, _Traits>::operator<<(double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       637  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       638  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       639      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       640      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       641  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       642          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       643          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       644          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       645              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       646              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       647              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       648                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       649          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       650  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       651      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       652      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       653      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       654          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       655      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       656  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       657      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       658  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       659  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       660  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       661  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       662  basic_ostream<_CharT, _Traits>::operator<<(long double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       663  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       664  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       665      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       666      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       667  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       668          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       669          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       670          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       671              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       672              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       673              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       674                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       675          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       676  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       677      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       678      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       679      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       680          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       681      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       682  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       683      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       684  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       685  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       686  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       687  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       688  basic_ostream<_CharT, _Traits>::operator<<(const void* __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       689  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       690  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       691      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       692      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       693  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       694          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       695          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       696          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       697              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       698              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       699              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       700                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       701          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       702  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       703      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       704      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       705      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       706          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       707      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       708  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       709      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       710  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       711  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       712  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       713  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       714  __put_character_sequence(basic_ostream<_CharT, _Traits>& __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       715                            const _CharT* __str, size_t __len)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       716  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       717  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       718      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       719      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       720  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       721          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       722          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       723          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       724              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       725              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       726                                   __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       727                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       728                                       __str + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       729                                       __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       730                                   __str + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       731                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       732                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       733                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       734          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       735  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       736      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       737      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       738      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       739          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       740      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       741  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       742      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       743  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       744  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       745  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       746  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       747  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       748  operator<<(basic_ostream<_CharT, _Traits>& __os, _CharT __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       750      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       751  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       753  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       754  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       755  operator<<(basic_ostream<_CharT, _Traits>& __os, char __cn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       756  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       757  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       758      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       759      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       760  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       761          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       762          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       763          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       764              _CharT __c = __os.widen(__cn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       765              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       766              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       767                                   &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       768                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       769                                       &__c + 1 :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       770                                       &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       771                                   &__c + 1,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       772                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       773                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       774                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       775          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       776  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       777      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       778      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       779      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       780          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       781      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       782  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       783      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       784  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       785  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       786  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       787  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       788  operator<<(basic_ostream<char, _Traits>& __os, char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       790      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       791  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       793  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       794  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       795  operator<<(basic_ostream<char, _Traits>& __os, signed char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       796  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       797      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       798  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       799  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       800  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       801  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       802  operator<<(basic_ostream<char, _Traits>& __os, unsigned char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       803  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       804      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       805  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       806  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       807  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       808  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       809  operator<<(basic_ostream<_CharT, _Traits>& __os, const _CharT* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       810  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       811      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       812  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       813  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       814  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       815  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       816  operator<<(basic_ostream<_CharT, _Traits>& __os, const char* __strn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       817  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       818  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       819      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       820      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       821  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       822          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       823          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       824          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       825              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       826              size_t __len = char_traits<char>::length(__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       827              const int __bs = 100;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       828              _CharT __wbb[__bs];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       829              _CharT* __wb = __wbb;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       830              unique_ptr<_CharT, void(*)(void*)> __h(0, free);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       831              if (__len > __bs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       832              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       833                  __wb = (_CharT*)malloc(__len*sizeof(_CharT));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       834                  if (__wb == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       835                      __throw_bad_alloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       836                  __h.reset(__wb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       837              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       838              for (_CharT* __p = __wb; *__strn != '\0'; ++__strn, ++__p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       839                  *__p = __os.widen(*__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       840              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       841                                   __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       842                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       843                                       __wb + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       844                                       __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       845                                   __wb + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       846                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       847                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       848                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       849          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       850  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       851      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       852      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       853      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       854          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       855      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       856  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       857      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       858  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       859  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       860  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       861  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       862  operator<<(basic_ostream<char, _Traits>& __os, const char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       863  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       864      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       865  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       866  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       867  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       868  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       869  operator<<(basic_ostream<char, _Traits>& __os, const signed char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       870  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       871      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       872      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       873  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       874  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       875  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       876  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       877  operator<<(basic_ostream<char, _Traits>& __os, const unsigned char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       878  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       879      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       880      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       881  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       882  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       883  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       884  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       885  basic_ostream<_CharT, _Traits>::put(char_type __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       886  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       887  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       888      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       889      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       890  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       891          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       892          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       893          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       894              typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       895              _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       896              *__o = __c;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       897              if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       898                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       899          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       900  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       901      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       902      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       903      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       904          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       905      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       906  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       907      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       908  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       909  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       910  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       911  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       912  basic_ostream<_CharT, _Traits>::write(const char_type* __s, streamsize __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       913  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       914  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       915      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       916      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       917  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       918          sentry __sen(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       919          if (__sen && __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       920          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       921              if (this->rdbuf()->sputn(__s, __n) != __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       922                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       923          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       924  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       925      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       926      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       927      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       928          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       929      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       930  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       931      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       932  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       933  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       934  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       935  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       936  basic_ostream<_CharT, _Traits>::flush()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       937  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       938  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       939      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       940      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       941  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       942          if (this->rdbuf())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       943          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       944              sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       945              if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       946              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       947                  if (this->rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       948                      this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       949              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       950          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       951  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       952      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       953      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       954      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       955          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       956      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       957  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       958      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       959  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       960  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       961  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       962  typename basic_ostream<_CharT, _Traits>::pos_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       963  basic_ostream<_CharT, _Traits>::tellp()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       964  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       965      if (this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       966          return pos_type(-1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       967      return this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::out);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       968  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       969  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       970  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       971  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       972  basic_ostream<_CharT, _Traits>::seekp(pos_type __pos)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       973  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       974      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       975      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       976      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       977          if (this->rdbuf()->pubseekpos(__pos, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       978              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       979      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       980      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       981  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       982  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       983  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       984  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       985  basic_ostream<_CharT, _Traits>::seekp(off_type __off, ios_base::seekdir __dir)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       986  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       987      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       988      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       989      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       990          if (this->rdbuf()->pubseekoff(__off, __dir, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       991              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       992      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       993      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       994  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       996  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       997  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       998  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       999  endl(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1000  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));
        ld.a    a4,[a2]
        ld.w    d15,[a4]-12
        addsc.a a4,a2,d15,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
        j       .L9
.L8:
        mov.a   a4,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));      (inlined)
.L9:
        mov     d4,#10
        call    _ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc
        mov.aa  a4,a15
        mov     d4,d2
        call    _ZNSo3putEc

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1002      __os.flush();
        mov.aa  a4,a15
        call    _ZNSo5flushEv

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1003      return __os;      (inlined)
        j       .L10

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1004  }      (inlined)
.L10:

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       57  ; 
        mov     d2,#0
        j       .L11

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       58     volume = Box3.get(); 
.L11:
        ret

__main_function_end:
        ; End of function

; Function _ZN3Box3getEv
_ZN3Box3getEv:  .type       func
        ld.d    e0,[a4]0
        ld.d    e2,[a4]8
        mul.df  e0,e0,e2
        ld.d    e2,[a4]16
        mul.df  e2,e0,e2
        j       .L12
.L12:
        ret

___ZN3Box3getEv_function_end:
        ; End of function

; Function _ZN3Box3setEddd
_ZN3Box3setEddd:        .type   func
        ld.d    e0,[a10]0
        st.d    [a4]0,e4
        st.d    [a4]8,e6
        st.d    [a4]16,e0
        ret

___ZN3Box3setEddd_function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       2  //===--------------------------- stdexcept --------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept       9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      11  #ifndef _LIBCPP_STDEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      12  #define _LIBCPP_STDEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      15      stdexcept synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      17  namespace std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      18  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      19  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      20  class logic_error;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      21      class domain_error;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      22      class invalid_argument;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      23      class length_error;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      24      class out_of_range;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      25  class runtime_error;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      26      class range_error;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      27      class overflow_error;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      28      class underflow_error;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      29  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      30  for each class xxx_error:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      31  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      32  class xxx_error : public exception // at least indirectly
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      33  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      34  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      35      explicit xxx_error(const string& what_arg);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      36      explicit xxx_error(const char*   what_arg);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      37  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      38      virtual const char* what() const noexcept // returns what_arg
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      39  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      40  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      41  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      42  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      43  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      44  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      45  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      46  #include <exception>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      47  #include <iosfwd>  // for string forward decl
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      48  #ifdef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      49  #include <cstdlib>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      50  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      51  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      52  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      53  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      54  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      55  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      56  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      57  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      58  class _LIBCPP_HIDDEN __libcpp_refstring
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      59  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      60      const char* __imp_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      61  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      62      bool __uses_refcount() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      63  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      64      explicit __libcpp_refstring(const char* __msg);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      65      __libcpp_refstring(const __libcpp_refstring& __s) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      66      __libcpp_refstring& operator=(const __libcpp_refstring& __s) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      67      ~__libcpp_refstring();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      68  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      69      const char* c_str() const _NOEXCEPT {return __imp_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      70  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      71  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      72  _LIBCPP_END_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      73  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      74  namespace std  // purposefully not using versioning namespace
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      75  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      76  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      77  class _LIBCPP_EXCEPTION_ABI logic_error
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      78      : public exception
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      79  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      80  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      81      _VSTD::__libcpp_refstring __imp_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      82  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      83      explicit logic_error(const string&);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      84      explicit logic_error(const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      85  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      86      logic_error(const logic_error&) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      87      logic_error& operator=(const logic_error&) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      88  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      89      virtual ~logic_error() _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      90  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      91      virtual const char* what() const _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      92  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      93  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      94  class _LIBCPP_EXCEPTION_ABI runtime_error
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      95      : public exception
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      96  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      97  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      98      _VSTD::__libcpp_refstring __imp_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept      99  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     100      explicit runtime_error(const string&);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     101      explicit runtime_error(const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     102  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     103      runtime_error(const runtime_error&) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     104      runtime_error& operator=(const runtime_error&) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     105  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     106      virtual ~runtime_error() _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     107  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     108      virtual const char* what() const _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     109  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     110  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     111  class _LIBCPP_EXCEPTION_ABI domain_error
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     112      : public logic_error
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     113  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     114  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     115      _LIBCPP_INLINE_VISIBILITY explicit domain_error(const string& __s) : logic_error(__s) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     116      _LIBCPP_INLINE_VISIBILITY explicit domain_error(const char* __s)   : logic_error(__s) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     117  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     118      virtual ~domain_error() _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     119  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     120  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     121  class _LIBCPP_EXCEPTION_ABI invalid_argument
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     122      : public logic_error
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     123  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     124  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     125      _LIBCPP_INLINE_VISIBILITY explicit invalid_argument(const string& __s) : logic_error(__s) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     126      _LIBCPP_INLINE_VISIBILITY explicit invalid_argument(const char* __s)   : logic_error(__s) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     127  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     128      virtual ~invalid_argument() _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     129  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     130  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     131  class _LIBCPP_EXCEPTION_ABI length_error
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     132      : public logic_error
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     133  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     134  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     135      _LIBCPP_INLINE_VISIBILITY explicit length_error(const string& __s) : logic_error(__s) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\stdexcept     136      _LIBCPP_INLINE_VISIBILITY explicit length_error(const char* __s)   : logic_error(__s) {}
; Function _ZNSt12length_errorC1EPKc
_ZNSt12length_errorC1EPKc:      .type       func
        sub.a   a10,#88
        mov.aa  a12,a4
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]4,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]4
        st.a    [a15],a2
        mov     d15,#1
        st.b    [a10]8,d15
        movh.a  a15,#@his(.4._ZNSt12length_errorC1EPKc.__T4)
        lea     a15,[a15]@los(.4._ZNSt12length_errorC1EPKc.__T4)
        st.a    [a10]12,a15
        lea     a15,[a10]0
        st.a    [a10]16,a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a15]0
        st.h    [a10]24,d15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d15,#65535
        st.h    [a15],d15
        mov.aa  a4,a12
        call    _ZNSt11logic_errorC2EPKc
        st.a    [a10],a12
        movh.a  a15,#@his(_ZTVSt12length_error)
        lea     a15,[a15]@los(_ZTVSt12length_error)
        lea     a15,[a15]8
        st.a    [a12],a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a10]24
        st.h    [a15],d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]4
        st.a    [a15],a2
        ret

___ZNSt12length_errorC1EPKc_function_end:
        ; End of function

; Function _ZNSt12length_errorC2EPKc
_ZNSt12length_errorC2EPKc:      .type       func
        sub.a   a10,#88
        mov.aa  a12,a4
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]4,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]4
        st.a    [a15],a2
        mov     d15,#1
        st.b    [a10]8,d15
        movh.a  a15,#@his(.4._ZNSt12length_errorC1EPKc.__T4)
        lea     a15,[a15]@los(.4._ZNSt12length_errorC1EPKc.__T4)
        st.a    [a10]12,a15
        lea     a15,[a10]0
        st.a    [a10]16,a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a15]0
        st.h    [a10]24,d15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d15,#65535
        st.h    [a15],d15
        mov.aa  a4,a12
        call    _ZNSt11logic_errorC2EPKc
        st.a    [a10],a12
        movh.a  a15,#@his(_ZTVSt12length_error)
        lea     a15,[a15]@los(_ZTVSt12length_error)
        lea     a15,[a15]8
        st.a    [a12],a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a10]24
        st.h    [a15],d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]4
        st.a    [a15],a2
        ret

___ZNSt12length_errorC2EPKc_function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        2  //===-------------------------- __string ----------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        6  // This file is distributed under the University of Illinois Open Source
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        7  // License. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string        9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       11  #ifndef _LIBCPP___STRING
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       12  #define _LIBCPP___STRING
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       15      string synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       17  namespace std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       18  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       19  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       20  template <class charT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       21  struct char_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       22  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       23      typedef charT     char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       24      typedef ...       int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       25      typedef streamoff off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       26      typedef streampos pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       27      typedef mbstate_t state_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       28  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       29      static constexpr void assign(char_type& c1, const char_type& c2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       30      static constexpr bool eq(char_type c1, char_type c2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       31      static constexpr bool lt(char_type c1, char_type c2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       32  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       33      static constexpr int    compare(const char_type* s1, const char_type* s2, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       34      static constexpr size_t length(const char_type* s);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       35      static constexpr const char_type* 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       36                              find(const char_type* s, size_t n, const char_type& a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       37      static char_type*       move(char_type* s1, const char_type* s2, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       38      static char_type*       copy(char_type* s1, const char_type* s2, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       39      static char_type*       assign(char_type* s, size_t n, char_type a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       40  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       41      static constexpr int_type  not_eof(int_type c) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       42      static constexpr char_type to_char_type(int_type c) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       43      static constexpr int_type  to_int_type(char_type c) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       44      static constexpr bool      eq_int_type(int_type c1, int_type c2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       45      static constexpr int_type  eof() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       46  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       47  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       48  template <> struct char_traits<char>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       49  template <> struct char_traits<wchar_t>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       50  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       51  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       52  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       53  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       54  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       55  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       56  #include <algorithm>  // for search and min
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       57  #include <cstdio>     // For EOF.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       58  #include <memory>     // for __murmur2_or_cityhash
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       59  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       60  #include <__debug>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       61  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       62  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       63  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       64  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       65  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       66  _LIBCPP_PUSH_MACROS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       67  #include <__undef_macros>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       68  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       69  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       70  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       71  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       72  // char_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       73  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       74  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       75  struct _LIBCPP_TEMPLATE_VIS char_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       76  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       77      typedef _CharT    char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       78      typedef int       int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       79      typedef streamoff off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       80      typedef streampos pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       81      typedef mbstate_t state_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       82  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       83      static inline void _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       84          assign(char_type& __c1, const char_type& __c2) _NOEXCEPT {__c1 = __c2;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       85      static inline _LIBCPP_CONSTEXPR bool eq(char_type __c1, char_type __c2) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       86          {return __c1 == __c2;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       87      static inline _LIBCPP_CONSTEXPR bool lt(char_type __c1, char_type __c2) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       88          {return __c1 < __c2;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       90      static _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       91      int compare(const char_type* __s1, const char_type* __s2, size_t __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       92      _LIBCPP_INLINE_VISIBILITY static _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       93      size_t length(const char_type* __s);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       94      _LIBCPP_INLINE_VISIBILITY static _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       95      const char_type* find(const char_type* __s, size_t __n, const char_type& __a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       96      static char_type*       move(char_type* __s1, const char_type* __s2, size_t __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       97      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       98      static char_type*       copy(char_type* __s1, const char_type* __s2, size_t __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string       99      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      100      static char_type*       assign(char_type* __s, size_t __n, char_type __a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      101  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      102      static inline _LIBCPP_CONSTEXPR int_type  not_eof(int_type __c) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      103          {return eq_int_type(__c, eof()) ? ~eof() : __c;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      104      static inline _LIBCPP_CONSTEXPR char_type to_char_type(int_type __c) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      105          {return char_type(__c);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      106      static inline _LIBCPP_CONSTEXPR int_type  to_int_type(char_type __c) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      107          {return int_type(__c);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      108      static inline _LIBCPP_CONSTEXPR bool      eq_int_type(int_type __c1, int_type __c2) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      109          {return __c1 == __c2;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      110      static inline _LIBCPP_CONSTEXPR int_type  eof() _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      111          {return int_type(EOF);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      112  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      113  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      114  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      115  _LIBCPP_CONSTEXPR_AFTER_CXX14 int
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      116  char_traits<_CharT>::compare(const char_type* __s1, const char_type* __s2, size_t __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      117  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      118      for (; __n; --__n, ++__s1, ++__s2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      119      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      120          if (lt(*__s1, *__s2))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      121              return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      122          if (lt(*__s2, *__s1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      123              return 1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      124      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      125      return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      126  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      127  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      128  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      129  inline
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      130  _LIBCPP_CONSTEXPR_AFTER_CXX14 size_t
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      131  char_traits<_CharT>::length(const char_type* __s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      132  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      133      size_t __len = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      134      for (; !eq(*__s, char_type(0)); ++__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      135          ++__len;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      136      return __len;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      137  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      138  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      139  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      140  inline
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      141  _LIBCPP_CONSTEXPR_AFTER_CXX14 const _CharT*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      142  char_traits<_CharT>::find(const char_type* __s, size_t __n, const char_type& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      143  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      144      for (; __n; --__n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      145      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      146          if (eq(*__s, __a))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      147              return __s;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      148          ++__s;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      149      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      150      return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      151  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      152  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      153  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      154  _CharT*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      155  char_traits<_CharT>::move(char_type* __s1, const char_type* __s2, size_t __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      156  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      157      char_type* __r = __s1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      158      if (__s1 < __s2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      159      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      160          for (; __n; --__n, ++__s1, ++__s2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      161              assign(*__s1, *__s2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      162      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      163      else if (__s2 < __s1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      164      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      165          __s1 += __n;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      166          __s2 += __n;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      167          for (; __n; --__n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      168              assign(*--__s1, *--__s2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      169      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      170      return __r;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      171  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      172  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      173  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      174  inline
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      175  _CharT*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      176  char_traits<_CharT>::copy(char_type* __s1, const char_type* __s2, size_t __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      177  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      178      _LIBCPP_ASSERT(__s2 < __s1 || __s2 >= __s1+__n, "char_traits::copy overlapped range");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      179      char_type* __r = __s1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      180      for (; __n; --__n, ++__s1, ++__s2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      181          assign(*__s1, *__s2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      182      return __r;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      183  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      184  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      185  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      186  inline
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      187  _CharT*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      188  char_traits<_CharT>::assign(char_type* __s, size_t __n, char_type __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      189  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      190      char_type* __r = __s;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      191      for (; __n; --__n, ++__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      192          assign(*__s, __a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      193      return __r;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      194  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      195  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      196  // char_traits<char>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      197  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      198  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      199  struct _LIBCPP_TEMPLATE_VIS char_traits<char>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      200  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      201      typedef char      char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      202      typedef int       int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      203      typedef streamoff off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      204      typedef streampos pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      205      typedef mbstate_t state_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      206  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      207      static inline _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      208      void assign(char_type& __c1, const char_type& __c2) _NOEXCEPT {__c1 = __c2;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      209      static inline _LIBCPP_CONSTEXPR bool eq(char_type __c1, char_type __c2) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      210              {return __c1 == __c2;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      211      static inline _LIBCPP_CONSTEXPR bool lt(char_type __c1, char_type __c2) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      212          {return (unsigned char)__c1 < (unsigned char)__c2;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      213  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      214      static _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      215      int compare(const char_type* __s1, const char_type* __s2, size_t __n) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      216      static inline size_t _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      217      length(const char_type* __s)  _NOEXCEPT 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      218          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      219  #if __has_feature(cxx_constexpr_string_builtins)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      220              return __builtin_strlen(__s);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      221  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      222              return strlen(__s);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      223  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      224          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      225      static _LIBCPP_CONSTEXPR_AFTER_CXX14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      226      const char_type* find(const char_type* __s, size_t __n, const char_type& __a) _NOEXCEPT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      227      static inline char_type* move(char_type* __s1, const char_type* __s2, size_t __n) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      228          {return __n == 0 ? __s1 : (char_type*) memmove(__s1, __s2, __n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      229      static inline char_type* copy(char_type* __s1, const char_type* __s2, size_t __n) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      230          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      231              _LIBCPP_ASSERT(__s2 < __s1 || __s2 >= __s1+__n, "char_traits::copy overlapped range");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      232              return __n == 0 ? __s1 : (char_type*)memcpy(__s1, __s2, __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      233          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      234      static inline char_type* assign(char_type* __s, size_t __n, char_type __a) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      235          {return __n == 0 ? __s : (char_type*)memset(__s, to_int_type(__a), __n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      236  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      237      static inline _LIBCPP_CONSTEXPR int_type  not_eof(int_type __c) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      238          {return eq_int_type(__c, eof()) ? ~eof() : __c;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      239      static inline _LIBCPP_CONSTEXPR char_type to_char_type(int_type __c) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      240          {return char_type(__c);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      241      static inline _LIBCPP_CONSTEXPR int_type to_int_type(char_type __c) _NOEXCEPT
; Function _ZNSt11char_traitsIcE11to_int_typeEc
_ZNSt11char_traitsIcE11to_int_typeEc:   .type func
        sub.a   a10,#88

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      242          {return int_type((unsigned char)__c);}
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10],a15
        mov     d15,#6
        st.b    [a10]4,d15
        extr.u  d2,d4,#0,#8
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]
        st.a    [a15],a2
        j       .L13
.L13:
        ret

___ZNSt11char_traitsIcE11to_int_typeEc_function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      243      static inline _LIBCPP_CONSTEXPR bool eq_int_type(int_type __c1, int_type __c2) _NOEXCEPT
; Function _ZNSt11char_traitsIcE11eq_int_typeEii
_ZNSt11char_traitsIcE11eq_int_typeEii:  .type       func
        sub.a   a10,#88

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      244          {return __c1 == __c2;}
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10],a15
        mov     d15,#6
        st.b    [a10]4,d15
        eq      d2,d4,d5
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]
        st.a    [a15],a2
        j       .L14
.L14:
        ret

___ZNSt11char_traitsIcE11eq_int_typeEii_function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          2  //===-------------------------- memory ------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         11  #ifndef _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         12  #define _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         15      memory synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         17  namespace std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         18  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         19  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         20  struct allocator_arg_t { };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         21  inline constexpr allocator_arg_t allocator_arg = allocator_arg_t();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         22  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         23  template <class T, class Alloc> struct uses_allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         24  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         25  template <class Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         26  struct pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         27  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         28      typedef Ptr pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         29      typedef <details> element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         30      typedef <details> difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         31  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         32      template <class U> using rebind = <details>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         34      static pointer pointer_to(<details>);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         35  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         36  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         37  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         38  struct pointer_traits<T*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         39  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         40      typedef T* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         41      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         42      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         43  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         44      template <class U> using rebind = U*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         45  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         46      static pointer pointer_to(<details>) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         47  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         48  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         49  template <class T> constexpr T* to_address(T* p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         50  template <class Ptr> auto to_address(const Ptr& p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         51  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         52  template <class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         53  struct allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         54  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         55      typedef Alloc                        allocator_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         56      typedef typename allocator_type::value_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         57                                           value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         58  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         59      typedef Alloc::pointer | value_type* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         60      typedef Alloc::const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         61            | pointer_traits<pointer>::rebind<const value_type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         62                                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         63      typedef Alloc::void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         64            | pointer_traits<pointer>::rebind<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         65                                           void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         66      typedef Alloc::const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         67            | pointer_traits<pointer>::rebind<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         68                                           const_void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         69      typedef Alloc::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         70            | pointer_traits<pointer>::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         71                                           difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         72      typedef Alloc::size_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         73            | make_unsigned<difference_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         74                                           size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         75      typedef Alloc::propagate_on_container_copy_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         76            | false_type                   propagate_on_container_copy_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         77      typedef Alloc::propagate_on_container_move_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         78            | false_type                   propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         79      typedef Alloc::propagate_on_container_swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         80            | false_type                   propagate_on_container_swap;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         81      typedef Alloc::is_always_equal
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         82            | is_empty                     is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         84      template <class T> using rebind_alloc  = Alloc::rebind<U>::other | Alloc<T, Args...>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         85      template <class T> using rebind_traits = allocator_traits<rebind_alloc<T>>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         87      static pointer allocate(allocator_type& a, size_type n);                          // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         88      static pointer allocate(allocator_type& a, size_type n, const_void_pointer hint); // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         90      static void deallocate(allocator_type& a, pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         92      template <class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         93          static void construct(allocator_type& a, T* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         95      template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         96          static void destroy(allocator_type& a, T* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         98      static size_type max_size(const allocator_type& a); // noexcept in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         99  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        100      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        101          select_on_container_copy_construction(const allocator_type& a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        102  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        103  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        104  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        105  class allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        106  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        107  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        108      typedef void*                                 pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        109      typedef const void*                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        110      typedef void                                  value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        112      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        113  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        115  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        116  class allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        117  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        118  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        119      typedef size_t                                size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        120      typedef ptrdiff_t                             difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        121      typedef T*                                    pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        122      typedef const T*                              const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        123      typedef typename add_lvalue_reference<T>::type       reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        124      typedef typename add_lvalue_reference<const T>::type const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        125      typedef T                                     value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        126  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        127      template <class U> struct rebind {typedef allocator<U> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        128  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        129      constexpr allocator() noexcept;                      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        130      constexpr allocator(const allocator&) noexcept;      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        131      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        132        constexpr allocator(const allocator<U>&) noexcept; // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        133      ~allocator();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        134      pointer address(reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        135      const_pointer address(const_reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        136      pointer allocate(size_type, allocator<void>::const_pointer hint = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        137      void deallocate(pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        138      size_type max_size() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        139      template<class U, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        140          void construct(U* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        141      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        142          void destroy(U* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        143  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        144  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        145  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        146  bool operator==(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        148  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        149  bool operator!=(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        150  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        151  template <class OutputIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        152  class raw_storage_iterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        153      : public iterator<output_iterator_tag,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        154                        T,                               // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        155                        ptrdiff_t,                       // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        156                        T*,                              // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        157                        raw_storage_iterator&>           // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        158  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        159  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        160      explicit raw_storage_iterator(OutputIterator x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        161      raw_storage_iterator& operator*();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        162      raw_storage_iterator& operator=(const T& element);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        163      raw_storage_iterator& operator++();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        164      raw_storage_iterator  operator++(int);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        165  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        166  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        167  template <class T> pair<T*,ptrdiff_t> get_temporary_buffer(ptrdiff_t n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        168  template <class T> void               return_temporary_buffer(T* p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        169  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        170  template <class T> T* addressof(T& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        171  template <class T> T* addressof(const T&& r) noexcept = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        172  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        173  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        174  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        175  uninitialized_copy(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        176  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        177  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        178  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        179  uninitialized_copy_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        180  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        181  template <class ForwardIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        182  void uninitialized_fill(ForwardIterator first, ForwardIterator last, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        183  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        184  template <class ForwardIterator, class Size, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        185  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        186  uninitialized_fill_n(ForwardIterator first, Size n, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        187  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        188  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        189  void destroy_at(T* location);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        190  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        191  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        192   void destroy(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        193  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        194  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        195   ForwardIterator destroy_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        197  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        198   ForwardIterator uninitialized_move(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        199  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        200  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        201   pair<InputIterator,ForwardIterator> uninitialized_move_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        202  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        203  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        204   void uninitialized_value_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        206  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        207   ForwardIterator uninitialized_value_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        208  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        209  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        210   void uninitialized_default_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        211  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        212  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        213   ForwardIterator uninitialized_default_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        214  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        215  template <class Y> struct auto_ptr_ref {};      // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        216  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        217  template<class X>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        218  class auto_ptr                                  // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        219  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        220  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        221      typedef X element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        222  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        223      explicit auto_ptr(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        224      auto_ptr(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        225      template<class Y> auto_ptr(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        226      auto_ptr& operator=(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        227      template<class Y> auto_ptr& operator=(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        228      auto_ptr& operator=(auto_ptr_ref<X> r) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        229      ~auto_ptr() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        230  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        231      typename add_lvalue_reference<X>::type operator*() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        232      X* operator->() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        233      X* get() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        234      X* release() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        235      void reset(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        236  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        237      auto_ptr(auto_ptr_ref<X>) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        238      template<class Y> operator auto_ptr_ref<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        239      template<class Y> operator auto_ptr<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        240  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        241  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        242  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        243  struct default_delete
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        244  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        245      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        246      template <class U> default_delete(const default_delete<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        248      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        249  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        250  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        251  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        252  struct default_delete<T[]>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        253  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        254      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        255      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        256      template <class U> void operator()(U*) const = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        257  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        258  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        259  template <class T, class D = default_delete<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        260  class unique_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        262  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        263      typedef see below pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        264      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        265      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        266  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        267      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        268      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        269      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        270      unique_ptr(pointer p, see below d1) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        271      unique_ptr(pointer p, see below d2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        272      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        273      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        274      template <class U, class E>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        275          unique_ptr(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        276      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        277          unique_ptr(auto_ptr<U>&& u) noexcept;       // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        278  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        279      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        280      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        281  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        282      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        283      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        284      template <class U, class E> unique_ptr& operator=(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        285      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        286  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        287      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        288      typename add_lvalue_reference<T>::type operator*() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        289      pointer operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        290      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        291      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        292      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        293      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        294  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        295      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        296      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        297      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        298      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        299  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        300  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        301  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        302  class unique_ptr<T[], D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        303  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        304  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        305      typedef implementation-defined pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        306      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        307      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        309      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        310      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        311      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        312      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        313      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        314      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        315      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        316  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        317      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        318      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        319  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        320      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        321      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        322      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        323  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        324      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        325      T& operator[](size_t i) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        326      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        327      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        328      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        329      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        330  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        331      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        332      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        333      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        334      void reset(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        335      template <class U> void reset(U) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        336      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        337  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        338  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        339  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        340      void swap(unique_ptr<T, D>& x, unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        341  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        342  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        343      bool operator==(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        344  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        345      bool operator!=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        346  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        347      bool operator<(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        348  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        349      bool operator<=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        350  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        351      bool operator>(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        352  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        353      bool operator>=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        354  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        355  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        356      bool operator==(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        357  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        358      bool operator==(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        359  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        360      bool operator!=(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        361  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        362      bool operator!=(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        363  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        364  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        365      bool operator<(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        366  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        367      bool operator<(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        368  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        369      bool operator<=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        370  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        371      bool operator<=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        372  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        373      bool operator>(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        374  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        375      bool operator>(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        376  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        377      bool operator>=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        378  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        379      bool operator>=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        380  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        381  class bad_weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        382      : public std::exception
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        383  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        384      bad_weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        385  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        386  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        387  template<class T, class... Args> unique_ptr<T> make_unique(Args&&... args);     // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        388  template<class T>                unique_ptr<T> make_unique(size_t n);           // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        389  template<class T, class... Args> unspecified   make_unique(Args&&...) = delete; // C++14, T == U[N]
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        390  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        391  template<class E, class T, class Y, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        392      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, unique_ptr<Y, D> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        393  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        394  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        395  class shared_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        396  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        397  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        398      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        399      typedef weak_ptr<T> weak_type; // C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        400  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        401      // constructors:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        402      constexpr shared_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        403      template<class Y> explicit shared_ptr(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        404      template<class Y, class D> shared_ptr(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        405      template<class Y, class D, class A> shared_ptr(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        406      template <class D> shared_ptr(nullptr_t p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        407      template <class D, class A> shared_ptr(nullptr_t p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        408      template<class Y> shared_ptr(const shared_ptr<Y>& r, T *p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        409      shared_ptr(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        410      template<class Y> shared_ptr(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        411      shared_ptr(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        412      template<class Y> shared_ptr(shared_ptr<Y>&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        413      template<class Y> explicit shared_ptr(const weak_ptr<Y>& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        414      template<class Y> shared_ptr(auto_ptr<Y>&& r);          // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        415      template <class Y, class D> shared_ptr(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        416      shared_ptr(nullptr_t) : shared_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        417  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        418      // destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        419      ~shared_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        420  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        421      // assignment:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        422      shared_ptr& operator=(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        423      template<class Y> shared_ptr& operator=(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        424      shared_ptr& operator=(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        425      template<class Y> shared_ptr& operator=(shared_ptr<Y>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        426      template<class Y> shared_ptr& operator=(auto_ptr<Y>&& r); // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        427      template <class Y, class D> shared_ptr& operator=(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        428  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        429      // modifiers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        430      void swap(shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        431      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        432      template<class Y> void reset(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        433      template<class Y, class D> void reset(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        434      template<class Y, class D, class A> void reset(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        435  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        436      // observers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        437      T* get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        438      T& operator*() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        439      T* operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        440      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        441      bool unique() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        442      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        443      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        444      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        445  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        446  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        447  // shared_ptr comparisons:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        448  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        449      bool operator==(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        450  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        451      bool operator!=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        452  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        453      bool operator<(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        454  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        455      bool operator>(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        456  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        457      bool operator<=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        458  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        459      bool operator>=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        460  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        461  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        462      bool operator==(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        463  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        464      bool operator==(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        465  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        466      bool operator!=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        467  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        468      bool operator!=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        469  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        470      bool operator<(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        471  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        472  bool operator<(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        473  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        474      bool operator<=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        475  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        476      bool operator<=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        477  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        478      bool operator>(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        479  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        480      bool operator>(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        481  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        482      bool operator>=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        483  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        484      bool operator>=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        485  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        486  // shared_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        487  template<class T> void swap(shared_ptr<T>& a, shared_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        488  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        489  // shared_ptr casts:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        490  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        491      shared_ptr<T> static_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        492  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        493      shared_ptr<T> dynamic_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        494  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        495      shared_ptr<T> const_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        496  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        497  // shared_ptr I/O:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        498  template<class E, class T, class Y>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        499      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, shared_ptr<Y> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        500  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        501  // shared_ptr get_deleter:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        502  template<class D, class T> D* get_deleter(shared_ptr<T> const& p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        504  template<class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        505      shared_ptr<T> make_shared(Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        506  template<class T, class A, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        507      shared_ptr<T> allocate_shared(const A& a, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        508  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        509  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        510  class weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        511  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        512  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        513      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        514  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        515      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        516      constexpr weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        517      template<class Y> weak_ptr(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        518      weak_ptr(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        519      template<class Y> weak_ptr(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        520      weak_ptr(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        521      template<class Y> weak_ptr(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        522  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        523      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        524      ~weak_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        525  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        526      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        527      weak_ptr& operator=(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        528      template<class Y> weak_ptr& operator=(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        529      template<class Y> weak_ptr& operator=(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        530      weak_ptr& operator=(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        531      template<class Y> weak_ptr& operator=(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        532  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        533      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        534      void swap(weak_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        535      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        536  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        537      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        538      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        539      bool expired() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        540      shared_ptr<T> lock() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        541      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        542      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        543  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        544  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        545  // weak_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        546  template<class T> void swap(weak_ptr<T>& a, weak_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        547  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        548  // class owner_less:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        549  template<class T> struct owner_less;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        550  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        551  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        552  struct owner_less<shared_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        553      : binary_function<shared_ptr<T>, shared_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        554  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        555      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        556      bool operator()(shared_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        557      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        558      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        559  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        560  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        561  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        562  struct owner_less<weak_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        563      : binary_function<weak_ptr<T>, weak_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        564  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        565      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        566      bool operator()(weak_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        567      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        568      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        569  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        570  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        571  template <>  // Added in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        572  struct owner_less<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        573  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        574      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        575      bool operator()( shared_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        576      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        577      bool operator()( shared_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        578      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        579      bool operator()(   weak_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        580      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        581      bool operator()(   weak_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        582  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        583      typedef void is_transparent;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        584  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        585  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        586  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        587  class enable_shared_from_this
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        588  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        589  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        590      constexpr enable_shared_from_this() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        591      enable_shared_from_this(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        592      enable_shared_from_this& operator=(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        593      ~enable_shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        594  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        595      shared_ptr<T> shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        596      shared_ptr<T const> shared_from_this() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        597  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        598  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        599  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        600      bool atomic_is_lock_free(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        601  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        602      shared_ptr<T> atomic_load(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        603  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        604      shared_ptr<T> atomic_load_explicit(const shared_ptr<T>* p, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        605  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        606      void atomic_store(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        607  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        608      void atomic_store_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        609  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        610      shared_ptr<T> atomic_exchange(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        611  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        612      shared_ptr<T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        613      atomic_exchange_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        614  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        615      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        616      atomic_compare_exchange_weak(shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        617  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        618      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        619      atomic_compare_exchange_strong( shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        620  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        621      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        622      atomic_compare_exchange_weak_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        623                                            shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        624                                            memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        625  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        626      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        627      atomic_compare_exchange_strong_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        628                                              shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        629                                              memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        630  // Hash support
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        631  template <class T> struct hash;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        632  template <class T, class D> struct hash<unique_ptr<T, D> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        633  template <class T> struct hash<shared_ptr<T> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        634  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        635  template <class T, class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        636    inline constexpr bool uses_allocator_v = uses_allocator<T, Alloc>::value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        637  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        638  // Pointer safety
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        639  enum class pointer_safety { relaxed, preferred, strict };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        640  void declare_reachable(void *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        641  template <class T> T *undeclare_reachable(T *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        642  void declare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        643  void undeclare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        644  pointer_safety get_pointer_safety() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        645  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        646  void* align(size_t alignment, size_t size, void*& ptr, size_t& space);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        647  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        648  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        649  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        650  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        651  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        652  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        653  #include <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        654  #include <typeinfo>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        655  #include <cstddef>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        656  #include <cstdint>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        657  #include <new>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        658  #include <utility>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        659  #include <limits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        660  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        661  #include <__functional_base>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        662  #include <iosfwd>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        663  #include <tuple>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        664  #include <stdexcept>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        665  #include <cstring>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        666  #include <cassert>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        667  #if !defined(_LIBCPP_HAS_NO_ATOMIC_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        668  #  include <atomic>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        669  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        670  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        671  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        672  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        673  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        674  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        675  _LIBCPP_PUSH_MACROS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        676  #include <__undef_macros>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        677  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        678  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        679  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        680  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        681  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        682  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        683  _ValueType __libcpp_relaxed_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        684  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        685      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        686  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        687      defined(__ATOMIC_RELAXED) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        688      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        689      return __atomic_load_n(__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        690  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        691      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        692  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        693  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        694  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        695  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        696  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        697  _ValueType __libcpp_acquire_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        698  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        699      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        700  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        701      defined(__ATOMIC_ACQUIRE) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        702      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        703      return __atomic_load_n(__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        704  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        705      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        706  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        707  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        708  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        709  // addressof moved to <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        710  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        711  template <class _Tp> class allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        712  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        713  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        714  class _LIBCPP_TEMPLATE_VIS allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        715  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        716  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        717      typedef void*             pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        718      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        719      typedef void              value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        720  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        721      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        722  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        723  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        724  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        725  class _LIBCPP_TEMPLATE_VIS allocator<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        726  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        727  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        728      typedef const void*       pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        729      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        730      typedef const void        value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        731  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        732      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        733  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        734  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        735  // pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        736  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        737  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        738  struct __has_element_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        739  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        740  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        741  struct __has_element_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        742                typename __void_t<typename _Tp::element_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        743  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        744  template <class _Ptr, bool = __has_element_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        745  struct __pointer_traits_element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        746  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        747  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        748  struct __pointer_traits_element_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        750      typedef typename _Ptr::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        751  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        753  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        754  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        755  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        756  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        757  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        758      typedef typename _Sp<_Tp, _Args...>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        759  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        760  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        761  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        762  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        763  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        764      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        765  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        766  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        767  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        768  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        769  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        770  struct __pointer_traits_element_type<_Sp<_Tp>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        771  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        772      typedef typename _Sp<_Tp>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        773  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        774  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        775  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        776  struct __pointer_traits_element_type<_Sp<_Tp>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        777  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        778      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        779  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        780  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        781  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        782  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        783  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        784      typedef typename _Sp<_Tp, _A0>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        785  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        786  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        787  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        788  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        790      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        791  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        793  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        794  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        795  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        796      typedef typename _Sp<_Tp, _A0, _A1>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        797  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        798  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        799  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        800  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        801  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        802      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        803  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        804  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        805  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        806                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        807  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        808  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        809      typedef typename _Sp<_Tp, _A0, _A1, _A2>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        810  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        811  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        812  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        813                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        814  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        815  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        816      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        817  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        818  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        819  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        820  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        821  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        822  struct __has_difference_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        823  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        824  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        825  struct __has_difference_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        826              typename __void_t<typename _Tp::difference_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        827  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        828  template <class _Ptr, bool = __has_difference_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        829  struct __pointer_traits_difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        830  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        831      typedef ptrdiff_t type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        832  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        833  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        834  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        835  struct __pointer_traits_difference_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        836  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        837      typedef typename _Ptr::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        838  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        839  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        840  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        841  struct __has_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        842  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        843  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        844      struct __two {char __lx; char __lxx;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        845      template <class _Xp> static __two __test(...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        846      template <class _Xp> static char __test(typename _Xp::template rebind<_Up>* = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        847  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        848      static const bool value = sizeof(__test<_Tp>(0)) == 1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        849  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        850  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        851  template <class _Tp, class _Up, bool = __has_rebind<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        852  struct __pointer_traits_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        853  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        854  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        855      typedef typename _Tp::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        856  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        857      typedef typename _Tp::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        858  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        859  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        860  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        861  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        862  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        863  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        864  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        865  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        866  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        867      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        868  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        869      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        870  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        871  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        872  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        873  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        874  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        875  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        876      typedef _Sp<_Up, _Args...> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        877  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        878  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        879  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        880  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        881  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        882  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        883  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        884  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        885      typedef typename _Sp<_Tp>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        886  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        887      typedef typename _Sp<_Tp>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        888  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        889  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        890  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        891  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        892  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        893  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        894      typedef _Sp<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        895  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        896  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        897  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        898  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        899  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        900  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        901      typedef typename _Sp<_Tp, _A0>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        902  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        903      typedef typename _Sp<_Tp, _A0>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        904  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        905  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        906  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        907  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        908  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        909  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        910      typedef _Sp<_Up, _A0> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        911  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        912  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        913  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        914                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        915  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        916  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        917  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        918      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        919  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        920      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        921  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        922  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        923  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        924  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        925                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        926  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        927  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        928      typedef _Sp<_Up, _A0, _A1> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        929  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        930  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        931  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        932                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        933  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        934  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        935  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        936      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        937  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        938      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        939  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        940  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        941  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        942  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        943                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        944  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        945  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        946      typedef _Sp<_Up, _A0, _A1, _A2> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        947  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        948  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        949  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        950  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        951  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        952  struct _LIBCPP_TEMPLATE_VIS pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        953  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        954      typedef _Ptr                                                     pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        955      typedef typename __pointer_traits_element_type<pointer>::type    element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        956      typedef typename __pointer_traits_difference_type<pointer>::type difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        957  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        958  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        959      template <class _Up> using rebind = typename __pointer_traits_rebind<pointer, _Up>::type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        960  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        961      template <class _Up> struct rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        962          {typedef typename __pointer_traits_rebind<pointer, _Up>::type other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        963  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        964  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        965  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        966      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        967  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        968      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        969      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        970                                             __nat, element_type>::type& __r)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        971          {return pointer::pointer_to(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        972  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        973  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        974  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        975  struct _LIBCPP_TEMPLATE_VIS pointer_traits<_Tp*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        976  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        977      typedef _Tp*      pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        978      typedef _Tp       element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        979      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        980  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        981  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        982      template <class _Up> using rebind = _Up*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        983  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        984      template <class _Up> struct rebind {typedef _Up* other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        985  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        986  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        987  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        988      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        989  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        990      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        991      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        992                                        __nat, element_type>::type& __r) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        993          {return _VSTD::addressof(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        994  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        996  template <class _From, class _To>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        997  struct __rebind_pointer {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        998  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        999      typedef typename pointer_traits<_From>::template rebind<_To>        type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1000  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1001      typedef typename pointer_traits<_From>::template rebind<_To>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1002  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1003  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1004  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1005  // allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1006  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1007  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1008  struct __has_pointer_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1009  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1010  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1011  struct __has_pointer_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1012            typename __void_t<typename _Tp::pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1013  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1014  namespace __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1015  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1016  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1017  template <class _Tp, class _Dp, bool = __has_pointer_type<_Dp>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1018  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1019  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1020      typedef typename _Dp::pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1021  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1022  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1023  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1024  struct __pointer_type<_Tp, _Dp, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1025  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1026      typedef _Tp* type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1027  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1028  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1029  }  // __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1030  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1031  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1032  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1033  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1034      typedef typename __pointer_type_imp::__pointer_type<_Tp, typename remove_reference<_Dp>::type>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1035  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1036  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1037  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1038  struct __has_const_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1039  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1040  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1041  struct __has_const_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1042              typename __void_t<typename _Tp::const_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1043  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1044  template <class _Tp, class _Ptr, class _Alloc, bool = __has_const_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1045  struct __const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1046  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1047      typedef typename _Alloc::const_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1048  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1049  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1050  template <class _Tp, class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1051  struct __const_pointer<_Tp, _Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1052  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1053  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1054      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1055  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1056      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1057  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1058  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1059  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1060  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1061  struct __has_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1062  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1063  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1064  struct __has_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1065                 typename __void_t<typename _Tp::void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1066  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1067  template <class _Ptr, class _Alloc, bool = __has_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1068  struct __void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1069  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1070      typedef typename _Alloc::void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1071  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1072  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1073  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1074  struct __void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1075  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1076  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1077      typedef typename pointer_traits<_Ptr>::template rebind<void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1078  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1079      typedef typename pointer_traits<_Ptr>::template rebind<void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1080  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1081  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1082  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1083  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1084  struct __has_const_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1085  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1086  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1087  struct __has_const_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1088              typename __void_t<typename _Tp::const_void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1089  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1090  template <class _Ptr, class _Alloc, bool = __has_const_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1091  struct __const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1092  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1093      typedef typename _Alloc::const_void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1094  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1095  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1096  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1097  struct __const_void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1098  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1099  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1100      typedef typename pointer_traits<_Ptr>::template rebind<const void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1101  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1102      typedef typename pointer_traits<_Ptr>::template rebind<const void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1103  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1104  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1105  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1106  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1107  inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1108  _Tp*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1109  __to_raw_pointer(_Tp* __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1110  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1111      return __p;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1112  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1113  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1114  #if _LIBCPP_STD_VER <= 17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1115  template <class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1116  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1117  typename pointer_traits<_Pointer>::element_type*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1118  __to_raw_pointer(_Pointer __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1119  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1120      return _VSTD::__to_raw_pointer(__p.operator->());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1121  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1122  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1123  template <class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1124  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1125  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1126  __to_raw_pointer(const _Pointer& __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1127  -> decltype(pointer_traits<_Pointer>::to_address(__p))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1128  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1129      return pointer_traits<_Pointer>::to_address(__p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1130  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1131  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1132  template <class _Pointer, class... _None>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1133  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1134  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1135  __to_raw_pointer(const _Pointer& __p, _None...) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1136  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1137      return _VSTD::__to_raw_pointer(__p.operator->());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1138  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1139  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1140  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1141  inline _LIBCPP_INLINE_VISIBILITY constexpr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1142  _Tp*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1143  to_address(_Tp* __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1144  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1145      static_assert(!is_function_v<_Tp>, "_Tp is a function type");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1146      return __p;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1147  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1148  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1149  template <class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1150  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1151  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1152  to_address(const _Pointer& __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1154      return _VSTD::__to_raw_pointer(__p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1155  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1156  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1157  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1158  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1159  struct __has_size_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1160  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1161  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1162  struct __has_size_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1163                 typename __void_t<typename _Tp::size_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1164  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1165  template <class _Alloc, class _DiffType, bool = __has_size_type<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1166  struct __size_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1167  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1168      typedef typename make_unsigned<_DiffType>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1169  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1170  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1171  template <class _Alloc, class _DiffType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1172  struct __size_type<_Alloc, _DiffType, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1173  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1174      typedef typename _Alloc::size_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1175  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1176  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1177  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1178  struct __has_propagate_on_container_copy_assignment : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1179  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1180  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1181  struct __has_propagate_on_container_copy_assignment<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1182      typename __void_t<typename _Tp::propagate_on_container_copy_assignment>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1183          : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1184  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1185  template <class _Alloc, bool = __has_propagate_on_container_copy_assignment<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1186  struct __propagate_on_container_copy_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1187  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1188      typedef false_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1189  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1190  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1191  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1192  struct __propagate_on_container_copy_assignment<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1193  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1194      typedef typename _Alloc::propagate_on_container_copy_assignment type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1195  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1197  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1198  struct __has_propagate_on_container_move_assignment : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1199  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1200  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1201  struct __has_propagate_on_container_move_assignment<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1202             typename __void_t<typename _Tp::propagate_on_container_move_assignment>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1203                 : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1204  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1205  template <class _Alloc, bool = __has_propagate_on_container_move_assignment<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1206  struct __propagate_on_container_move_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1207  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1208      typedef false_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1209  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1210  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1211  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1212  struct __propagate_on_container_move_assignment<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1213  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1214      typedef typename _Alloc::propagate_on_container_move_assignment type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1215  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1216  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1217  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1218  struct __has_propagate_on_container_swap : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1219  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1220  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1221  struct __has_propagate_on_container_swap<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1222             typename __void_t<typename _Tp::propagate_on_container_swap>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1223                 : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1224  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1225  template <class _Alloc, bool = __has_propagate_on_container_swap<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1226  struct __propagate_on_container_swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1227  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1228      typedef false_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1229  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1230  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1231  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1232  struct __propagate_on_container_swap<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1233  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1234      typedef typename _Alloc::propagate_on_container_swap type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1235  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1236  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1237  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1238  struct __has_is_always_equal : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1239  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1240  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1241  struct __has_is_always_equal<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1242             typename __void_t<typename _Tp::is_always_equal>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1243                 : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1244  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1245  template <class _Alloc, bool = __has_is_always_equal<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1246  struct __is_always_equal
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1247  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1248      typedef typename _VSTD::is_empty<_Alloc>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1249  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1250  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1251  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1252  struct __is_always_equal<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1253  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1254      typedef typename _Alloc::is_always_equal type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1255  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1256  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1257  template <class _Tp, class _Up, bool = __has_rebind<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1258  struct __has_rebind_other
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1259  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1260  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1261      struct __two {char __lx; char __lxx;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1262      template <class _Xp> static __two __test(...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1263      template <class _Xp> static char __test(typename _Xp::template rebind<_Up>::other* = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1264  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1265      static const bool value = sizeof(__test<_Tp>(0)) == 1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1266  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1267  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1268  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1269  struct __has_rebind_other<_Tp, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1270  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1271      static const bool value = false;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1272  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1273  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1274  template <class _Tp, class _Up, bool = __has_rebind_other<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1275  struct __allocator_traits_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1276  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1277      typedef typename _Tp::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1278  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1279  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1280  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1281  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1282  template <template <class, class...> class _Alloc, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1283  struct __allocator_traits_rebind<_Alloc<_Tp, _Args...>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1284  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1285      typedef typename _Alloc<_Tp, _Args...>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1286  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1287  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1288  template <template <class, class...> class _Alloc, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1289  struct __allocator_traits_rebind<_Alloc<_Tp, _Args...>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1290  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1291      typedef _Alloc<_Up, _Args...> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1292  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1293  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1294  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1295  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1296  template <template <class> class _Alloc, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1297  struct __allocator_traits_rebind<_Alloc<_Tp>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1298  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1299      typedef typename _Alloc<_Tp>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1300  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1301  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1302  template <template <class> class _Alloc, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1303  struct __allocator_traits_rebind<_Alloc<_Tp>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1304  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1305      typedef _Alloc<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1306  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1307  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1308  template <template <class, class> class _Alloc, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1309  struct __allocator_traits_rebind<_Alloc<_Tp, _A0>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1310  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1311      typedef typename _Alloc<_Tp, _A0>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1312  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1313  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1314  template <template <class, class> class _Alloc, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1315  struct __allocator_traits_rebind<_Alloc<_Tp, _A0>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1316  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1317      typedef _Alloc<_Up, _A0> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1318  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1319  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1320  template <template <class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1321                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1322  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1323  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1324      typedef typename _Alloc<_Tp, _A0, _A1>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1325  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1326  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1327  template <template <class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1328                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1329  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1330  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1331      typedef _Alloc<_Up, _A0, _A1> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1332  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1333  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1334  template <template <class, class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1335                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1336  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1, _A2>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1337  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1338      typedef typename _Alloc<_Tp, _A0, _A1, _A2>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1339  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1340  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1341  template <template <class, class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1342                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1343  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1, _A2>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1344  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1345      typedef _Alloc<_Up, _A0, _A1, _A2> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1346  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1347  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1348  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1349  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1350  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1351  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1352  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1353  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1354  __has_allocate_hint_test(_Alloc&& __a, _SizeType&& __sz, _ConstVoidPtr&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1355      -> decltype((void)__a.allocate(__sz, __p), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1356  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1357  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1358  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1359  __has_allocate_hint_test(const _Alloc& __a, _SizeType&& __sz, _ConstVoidPtr&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1360      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1361  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1362  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1363  struct __has_allocate_hint
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1364      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1365          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1366              decltype(_VSTD::__has_allocate_hint_test(declval<_Alloc>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1367                                            declval<_SizeType>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1368                                            declval<_ConstVoidPtr>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1369              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1370  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1371  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1372  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1373  #else  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1374  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1375  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1376  struct __has_allocate_hint
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1377      : true_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1378  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1379  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1380  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1381  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1382  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1383  #if !defined(_LIBCPP_CXX03_LANG)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1384  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1385  template <class _Alloc, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1386  decltype(_VSTD::declval<_Alloc>().construct(_VSTD::declval<_Tp*>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1387                                             _VSTD::declval<_Args>()...),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1388                                             true_type())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1389  __has_construct_test(_Alloc&& __a, _Tp* __p, _Args&& ...__args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1390  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1391  template <class _Alloc, class _Pointer, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1392  false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1393  __has_construct_test(const _Alloc& __a, _Pointer&& __p, _Args&& ...__args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1394  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1395  template <class _Alloc, class _Pointer, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1396  struct __has_construct
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1397      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1398          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1399              decltype(_VSTD::__has_construct_test(declval<_Alloc>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1400                                            declval<_Pointer>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1401                                            declval<_Args>()...)),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1402              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1403  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1404  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1405  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1406  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1407  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1408  __has_destroy_test(_Alloc&& __a, _Pointer&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1409      -> decltype(__a.destroy(__p), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1410  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1411  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1412  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1413  __has_destroy_test(const _Alloc& __a, _Pointer&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1414      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1415  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1416  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1417  struct __has_destroy
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1418      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1419          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1420              decltype(_VSTD::__has_destroy_test(declval<_Alloc>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1421                                          declval<_Pointer>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1422              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1423  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1424  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1425  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1426  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1427  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1428  __has_max_size_test(_Alloc&& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1429      -> decltype(__a.max_size(), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1430  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1431  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1432  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1433  __has_max_size_test(const volatile _Alloc& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1434      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1435  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1436  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1437  struct __has_max_size
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1438      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1439          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1440              decltype(_VSTD::__has_max_size_test(declval<_Alloc&>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1441              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1442  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1443  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1444  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1445  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1446  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1447  __has_select_on_container_copy_construction_test(_Alloc&& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1448      -> decltype(__a.select_on_container_copy_construction(), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1449  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1450  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1451  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1452  __has_select_on_container_copy_construction_test(const volatile _Alloc& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1453      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1454  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1455  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1456  struct __has_select_on_container_copy_construction
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1457      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1458          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1459              decltype(_VSTD::__has_select_on_container_copy_construction_test(declval<_Alloc&>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1460              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1461  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1462  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1463  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1464  #else  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1465  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1466  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1467  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1468  template <class _Alloc, class _Pointer, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1469  struct __has_construct
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1470      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1471  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1472  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1473  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1474  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1475  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1476  template <class _Alloc, class _Pointer, class _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1477  struct __has_construct
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1478      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1479  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1480  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1481  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1482  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1483  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1484  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1485  struct __has_destroy
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1486      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1487  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1488  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1489  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1490  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1491  struct __has_max_size
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1492      : true_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1493  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1494  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1495  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1496  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1497  struct __has_select_on_container_copy_construction
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1498      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1499  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1500  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1501  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1502  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1504  template <class _Alloc, class _Ptr, bool = __has_difference_type<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1505  struct __alloc_traits_difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1506  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1507      typedef typename pointer_traits<_Ptr>::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1508  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1509  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1510  template <class _Alloc, class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1511  struct __alloc_traits_difference_type<_Alloc, _Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1512  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1513      typedef typename _Alloc::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1514  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1515  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1516  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1517  struct _LIBCPP_TEMPLATE_VIS allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1518  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1519      typedef _Alloc                              allocator_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1520      typedef typename allocator_type::value_type value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1521  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1522      typedef typename __pointer_type<value_type, allocator_type>::type pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1523      typedef typename __const_pointer<value_type, pointer, allocator_type>::type const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1524      typedef typename __void_pointer<pointer, allocator_type>::type void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1525      typedef typename __const_void_pointer<pointer, allocator_type>::type const_void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1526  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1527      typedef typename __alloc_traits_difference_type<allocator_type, pointer>::type difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1528      typedef typename __size_type<allocator_type, difference_type>::type size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1529  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1530      typedef typename __propagate_on_container_copy_assignment<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1531                       propagate_on_container_copy_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1532      typedef typename __propagate_on_container_move_assignment<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1533                       propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1534      typedef typename __propagate_on_container_swap<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1535                       propagate_on_container_swap;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1536      typedef typename __is_always_equal<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1537                       is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1538  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1539  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1540      template <class _Tp> using rebind_alloc =
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1541                    typename __allocator_traits_rebind<allocator_type, _Tp>::type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1542      template <class _Tp> using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1543  #else  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1544      template <class _Tp> struct rebind_alloc
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1545          {typedef typename __allocator_traits_rebind<allocator_type, _Tp>::type other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1546      template <class _Tp> struct rebind_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1547          {typedef allocator_traits<typename rebind_alloc<_Tp>::other> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1548  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1549  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1550      _LIBCPP_NODISCARD_AFTER_CXX17 _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1551      static pointer allocate(allocator_type& __a, size_type __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1552          {return __a.allocate(__n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1553      _LIBCPP_NODISCARD_AFTER_CXX17 _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1554      static pointer allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1555          {return __allocate(__a, __n, __hint,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1556              __has_allocate_hint<allocator_type, size_type, const_void_pointer>());}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1557  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1558      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1559      static void deallocate(allocator_type& __a, pointer __p, size_type __n) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1560          {__a.deallocate(__p, __n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1561  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1562  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1563      template <class _Tp, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1564          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1565          static void construct(allocator_type& __a, _Tp* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1566              {__construct(__has_construct<allocator_type, _Tp*, _Args...>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1567                           __a, __p, _VSTD::forward<_Args>(__args)...);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1568  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1569      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1570          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1571          static void construct(allocator_type&, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1572              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1573                  ::new ((void*)__p) _Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1574              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1575      template <class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1576          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1577          static void construct(allocator_type&, _Tp* __p, const _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1578              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1579                  ::new ((void*)__p) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1580              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1581      template <class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1582          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1583          static void construct(allocator_type&, _Tp* __p, const _A0& __TSK_a0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1584                                const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1585              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1586                  ::new ((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1587              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1588      template <class _Tp, class _A0, class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1589          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1590          static void construct(allocator_type&, _Tp* __p, const _A0& __TSK_a0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1591                                const _A1& __TSK_a1, const _A2& __TSK_a2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1592              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1593                  ::new ((void*)__p) _Tp(__TSK_a0, __TSK_a1, __TSK_a2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1594              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1595  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1596  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1597      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1598          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1599          static void destroy(allocator_type& __a, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1600              {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1601  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1602      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1603      static size_type max_size(const allocator_type& __a) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1604          {return __max_size(__has_max_size<const allocator_type>(), __a);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1605  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1606      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1607      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1608          select_on_container_copy_construction(const allocator_type& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1609              {return __select_on_container_copy_construction(
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1610                  __has_select_on_container_copy_construction<const allocator_type>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1611                  __a);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1612  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1613      template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1614          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1615          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1616          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1617          __construct_forward(allocator_type& __a, _Ptr __begin1, _Ptr __end1, _Ptr& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1618          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1619              for (; __begin1 != __end1; ++__begin1, ++__begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1620                  construct(__a, _VSTD::__to_raw_pointer(__begin2), _VSTD::move_if_noexcept(*__begin1));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1621          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1622  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1623      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1624          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1625          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1626          typename enable_if
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1627          <
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1628              (is_same<allocator_type, allocator<_Tp> >::value
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1629                  || !__has_construct<allocator_type, _Tp*, _Tp>::value) &&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1630               is_trivially_move_constructible<_Tp>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1631              void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1632          >::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1633          __construct_forward(allocator_type&, _Tp* __begin1, _Tp* __end1, _Tp*& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1634          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1635              ptrdiff_t _Np = __end1 - __begin1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1636              if (_Np > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1637              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1638                  _VSTD::memcpy(__begin2, __begin1, _Np * sizeof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1639                  __begin2 += _Np;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1640              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1641          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1642  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1643      template <class _Iter, class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1644          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1645          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1646          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1647          __construct_range_forward(allocator_type& __a, _Iter __begin1, _Iter __end1, _Ptr& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1648          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1649              for (; __begin1 != __end1; ++__begin1, (void) ++__begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1650                  construct(__a, _VSTD::__to_raw_pointer(__begin2), *__begin1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1651          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1652  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1653      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1654          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1655          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1656          typename enable_if
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1657          <
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1658              (is_same<allocator_type, allocator<_Tp> >::value
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1659                  || !__has_construct<allocator_type, _Tp*, _Tp>::value) &&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1660               is_trivially_move_constructible<_Tp>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1661              void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1662          >::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1663          __construct_range_forward(allocator_type&, _Tp* __begin1, _Tp* __end1, _Tp*& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1664          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1665              typedef typename remove_const<_Tp>::type _Vp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1666              ptrdiff_t _Np = __end1 - __begin1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1667              if (_Np > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1668              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1669                  _VSTD::memcpy(const_cast<_Vp*>(__begin2), __begin1, _Np * sizeof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1670                  __begin2 += _Np;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1671              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1672          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1673  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1674      template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1675          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1676          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1677          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1678          __construct_backward(allocator_type& __a, _Ptr __begin1, _Ptr __end1, _Ptr& __end2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1679          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1680              while (__end1 != __begin1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1681              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1682                  construct(__a, _VSTD::__to_raw_pointer(__end2-1), _VSTD::move_if_noexcept(*--__end1));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1683                  --__end2;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1684              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1685          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1686  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1687      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1688          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1689          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1690          typename enable_if
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1691          <
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1692              (is_same<allocator_type, allocator<_Tp> >::value
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1693                  || !__has_construct<allocator_type, _Tp*, _Tp>::value) &&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1694               is_trivially_move_constructible<_Tp>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1695              void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1696          >::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1697          __construct_backward(allocator_type&, _Tp* __begin1, _Tp* __end1, _Tp*& __end2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1698          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1699              ptrdiff_t _Np = __end1 - __begin1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1700              __end2 -= _Np;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1701              if (_Np > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1702                  _VSTD::memcpy(__end2, __begin1, _Np * sizeof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1703          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1704  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1705  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1706  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1707      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1708      static pointer __allocate(allocator_type& __a, size_type __n,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1709          const_void_pointer __hint, true_type)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1710          {return __a.allocate(__n, __hint);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1711      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1712      static pointer __allocate(allocator_type& __a, size_type __n,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1713          const_void_pointer, false_type)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1714          {return __a.allocate(__n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1715  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1716  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1717      template <class _Tp, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1718          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1719          static void __construct(true_type, allocator_type& __a, _Tp* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1720              {__a.construct(__p, _VSTD::forward<_Args>(__args)...);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1721      template <class _Tp, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1722          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1723          static void __construct(false_type, allocator_type&, _Tp* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1724              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1725                  ::new ((void*)__p) _Tp(_VSTD::forward<_Args>(__args)...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1726              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1727  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1728  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1729      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1730          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1731          static void __destroy(true_type, allocator_type& __a, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1732              {__a.destroy(__p);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1733      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1734          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1735          static void __destroy(false_type, allocator_type&, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1736              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1737                  __p->~_Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1738              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1739  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1740      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1741      static size_type __max_size(true_type, const allocator_type& __a) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1742              {return __a.max_size();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1743      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1744      static size_type __max_size(false_type, const allocator_type&) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1745              {return numeric_limits<size_type>::max() / sizeof(value_type);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1746  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1747      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1748      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1749          __select_on_container_copy_construction(true_type, const allocator_type& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1750              {return __a.select_on_container_copy_construction();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1751      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1752      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1753          __select_on_container_copy_construction(false_type, const allocator_type& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1754              {return __a;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1755  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1756  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1757  template <class _Traits, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1758  struct __rebind_alloc_helper
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1759  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1760  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1761      typedef typename _Traits::template rebind_alloc<_Tp>        type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1762  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1763      typedef typename _Traits::template rebind_alloc<_Tp>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1764  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1765  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1766  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1767  // allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1768  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1769  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1770  class _LIBCPP_TEMPLATE_VIS allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1771  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1772  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1773      typedef size_t            size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1774      typedef ptrdiff_t         difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1775      typedef _Tp*              pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1776      typedef const _Tp*        const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1777      typedef _Tp&              reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1778      typedef const _Tp&        const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1779      typedef _Tp               value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1780  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1781      typedef true_type propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1782      typedef true_type is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1783  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1784  //#ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1785      //TASKING hack to get it compiling
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1786  //    static allocator<_Tp> select_on_container_copy_construction() { return allocator<_Tp>(); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1787  //#endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1788  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1789      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1790  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1791      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1792      allocator() _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1793  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1794      template <class _Up> 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1795      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1796      allocator(const allocator<_Up>&) _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1797  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1798      _LIBCPP_INLINE_VISIBILITY pointer address(reference __x) const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1799          {return _VSTD::addressof(__x);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1800      _LIBCPP_INLINE_VISIBILITY const_pointer address(const_reference __x) const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1801          {return _VSTD::addressof(__x);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1802      _LIBCPP_NODISCARD_AFTER_CXX17 _LIBCPP_INLINE_VISIBILITY 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1803      pointer allocate(size_type __n, allocator<void>::const_pointer = 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1804          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1805          if (__n > max_size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1806              __throw_length_error("allocator<T>::allocate(size_t n)"
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1807                                   " 'n' exceeds maximum supported size");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1808          return static_cast<pointer>(_VSTD::__libcpp_allocate(__n * sizeof(_Tp), __alignof(_Tp)));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1809          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1810      _LIBCPP_INLINE_VISIBILITY void deallocate(pointer __p, size_type) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1811          {_VSTD::__libcpp_deallocate((void*)__p, __alignof(_Tp));}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1812      _LIBCPP_INLINE_VISIBILITY size_type max_size() const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1813          {return size_type(~0) / sizeof(_Tp);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1814  #if !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1815      template <class _Up, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1816          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1817          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1818          construct(_Up* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1819          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1820              ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1821          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1822  #else  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1823          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1824          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1825          construct(pointer __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1826          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1827              ::new((void*)__p) _Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1828          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1829  # if defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1830  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1831      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1832          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1833          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1834          construct(pointer __p, _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1835          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1836              ::new((void*)__p) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1837          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1838      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1839          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1840          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1841          construct(pointer __p, const _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1842          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1843              ::new((void*)__p) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1844          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1845  # endif  // defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1846      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1847          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1848          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1849          construct(pointer __p, _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1850          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1851              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1852          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1853      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1854          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1855          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1856          construct(pointer __p, const _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1857          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1858              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1859          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1860      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1861          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1862          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1863          construct(pointer __p, _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1864          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1865              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1866          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1867      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1868          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1869          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1870          construct(pointer __p, const _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1871          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1872              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1873          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1874  #endif  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1875      _LIBCPP_INLINE_VISIBILITY void destroy(pointer __p) {__p->~_Tp();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1876  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1877  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1878  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1879  class _LIBCPP_TEMPLATE_VIS allocator<const _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1880  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1881  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1882      typedef size_t            size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1883      typedef ptrdiff_t         difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1884      typedef const _Tp*        pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1885      typedef const _Tp*        const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1886      typedef const _Tp&        reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1887      typedef const _Tp&        const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1888      typedef const _Tp         value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1889  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1890      typedef true_type propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1891      typedef true_type is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1892  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1893      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1894  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1895      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1896      allocator() _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1897  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1898      template <class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1899      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1900      allocator(const allocator<_Up>&) _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1901  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1902      _LIBCPP_INLINE_VISIBILITY const_pointer address(const_reference __x) const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1903          {return _VSTD::addressof(__x);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1904      _LIBCPP_INLINE_VISIBILITY pointer allocate(size_type __n, allocator<void>::const_pointer = 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1905      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1906          if (__n > max_size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1907              __throw_length_error("allocator<const T>::allocate(size_t n)"
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1908                                   " 'n' exceeds maximum supported size");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1909          return static_cast<pointer>(_VSTD::__libcpp_allocate(__n * sizeof(_Tp), __alignof(_Tp)));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1910      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1911      _LIBCPP_INLINE_VISIBILITY void deallocate(pointer __p, size_type) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1912          {_VSTD::__libcpp_deallocate((void*) const_cast<_Tp *>(__p), __alignof(_Tp));}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1913      _LIBCPP_INLINE_VISIBILITY size_type max_size() const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1914          {return size_type(~0) / sizeof(_Tp);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1915  #if !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1916      template <class _Up, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1917          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1918          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1919          construct(_Up* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1920          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1921              ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1922          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1923  #else  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1924          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1925          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1926          construct(pointer __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1927          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1928              ::new((void*) const_cast<_Tp *>(__p)) _Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1929          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1930  # if defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1931  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1932      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1933          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1934          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1935          construct(pointer __p, _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1936          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1937              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1938          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1939      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1940          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1941          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1942          construct(pointer __p, const _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1943          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1944              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1945          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1946  # endif  // defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1947      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1948          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1949          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1950          construct(pointer __p, _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1951          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1952              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1953          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1954      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1955          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1956          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1957          construct(pointer __p, const _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1958          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1959              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1960          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1961      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1962          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1963          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1964          construct(pointer __p, _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1965          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1966              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1967          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1968      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1969          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1970          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1971          construct(pointer __p, const _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1972          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1973              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1974          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1975  #endif  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1976      _LIBCPP_INLINE_VISIBILITY void destroy(pointer __p) {__p->~_Tp();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1977  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1978  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1979  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1980  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1981  bool operator==(const allocator<_Tp>&, const allocator<_Up>&) _NOEXCEPT {return true;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1982  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1983  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1984  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1985  bool operator!=(const allocator<_Tp>&, const allocator<_Up>&) _NOEXCEPT {return false;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1986  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1987  template <class _OutputIterator, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1988  class _LIBCPP_TEMPLATE_VIS raw_storage_iterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1989      : public iterator<output_iterator_tag,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1990                        _Tp,                                         // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1991                        ptrdiff_t,                                   // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1992                        _Tp*,                                        // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1993                        raw_storage_iterator<_OutputIterator, _Tp>&> // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1994  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1995  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1996      _OutputIterator __x_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1997  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1998      _LIBCPP_INLINE_VISIBILITY explicit raw_storage_iterator(_OutputIterator __x) : __x_(__x) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1999      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator*() {return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2000      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator=(const _Tp& __element)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2001          {::new(_VSTD::addressof(*__x_)) _Tp(__element); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2002  #if _LIBCPP_STD_VER >= 14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2003      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator=(_Tp&& __element)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2004          {::new(_VSTD::addressof(*__x_)) _Tp(_VSTD::move(__element)); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2005  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2006      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator++() {++__x_; return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2007      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator  operator++(int)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2008          {raw_storage_iterator __t(*this); ++__x_; return __t;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2009  #if _LIBCPP_STD_VER >= 14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2010      _LIBCPP_INLINE_VISIBILITY _OutputIterator base() const { return __x_; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2011  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2012  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2013  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2014  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2015  _LIBCPP_NO_CFI
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2016  pair<_Tp*, ptrdiff_t>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2017  get_temporary_buffer(ptrdiff_t __n) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2018  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2019      pair<_Tp*, ptrdiff_t> __r(0, 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2020      const ptrdiff_t __m = (~ptrdiff_t(0) ^
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2021                             ptrdiff_t(ptrdiff_t(1) << (sizeof(ptrdiff_t) * __CHAR_BIT__ - 1)))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2022                             / sizeof(_Tp);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2023      if (__n > __m)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2024          __n = __m;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2025      while (__n > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2026      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2027  #if !defined(_LIBCPP_HAS_NO_ALIGNED_ALLOCATION)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2028      if (__is_overaligned_for_new(__alignof(_Tp)))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2029          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2030              std::align_val_t __al =
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2031                  std::align_val_t(std::alignment_of<_Tp>::value);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2032              __r.first = static_cast<_Tp*>(::operator new(
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2033                  __n * sizeof(_Tp), __al, nothrow));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2034          } else {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2035              __r.first = static_cast<_Tp*>(::operator new(
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2036                  __n * sizeof(_Tp), nothrow));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2037          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2038  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2039      if (__is_overaligned_for_new(__alignof(_Tp)))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2040          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2041              // Since aligned operator new is unavailable, return an empty
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2042              // buffer rather than one with invalid alignment.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2043              return __r;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2044          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2045  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2046          __r.first = static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), nothrow));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2047  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2048  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2049          if (__r.first)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2050          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2051              __r.second = __n;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2052              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2053          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2054          __n /= 2;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2055      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2056      return __r;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2057  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2058  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2059  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2060  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2061  void return_temporary_buffer(_Tp* __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2062  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2063    _VSTD::__libcpp_deallocate((void*)__p, __alignof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2064  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2065  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2066  #if _LIBCPP_STD_VER <= 14 || defined(_LIBCPP_ENABLE_CXX17_REMOVED_AUTO_PTR)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2067  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2068  struct auto_ptr_ref
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2069  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2070      _Tp* __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2071  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2072  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2073  template<class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2074  class _LIBCPP_TEMPLATE_VIS auto_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2075  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2076  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2077      _Tp* __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2078  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2079      typedef _Tp element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2080  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2081      _LIBCPP_INLINE_VISIBILITY explicit auto_ptr(_Tp* __p = 0) throw() : __ptr_(__p) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2082      _LIBCPP_INLINE_VISIBILITY auto_ptr(auto_ptr& __p) throw() : __ptr_(__p.release()) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2083      template<class _Up> _LIBCPP_INLINE_VISIBILITY auto_ptr(auto_ptr<_Up>& __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2084          : __ptr_(__p.release()) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2085      _LIBCPP_INLINE_VISIBILITY auto_ptr& operator=(auto_ptr& __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2086          {reset(__p.release()); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2087      template<class _Up> _LIBCPP_INLINE_VISIBILITY auto_ptr& operator=(auto_ptr<_Up>& __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2088          {reset(__p.release()); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2089      _LIBCPP_INLINE_VISIBILITY auto_ptr& operator=(auto_ptr_ref<_Tp> __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2090          {reset(__p.__ptr_); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2091      _LIBCPP_INLINE_VISIBILITY ~auto_ptr() throw() {delete __ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2092  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2093      _LIBCPP_INLINE_VISIBILITY _Tp& operator*() const throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2094          {return *__ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2095      _LIBCPP_INLINE_VISIBILITY _Tp* operator->() const throw() {return __ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2096      _LIBCPP_INLINE_VISIBILITY _Tp* get() const throw() {return __ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2097      _LIBCPP_INLINE_VISIBILITY _Tp* release() throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2098      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2099          _Tp* __t = __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2100          __ptr_ = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2101          return __t;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2102      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2103      _LIBCPP_INLINE_VISIBILITY void reset(_Tp* __p = 0) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2104      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2105          if (__ptr_ != __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2106              delete __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2107          __ptr_ = __p;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2108      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2109  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2110      _LIBCPP_INLINE_VISIBILITY auto_ptr(auto_ptr_ref<_Tp> __p) throw() : __ptr_(__p.__ptr_) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2111      template<class _Up> _LIBCPP_INLINE_VISIBILITY operator auto_ptr_ref<_Up>() throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2112          {auto_ptr_ref<_Up> __t; __t.__ptr_ = release(); return __t;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2113      template<class _Up> _LIBCPP_INLINE_VISIBILITY operator auto_ptr<_Up>() throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2114          {return auto_ptr<_Up>(release());}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2115  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2116  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2117  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2118  class _LIBCPP_TEMPLATE_VIS auto_ptr<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2119  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2120  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2121      typedef void element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2122  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2123  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2125  template <class _Tp, int _Idx,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2126            bool _CanBeEmptyBase =
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2127                is_empty<_Tp>::value && !__libcpp_is_final<_Tp>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2128  struct __compressed_pair_elem {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2129    typedef _Tp _ParamT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2130    typedef _Tp& reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2131    typedef const _Tp& const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2132  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2133  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2134    _LIBCPP_INLINE_VISIBILITY constexpr __compressed_pair_elem() : __value_() {}
; Function _ZNSt22__compressed_pair_elemINSs5__repELi0ELb0EEC1Ev
_ZNSt22__compressed_pair_elemINSs5__repELi0ELb0EEC1Ev:  .type       func
        mov     d4,#0
        mov     d5,#12
        call    memset
        ret

___ZNSt22__compressed_pair_elemINSs5__repELi0ELb0EEC1Ev_function_end:
        ; End of function

; Function _ZNSt22__compressed_pair_elemINSs5__repELi0ELb0EEC2Ev
_ZNSt22__compressed_pair_elemINSs5__repELi0ELb0EEC2Ev:  .type       func
        mov     d4,#0
        mov     d5,#12
        call    memset
        ret

___ZNSt22__compressed_pair_elemINSs5__repELi0ELb0EEC2Ev_function_end:
        ; End of function

; Function _ZSt16__to_raw_pointerIcEPT_S1_
_ZSt16__to_raw_pointerIcEPT_S1_:        .type   func
        sub.a   a10,#88
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10],a15
        mov     d15,#6
        st.b    [a10]4,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]
        st.a    [a15],a2
        mov.aa  a2,a4
        j       .L15
.L15:
        ret

___ZSt16__to_raw_pointerIcEPT_S1__function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         2  //===-------------------------- ostream -----------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        11  #ifndef _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        12  #define _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        15      ostream synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        17  template <class charT, class traits = char_traits<charT> >
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        18  class basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        19      : virtual public basic_ios<charT,traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        20  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        21  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        22      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        23      typedef charT                          char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        24      typedef traits                         traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        25      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        26      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        27      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        28  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        29      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        30      explicit basic_ostream(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        31      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        32      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        34      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        35      basic_ostream& operator=(const basic_ostream& rhs) = delete; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        36      basic_ostream& operator=(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        37      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        38  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        39      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        40      class sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        41  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        42      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        43      basic_ostream& operator<<(basic_ostream& (*pf)(basic_ostream&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        44      basic_ostream& operator<<(basic_ios<charT, traits>& (*pf)(basic_ios<charT,traits>&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        45      basic_ostream& operator<<(ios_base& (*pf)(ios_base&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        46      basic_ostream& operator<<(bool n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        47      basic_ostream& operator<<(short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        48      basic_ostream& operator<<(unsigned short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        49      basic_ostream& operator<<(int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        50      basic_ostream& operator<<(unsigned int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        51      basic_ostream& operator<<(long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        52      basic_ostream& operator<<(unsigned long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        53      basic_ostream& operator<<(long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        54      basic_ostream& operator<<(unsigned long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        55      basic_ostream& operator<<(float f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        56      basic_ostream& operator<<(double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        57      basic_ostream& operator<<(long double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        58      basic_ostream& operator<<(const void* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        59      basic_ostream& operator<<(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        60  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        61      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        62      basic_ostream& put(char_type c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        63      basic_ostream& write(const char_type* s, streamsize n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        64      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        65  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        66      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        67      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        68      basic_ostream& seekp(pos_type);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        69      basic_ostream& seekp(off_type, ios_base::seekdir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        70  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        71      basic_ostream(const basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        72      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        73      // 27.7.3.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        74      basic_ostream& operator=(basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        75      basic_ostream& operator=(const basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        76      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        77  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        78  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        79  // 27.7.2.6.4 character inserters
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        80  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        81  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        82    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, charT);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        84  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        85    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        87  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        88    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        90  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        92  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        93    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, signed char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        95  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        96    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, unsigned char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        98  // NTBS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        99  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       100    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const charT*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       101  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       102  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       103    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       104  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       105  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       106    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       107  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       108  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       109  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       110  basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const signed char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       112  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       113    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const unsigned char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       115  // swap:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       116  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       117    void swap(basic_ostream<charT, traits>& x, basic_ostream<charT, traits>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       118  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       119  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       120    basic_ostream<charT,traits>& endl(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       121  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       122  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       123    basic_ostream<charT,traits>& ends(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       125  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       126    basic_ostream<charT,traits>& flush(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       127  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       128  // rvalue stream insertion
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       129  template <class charT, class traits, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       130    basic_ostream<charT, traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       131    operator<<(basic_ostream<charT, traits>&& os, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       132  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       133  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       134  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       135  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       136  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       137  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       138  #include <ios>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       139  #include <streambuf>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       140  #include <locale>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       141  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       142  #include <bitset>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       143  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       144  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       145  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       146  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       148  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       149  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       150  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       151  class _LIBCPP_TEMPLATE_VIS basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       152      : virtual public basic_ios<_CharT, _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       154  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       155      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       156      typedef _CharT                         char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       157      typedef _Traits                        traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       158      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       159      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       160      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       161  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       162      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       163      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       164      explicit basic_ostream(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       165      { this->init(__sb); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       166      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       167  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       168  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       169      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       170      basic_ostream(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       171  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       172      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       173      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       174      basic_ostream& operator=(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       175  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       176      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       177      void swap(basic_ostream& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       178      { basic_ios<char_type, traits_type>::swap(__rhs); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       179  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       180  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       181      basic_ostream           (const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       182      basic_ostream& operator=(const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       183  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       184      basic_ostream           (const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       185      basic_ostream& operator=(const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       186  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       187  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       188  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       189      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       190      class _LIBCPP_TEMPLATE_VIS sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       191  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       192      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       193      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       194      basic_ostream& operator<<(basic_ostream& (*__pf)(basic_ostream&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       195      { return __pf(*this); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       197      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       198      basic_ostream& operator<<(basic_ios<char_type, traits_type>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       199                                (*__pf)(basic_ios<char_type,traits_type>&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       200      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       201  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       202      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       203      basic_ostream& operator<<(ios_base& (*__pf)(ios_base&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       204      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       206      basic_ostream& operator<<(bool __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       207      basic_ostream& operator<<(short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       208      basic_ostream& operator<<(unsigned short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       209      basic_ostream& operator<<(int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       210      basic_ostream& operator<<(unsigned int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       211      basic_ostream& operator<<(long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       212      basic_ostream& operator<<(unsigned long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       213      basic_ostream& operator<<(long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       214      basic_ostream& operator<<(unsigned long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       215      basic_ostream& operator<<(float __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       216      basic_ostream& operator<<(double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       217      basic_ostream& operator<<(long double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       218      basic_ostream& operator<<(const void* __p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       219      basic_ostream& operator<<(basic_streambuf<char_type, traits_type>* __sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       220  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       221      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       222      basic_ostream& put(char_type __c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       223      basic_ostream& write(const char_type* __s, streamsize __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       224      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       225  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       226      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       227      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       228      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       229      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       230      basic_ostream& seekp(pos_type __pos);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       231      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       232      basic_ostream& seekp(off_type __off, ios_base::seekdir __dir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       233  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       234  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       235      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       236      basic_ostream() {}  // extension, intentially does not initialize
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       237  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       238  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       239  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       240  class _LIBCPP_TEMPLATE_VIS basic_ostream<_CharT, _Traits>::sentry
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       241  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       242      bool __ok_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       243      basic_ostream<_CharT, _Traits>& __os_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       244  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       245      sentry(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       246      sentry& operator=(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       248  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       249      explicit sentry(basic_ostream<_CharT, _Traits>& __os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       250      ~sentry();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       251  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       252      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       253          _LIBCPP_EXPLICIT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       254          operator bool() const {return __ok_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       255  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       256  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       257  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       258  basic_ostream<_CharT, _Traits>::sentry::sentry(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       259      : __ok_(false),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       260        __os_(__os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       262      if (__os.good())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       263      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       264          if (__os.tie())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       265              __os.tie()->flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       266          __ok_ = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       267      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       268  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       269  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       270  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       271  basic_ostream<_CharT, _Traits>::sentry::~sentry()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       272  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       273      if (__os_.rdbuf() && __os_.good() && (__os_.flags() & ios_base::unitbuf)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       274                        && !uncaught_exception())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       275      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       276  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       277          try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       278          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       279  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       280              if (__os_.rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       281                  __os_.setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       282  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       283          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       284          catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       285          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       286          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       287  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       288      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       289  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       290  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       291  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       292  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       293  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       294  basic_ostream<_CharT, _Traits>::basic_ostream(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       295  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       296      this->move(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       297  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       298  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       299  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       300  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       301  basic_ostream<_CharT, _Traits>::operator=(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       302  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       303      swap(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       304      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       305  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       306  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       307  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       309  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       310  basic_ostream<_CharT, _Traits>::~basic_ostream()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       311  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       312  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       313  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       314  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       315  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       316  basic_ostream<_CharT, _Traits>::operator<<(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       317  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       318  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       319      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       320      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       321  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       322          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       323          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       324          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       325              if (__sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       326              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       327  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       328                  try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       329                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       330  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       331                      typedef istreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       332                      typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       333                      _Ip __i(__sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       334                      _Ip __eof;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       335                      _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       336                      size_t __c = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       337                      for (; __i != __eof; ++__i, ++__o, ++__c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       338                      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       339                          *__o = *__i;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       340                          if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       341                              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       342                      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       343                      if (__c == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       344                          this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       345  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       346                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       347                  catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       348                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       349                      this->__set_failbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       350                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       351  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       352              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       353              else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       354                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       355          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       356  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       357      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       358      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       359      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       360          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       361      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       362  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       363      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       364  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       365  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       366  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       367  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       368  basic_ostream<_CharT, _Traits>::operator<<(bool __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       369  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       370  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       371      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       372      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       373  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       374          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       375          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       376          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       377              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       378              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       379              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       380                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       381          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       382  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       383      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       384      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       385      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       386          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       387      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       388  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       389      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       390  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       391  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       392  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       393  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       394  basic_ostream<_CharT, _Traits>::operator<<(short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       395  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       396  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       397      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       398      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       399  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       400          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       401          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       402          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       403              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       404              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       405              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       406              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       407                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       408                          static_cast<long>(static_cast<unsigned short>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       409                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       410                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       411          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       412  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       413      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       414      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       415      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       416          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       417      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       418  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       419      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       420  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       421  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       422  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       423  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       424  basic_ostream<_CharT, _Traits>::operator<<(unsigned short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       425  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       426  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       427      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       428      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       429  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       430          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       431          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       432          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       433              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       434              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       435              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       436                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       437          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       438  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       439      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       440      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       441      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       442          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       443      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       444  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       445      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       446  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       447  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       448  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       449  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       450  basic_ostream<_CharT, _Traits>::operator<<(int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       451  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       452  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       453      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       454      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       455  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       456          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       457          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       458          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       459              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       460              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       461              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       462              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       463                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       464                          static_cast<long>(static_cast<unsigned int>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       465                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       466                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       467          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       468  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       469      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       470      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       471      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       472          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       473      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       474  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       475      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       476  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       477  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       478  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       479  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       480  basic_ostream<_CharT, _Traits>::operator<<(unsigned int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       481  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       482  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       483      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       484      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       485  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       486          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       487          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       488          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       489              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       490              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       491              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       492                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       493          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       494  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       495      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       496      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       497      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       498          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       499      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       500  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       501      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       502  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       504  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       505  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       506  basic_ostream<_CharT, _Traits>::operator<<(long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       507  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       508  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       509      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       510      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       511  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       512          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       513          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       514          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       515              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       516              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       517              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       518                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       519          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       520  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       521      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       522      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       523      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       524          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       525      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       526  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       527      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       528  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       529  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       530  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       531  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       532  basic_ostream<_CharT, _Traits>::operator<<(unsigned long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       533  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       534  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       535      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       536      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       537  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       538          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       539          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       540          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       541              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       542              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       543              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       544                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       545          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       546  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       547      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       548      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       549      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       550          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       551      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       552  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       553      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       554  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       555  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       556  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       557  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       558  basic_ostream<_CharT, _Traits>::operator<<(long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       559  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       560  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       561      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       562      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       563  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       564          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       565          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       566          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       567              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       568              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       569              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       570                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       571          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       572  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       573      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       574      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       575      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       576          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       577      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       578  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       579      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       580  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       581  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       582  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       583  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       584  basic_ostream<_CharT, _Traits>::operator<<(unsigned long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       585  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       586  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       587      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       588      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       589  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       590          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       591          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       592          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       593              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       594              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       595              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       596                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       597          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       598  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       599      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       600      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       601      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       602          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       603      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       604  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       605      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       606  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       607  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       608  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       609  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       610  basic_ostream<_CharT, _Traits>::operator<<(float __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       611  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       612  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       613      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       614      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       615  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       616          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       617          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       618          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       619              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       620              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       621              if (__f.put(*this, *this, this->fill(), static_cast<double>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       622                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       623          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       624  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       625      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       626      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       627      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       628          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       629      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       630  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       631      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       632  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       633  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       634  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       635  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       636  basic_ostream<_CharT, _Traits>::operator<<(double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       637  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       638  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       639      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       640      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       641  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       642          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       643          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       644          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       645              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       646              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       647              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       648                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       649          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       650  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       651      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       652      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       653      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       654          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       655      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       656  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       657      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       658  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       659  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       660  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       661  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       662  basic_ostream<_CharT, _Traits>::operator<<(long double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       663  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       664  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       665      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       666      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       667  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       668          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       669          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       670          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       671              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       672              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       673              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       674                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       675          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       676  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       677      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       678      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       679      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       680          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       681      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       682  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       683      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       684  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       685  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       686  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       687  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       688  basic_ostream<_CharT, _Traits>::operator<<(const void* __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       689  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       690  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       691      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       692      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       693  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       694          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       695          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       696          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       697              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       698              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       699              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       700                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       701          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       702  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       703      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       704      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       705      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       706          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       707      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       708  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       709      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       710  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       711  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       712  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       713  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       714  __put_character_sequence(basic_ostream<_CharT, _Traits>& __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       715                            const _CharT* __str, size_t __len)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       716  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       717  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       718      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       719      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       720  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       721          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       722          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       723          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       724              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       725              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       726                                   __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       727                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       728                                       __str + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       729                                       __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       730                                   __str + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       731                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       732                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       733                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       734          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       735  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       736      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       737      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       738      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       739          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       740      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       741  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       742      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       743  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       744  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       745  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       746  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       747  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       748  operator<<(basic_ostream<_CharT, _Traits>& __os, _CharT __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       750      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       751  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       753  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       754  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       755  operator<<(basic_ostream<_CharT, _Traits>& __os, char __cn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       756  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       757  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       758      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       759      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       760  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       761          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       762          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       763          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       764              _CharT __c = __os.widen(__cn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       765              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       766              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       767                                   &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       768                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       769                                       &__c + 1 :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       770                                       &__c,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       771                                   &__c + 1,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       772                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       773                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       774                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       775          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       776  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       777      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       778      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       779      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       780          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       781      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       782  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       783      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       784  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       785  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       786  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       787  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       788  operator<<(basic_ostream<char, _Traits>& __os, char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       790      return _VSTD::__put_character_sequence(__os, &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       791  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       793  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       794  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       795  operator<<(basic_ostream<char, _Traits>& __os, signed char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       796  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       797      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       798  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       799  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       800  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       801  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       802  operator<<(basic_ostream<char, _Traits>& __os, unsigned char __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       803  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       804      return _VSTD::__put_character_sequence(__os, (char *) &__c, 1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       805  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       806  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       807  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       808  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       809  operator<<(basic_ostream<_CharT, _Traits>& __os, const _CharT* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       810  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       811      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       812  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       813  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       814  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       815  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       816  operator<<(basic_ostream<_CharT, _Traits>& __os, const char* __strn)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       817  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       818  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       819      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       820      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       821  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       822          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       823          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       824          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       825              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       826              size_t __len = char_traits<char>::length(__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       827              const int __bs = 100;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       828              _CharT __wbb[__bs];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       829              _CharT* __wb = __wbb;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       830              unique_ptr<_CharT, void(*)(void*)> __h(0, free);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       831              if (__len > __bs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       832              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       833                  __wb = (_CharT*)malloc(__len*sizeof(_CharT));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       834                  if (__wb == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       835                      __throw_bad_alloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       836                  __h.reset(__wb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       837              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       838              for (_CharT* __p = __wb; *__strn != '\0'; ++__strn, ++__p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       839                  *__p = __os.widen(*__strn);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       840              if (__pad_and_output(_Ip(__os),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       841                                   __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       842                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       843                                       __wb + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       844                                       __wb,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       845                                   __wb + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       846                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       847                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       848                  __os.setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       849          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       850  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       851      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       852      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       853      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       854          __os.__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       855      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       856  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       857      return __os;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       858  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       859  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       860  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       861  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       862  operator<<(basic_ostream<char, _Traits>& __os, const char* __str)
; Function _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc:        .type   func
        sub.a   a10,#88
        mov.aa  a12,a4
        mov.aa  a13,a5

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       863  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       864      return _VSTD::__put_character_sequence(__os, __str, _Traits::length(__str));
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10],a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]0
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]4,d15
        mov.aa  a4,a13
        call    strlen
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]
        st.a    [a15],a2
        mov.aa  a4,a12
        mov.aa  a5,a13
        mov     d4,d2
        call    _ZSt24__put_character_sequenceIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_j
        j       .L16

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       865  }
.L16:
        ret

___ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc_function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       866  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       867  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       868  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       869  operator<<(basic_ostream<char, _Traits>& __os, const signed char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       870  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       871      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       872      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       873  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       874  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       875  template<class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       876  basic_ostream<char, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       877  operator<<(basic_ostream<char, _Traits>& __os, const unsigned char* __str)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       878  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       879      const char *__s = (const char *) __str;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       880      return _VSTD::__put_character_sequence(__os, __s, _Traits::length(__s));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       881  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       882  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       883  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       884  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       885  basic_ostream<_CharT, _Traits>::put(char_type __c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       886  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       887  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       888      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       889      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       890  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       891          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       892          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       893          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       894              typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       895              _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       896              *__o = __c;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       897              if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       898                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       899          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       900  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       901      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       902      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       903      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       904          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       905      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       906  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       907      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       908  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       909  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       910  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       911  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       912  basic_ostream<_CharT, _Traits>::write(const char_type* __s, streamsize __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       913  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       914  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       915      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       916      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       917  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       918          sentry __sen(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       919          if (__sen && __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       920          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       921              if (this->rdbuf()->sputn(__s, __n) != __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       922                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       923          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       924  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       925      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       926      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       927      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       928          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       929      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       930  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       931      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       932  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       933  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       934  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       935  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       936  basic_ostream<_CharT, _Traits>::flush()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       937  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       938  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       939      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       940      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       941  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       942          if (this->rdbuf())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       943          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       944              sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       945              if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       946              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       947                  if (this->rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       948                      this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       949              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       950          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       951  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       952      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       953      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       954      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       955          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       956      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       957  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       958      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       959  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       960  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       961  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       962  typename basic_ostream<_CharT, _Traits>::pos_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       963  basic_ostream<_CharT, _Traits>::tellp()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       964  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       965      if (this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       966          return pos_type(-1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       967      return this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::out);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       968  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       969  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       970  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       971  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       972  basic_ostream<_CharT, _Traits>::seekp(pos_type __pos)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       973  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       974      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       975      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       976      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       977          if (this->rdbuf()->pubseekpos(__pos, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       978              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       979      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       980      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       981  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       982  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       983  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       984  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       985  basic_ostream<_CharT, _Traits>::seekp(off_type __off, ios_base::seekdir __dir)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       986  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       987      sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       988      if (!this->fail())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       989      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       990          if (this->rdbuf()->pubseekoff(__off, __dir, ios_base::out) == pos_type(-1))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       991              this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       992      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       993      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       994  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       996  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       997  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       998  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       999  endl(basic_ostream<_CharT, _Traits>& __os)
; Function _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_:     .type     func
        mov.aa  a15,a4

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1000  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1001      __os.put(__os.widen('\n'));
        jz.a    a15,.L17
        ld.a    a2,[a15]
        ld.w    d15,[a2]-12
        addsc.a a4,a15,d15,#0
        j       .L18
.L17:
        mov.a   a4,#0
.L18:
        mov     d4,#10
        call    _ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc
        mov.aa  a4,a15
        mov     d4,d2
        call    _ZNSo3putEc

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1002      __os.flush();
        mov.aa  a4,a15
        call    _ZNSo5flushEv

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1003      return __os;
        mov.aa  a2,a15
        j       .L19

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream      1004  }
.L19:
        ret

___ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__function_end:
        ; End of function

; Function _ZSt24__put_character_sequenceIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_j
_ZSt24__put_character_sequenceIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_j:  .type       func
        lea     a10,[a10]-448
        mov.aa  a12,a4
        st.a    [a10]440,a5
        mov     d8,d4
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]88,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]88
        st.a    [a15],a2
        mov     d0,#1
        st.b    [a10]92,d0
        movh.a  a15,#@his(_999002___T17)
        lea     a15,[a15]@los(_999002___T17)
        st.a    [a10]96,a15
        lea     a15,[a10]84
        st.a    [a10]100,a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d0,[a15]0
        st.h    [a10]108,d0
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d0,#65535
        st.h    [a15],d0
        lea     a15,[a10]88
        st.a    [a10],a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]0
        st.a    [a15],a2
        mov     d15,#5
        st.b    [a10]4,d15
        movh.a  a15,#@his(_999001___T16)
        lea     a15,[a15]@los(_999001___T16)
        st.a    [a10]72,a15
        mov.a   a15,#0
        st.a    [a10]76,a15
        mov.u   d0,#65535
        st.h    [a10]80,d0
        lea     a4,[a10]8
        call    setjmp
        jne     d2,#0,.L20
        lea     a4,[a10]172
        mov.aa  a5,a12
        call    _ZNSo6sentryC1ERSo
        lea     a15,[a10]172
        st.a    [a10]84,a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov     d0,#0
        st.h    [a15],d0
        ld.b    d0,[a10]172
        jeq     d0,#0,.L21
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]184,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]184
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]188,d15
        jz.a    a12,.L22
        ld.a    a15,[a12]
        ld.w    d15,[a15]-12
        addsc.a a15,a12,d15,#0
        j       .L23
.L22:
        mov.a   a15,#0
.L23:
        ld.a    a15,[a15]24
        st.a    [a10]436,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]184
        st.a    [a15],a2
        jz.a    a12,.L24
        ld.a    a15,[a12]
        ld.w    d15,[a15]-12
        addsc.a a15,a12,d15,#0
        j       .L25
.L24:
        mov.a   a15,#0
.L25:
        ld.w    d15,[a15]4
        and     d0,d15,#176
        mov     d15,#32
        jne     d15,d0,.L26
        ld.a    a15,[a10]440
        addsc.a a13,a15,d8,#0
        j       .L27
.L26:
        ld.a    a13,[a10]440
.L27:
        jz.a    a12,.L28
        ld.a    a2,[a12]
        ld.w    d15,[a2]-12
        addsc.a a14,a12,d15,#0
        j       .L29
.L28:
        mov.a   a14,#0
.L29:
        jz.a    a12,.L30
        ld.a    a2,[a12]
        ld.w    d15,[a2]-12
        addsc.a a15,a12,d15,#0
        st.a    [a10]444,a15
        j       .L31
.L30:
        mov.a   a15,#0
        st.a    [a10]444,a15
.L31:
        mov     d15,#-1
        ld.w    d0,[a15]76
        ld.a    a15,[a10]184
        st.a    [a10]352,a15
        mov     d1,#6
        st.b    [a10]356,d1
        eq      d15,d15,d0
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]352
        st.a    [a15],a2

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\__string      244          {return __c1 == __c2;}      (inlined)
        j       .L32
.L32:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         2  //===-------------------------- ostream -----------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream         9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        11  #ifndef _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        12  #define _LIBCPP_OSTREAM
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        15      ostream synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        17  template <class charT, class traits = char_traits<charT> >
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        18  class basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        19      : virtual public basic_ios<charT,traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        20  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        21  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        22      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        23      typedef charT                          char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        24      typedef traits                         traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        25      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        26      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        27      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        28  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        29      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        30      explicit basic_ostream(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        31      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        32      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        34      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        35      basic_ostream& operator=(const basic_ostream& rhs) = delete; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        36      basic_ostream& operator=(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        37      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        38  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        39      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        40      class sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        41  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        42      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        43      basic_ostream& operator<<(basic_ostream& (*pf)(basic_ostream&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        44      basic_ostream& operator<<(basic_ios<charT, traits>& (*pf)(basic_ios<charT,traits>&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        45      basic_ostream& operator<<(ios_base& (*pf)(ios_base&));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        46      basic_ostream& operator<<(bool n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        47      basic_ostream& operator<<(short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        48      basic_ostream& operator<<(unsigned short n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        49      basic_ostream& operator<<(int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        50      basic_ostream& operator<<(unsigned int n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        51      basic_ostream& operator<<(long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        52      basic_ostream& operator<<(unsigned long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        53      basic_ostream& operator<<(long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        54      basic_ostream& operator<<(unsigned long long n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        55      basic_ostream& operator<<(float f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        56      basic_ostream& operator<<(double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        57      basic_ostream& operator<<(long double f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        58      basic_ostream& operator<<(const void* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        59      basic_ostream& operator<<(basic_streambuf<char_type,traits>* sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        60  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        61      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        62      basic_ostream& put(char_type c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        63      basic_ostream& write(const char_type* s, streamsize n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        64      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        65  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        66      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        67      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        68      basic_ostream& seekp(pos_type);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        69      basic_ostream& seekp(off_type, ios_base::seekdir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        70  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        71      basic_ostream(const basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        72      basic_ostream(basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        73      // 27.7.3.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        74      basic_ostream& operator=(basic_ostream& rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        75      basic_ostream& operator=(const basic_ostream&& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        76      void swap(basic_ostream& rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        77  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        78  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        79  // 27.7.2.6.4 character inserters
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        80  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        81  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        82    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, charT);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        84  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        85    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        87  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        88    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        90  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        92  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        93    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, signed char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        95  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        96    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, unsigned char);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        98  // NTBS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream        99  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       100    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const charT*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       101  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       102  template<class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       103    basic_ostream<charT,traits>& operator<<(basic_ostream<charT,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       104  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       105  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       106    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       107  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       108  // signed and unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       109  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       110  basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const signed char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       112  template<class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       113    basic_ostream<char,traits>& operator<<(basic_ostream<char,traits>&, const unsigned char*);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       115  // swap:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       116  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       117    void swap(basic_ostream<charT, traits>& x, basic_ostream<charT, traits>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       118  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       119  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       120    basic_ostream<charT,traits>& endl(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       121  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       122  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       123    basic_ostream<charT,traits>& ends(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       125  template <class charT, class traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       126    basic_ostream<charT,traits>& flush(basic_ostream<charT,traits>& os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       127  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       128  // rvalue stream insertion
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       129  template <class charT, class traits, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       130    basic_ostream<charT, traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       131    operator<<(basic_ostream<charT, traits>&& os, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       132  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       133  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       134  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       135  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       136  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       137  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       138  #include <ios>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       139  #include <streambuf>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       140  #include <locale>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       141  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       142  #include <bitset>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       143  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       144  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       145  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       146  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       148  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       149  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       150  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       151  class _LIBCPP_TEMPLATE_VIS basic_ostream
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       152      : virtual public basic_ios<_CharT, _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       154  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       155      // types (inherited from basic_ios (27.5.4)):
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       156      typedef _CharT                         char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       157      typedef _Traits                        traits_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       158      typedef typename traits_type::int_type int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       159      typedef typename traits_type::pos_type pos_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       160      typedef typename traits_type::off_type off_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       161  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       162      // 27.7.2.2 Constructor/destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       163      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       164      explicit basic_ostream(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       165      { this->init(__sb); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       166      virtual ~basic_ostream();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       167  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       168  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       169      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       170      basic_ostream(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       171  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       172      // 27.7.2.3 Assign/swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       173      inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       174      basic_ostream& operator=(basic_ostream&& __rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       175  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       176      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       177      void swap(basic_ostream& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       178      { basic_ios<char_type, traits_type>::swap(__rhs); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       179  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       180  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       181      basic_ostream           (const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       182      basic_ostream& operator=(const basic_ostream& __rhs) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       183  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       184      basic_ostream           (const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       185      basic_ostream& operator=(const basic_ostream& __rhs); // not defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       186  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       187  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       188  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       189      // 27.7.2.4 Prefix/suffix:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       190      class _LIBCPP_TEMPLATE_VIS sentry;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       191  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       192      // 27.7.2.6 Formatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       193      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       194      basic_ostream& operator<<(basic_ostream& (*__pf)(basic_ostream&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       195      { return __pf(*this); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       197      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       198      basic_ostream& operator<<(basic_ios<char_type, traits_type>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       199                                (*__pf)(basic_ios<char_type,traits_type>&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       200      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       201  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       202      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       203      basic_ostream& operator<<(ios_base& (*__pf)(ios_base&))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       204      { __pf(*this); return *this; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       206      basic_ostream& operator<<(bool __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       207      basic_ostream& operator<<(short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       208      basic_ostream& operator<<(unsigned short __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       209      basic_ostream& operator<<(int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       210      basic_ostream& operator<<(unsigned int __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       211      basic_ostream& operator<<(long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       212      basic_ostream& operator<<(unsigned long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       213      basic_ostream& operator<<(long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       214      basic_ostream& operator<<(unsigned long long __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       215      basic_ostream& operator<<(float __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       216      basic_ostream& operator<<(double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       217      basic_ostream& operator<<(long double __f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       218      basic_ostream& operator<<(const void* __p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       219      basic_ostream& operator<<(basic_streambuf<char_type, traits_type>* __sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       220  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       221      // 27.7.2.7 Unformatted output:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       222      basic_ostream& put(char_type __c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       223      basic_ostream& write(const char_type* __s, streamsize __n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       224      basic_ostream& flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       225  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       226      // 27.7.2.5 seeks:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       227      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       228      pos_type tellp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       229      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       230      basic_ostream& seekp(pos_type __pos);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       231      inline _LIBCPP_EXTERN_TEMPLATE_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       232      basic_ostream& seekp(off_type __off, ios_base::seekdir __dir);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       233  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       234  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       235      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       236      basic_ostream() {}  // extension, intentially does not initialize
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       237  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       238  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       239  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       240  class _LIBCPP_TEMPLATE_VIS basic_ostream<_CharT, _Traits>::sentry
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       241  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       242      bool __ok_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       243      basic_ostream<_CharT, _Traits>& __os_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       244  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       245      sentry(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       246      sentry& operator=(const sentry&); // = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       248  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       249      explicit sentry(basic_ostream<_CharT, _Traits>& __os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       250      ~sentry();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       251  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       252      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       253          _LIBCPP_EXPLICIT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       254          operator bool() const {return __ok_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       255  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       256  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       257  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       258  basic_ostream<_CharT, _Traits>::sentry::sentry(basic_ostream<_CharT, _Traits>& __os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       259      : __ok_(false),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       260        __os_(__os)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       262      if (__os.good())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       263      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       264          if (__os.tie())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       265              __os.tie()->flush();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       266          __ok_ = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       267      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       268  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       269  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       270  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       271  basic_ostream<_CharT, _Traits>::sentry::~sentry()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       272  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       273      if (__os_.rdbuf() && __os_.good() && (__os_.flags() & ios_base::unitbuf)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       274                        && !uncaught_exception())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       275      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       276  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       277          try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       278          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       279  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       280              if (__os_.rdbuf()->pubsync() == -1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       281                  __os_.setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       282  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       283          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       284          catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       285          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       286          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       287  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       288      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       289  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       290  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       291  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       292  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       293  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       294  basic_ostream<_CharT, _Traits>::basic_ostream(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       295  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       296      this->move(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       297  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       298  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       299  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       300  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       301  basic_ostream<_CharT, _Traits>::operator=(basic_ostream&& __rhs)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       302  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       303      swap(__rhs);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       304      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       305  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       306  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       307  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       309  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       310  basic_ostream<_CharT, _Traits>::~basic_ostream()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       311  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       312  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       313  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       314  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       315  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       316  basic_ostream<_CharT, _Traits>::operator<<(basic_streambuf<char_type, traits_type>* __sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       317  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       318  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       319      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       320      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       321  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       322          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       323          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       324          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       325              if (__sb)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       326              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       327  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       328                  try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       329                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       330  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       331                      typedef istreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       332                      typedef ostreambuf_iterator<_CharT, _Traits> _Op;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       333                      _Ip __i(__sb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       334                      _Ip __eof;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       335                      _Op __o(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       336                      size_t __c = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       337                      for (; __i != __eof; ++__i, ++__o, ++__c)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       338                      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       339                          *__o = *__i;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       340                          if (__o.failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       341                              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       342                      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       343                      if (__c == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       344                          this->setstate(ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       345  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       346                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       347                  catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       348                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       349                      this->__set_failbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       350                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       351  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       352              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       353              else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       354                  this->setstate(ios_base::badbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       355          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       356  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       357      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       358      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       359      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       360          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       361      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       362  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       363      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       364  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       365  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       366  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       367  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       368  basic_ostream<_CharT, _Traits>::operator<<(bool __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       369  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       370  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       371      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       372      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       373  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       374          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       375          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       376          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       377              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       378              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       379              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       380                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       381          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       382  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       383      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       384      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       385      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       386          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       387      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       388  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       389      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       390  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       391  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       392  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       393  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       394  basic_ostream<_CharT, _Traits>::operator<<(short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       395  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       396  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       397      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       398      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       399  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       400          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       401          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       402          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       403              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       404              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       405              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       406              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       407                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       408                          static_cast<long>(static_cast<unsigned short>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       409                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       410                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       411          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       412  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       413      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       414      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       415      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       416          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       417      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       418  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       419      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       420  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       421  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       422  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       423  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       424  basic_ostream<_CharT, _Traits>::operator<<(unsigned short __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       425  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       426  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       427      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       428      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       429  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       430          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       431          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       432          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       433              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       434              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       435              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       436                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       437          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       438  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       439      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       440      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       441      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       442          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       443      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       444  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       445      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       446  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       447  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       448  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       449  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       450  basic_ostream<_CharT, _Traits>::operator<<(int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       451  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       452  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       453      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       454      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       455  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       456          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       457          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       458          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       459              ios_base::fmtflags __flags = ios_base::flags() & ios_base::basefield;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       460              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       461              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       462              if (__f.put(*this, *this, this->fill(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       463                          __flags == ios_base::oct || __flags == ios_base::hex ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       464                          static_cast<long>(static_cast<unsigned int>(__n))  :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       465                          static_cast<long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       466                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       467          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       468  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       469      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       470      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       471      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       472          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       473      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       474  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       475      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       476  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       477  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       478  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       479  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       480  basic_ostream<_CharT, _Traits>::operator<<(unsigned int __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       481  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       482  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       483      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       484      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       485  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       486          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       487          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       488          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       489              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       490              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       491              if (__f.put(*this, *this, this->fill(), static_cast<unsigned long>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       492                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       493          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       494  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       495      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       496      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       497      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       498          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       499      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       500  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       501      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       502  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       504  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       505  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       506  basic_ostream<_CharT, _Traits>::operator<<(long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       507  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       508  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       509      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       510      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       511  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       512          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       513          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       514          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       515              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       516              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       517              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       518                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       519          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       520  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       521      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       522      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       523      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       524          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       525      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       526  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       527      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       528  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       529  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       530  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       531  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       532  basic_ostream<_CharT, _Traits>::operator<<(unsigned long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       533  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       534  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       535      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       536      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       537  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       538          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       539          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       540          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       541              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       542              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       543              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       544                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       545          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       546  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       547      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       548      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       549      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       550          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       551      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       552  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       553      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       554  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       555  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       556  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       557  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       558  basic_ostream<_CharT, _Traits>::operator<<(long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       559  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       560  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       561      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       562      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       563  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       564          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       565          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       566          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       567              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       568              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       569              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       570                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       571          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       572  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       573      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       574      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       575      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       576          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       577      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       578  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       579      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       580  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       581  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       582  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       583  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       584  basic_ostream<_CharT, _Traits>::operator<<(unsigned long long __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       585  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       586  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       587      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       588      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       589  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       590          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       591          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       592          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       593              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       594              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       595              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       596                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       597          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       598  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       599      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       600      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       601      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       602          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       603      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       604  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       605      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       606  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       607  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       608  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       609  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       610  basic_ostream<_CharT, _Traits>::operator<<(float __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       611  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       612  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       613      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       614      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       615  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       616          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       617          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       618          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       619              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       620              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       621              if (__f.put(*this, *this, this->fill(), static_cast<double>(__n)).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       622                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       623          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       624  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       625      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       626      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       627      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       628          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       629      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       630  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       631      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       632  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       633  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       634  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       635  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       636  basic_ostream<_CharT, _Traits>::operator<<(double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       637  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       638  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       639      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       640      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       641  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       642          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       643          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       644          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       645              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       646              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       647              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       648                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       649          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       650  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       651      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       652      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       653      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       654          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       655      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       656  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       657      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       658  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       659  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       660  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       661  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       662  basic_ostream<_CharT, _Traits>::operator<<(long double __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       663  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       664  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       665      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       666      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       667  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       668          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       669          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       670          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       671              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       672              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       673              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       674                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       675          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       676  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       677      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       678      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       679      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       680          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       681      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       682  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       683      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       684  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       685  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       686  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       687  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       688  basic_ostream<_CharT, _Traits>::operator<<(const void* __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       689  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       690  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       691      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       692      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       693  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       694          sentry __s(*this);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       695          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       696          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       697              typedef num_put<char_type, ostreambuf_iterator<char_type, traits_type> > _Fp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       698              const _Fp& __f = use_facet<_Fp>(this->getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       699              if (__f.put(*this, *this, this->fill(), __n).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       700                  this->setstate(ios_base::badbit | ios_base::failbit);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       701          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       702  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       703      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       704      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       705      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       706          this->__set_badbit_and_consider_rethrow();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       707      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       708  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       709      return *this;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       710  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       711  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       712  template<class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       713  basic_ostream<_CharT, _Traits>&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       714  __put_character_sequence(basic_ostream<_CharT, _Traits>& __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       715                            const _CharT* __str, size_t __len)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       716  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       717  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       718      try
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       719      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       720  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       721          typename basic_ostream<_CharT, _Traits>::sentry __s(__os);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       722          if (__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       723          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       724              typedef ostreambuf_iterator<_CharT, _Traits> _Ip;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       725              if (__pad_and_output(_Ip(__os),
        jeq     d15,#0,.L33
        mov     d4,#32
        ld.a    a4,[a10]444
        call    _ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc
        ld.a    a15,[a10]444
        st.w    [a15]76,d2
        j       .L34
.L33:
.L34:
        ld.a    a15,[a10]436
        mov.d   d4,a15
        ld.a    a15,[a10]440
        addsc.a a6,a15,d8,#0
        ld.a    a15,[a10]444
        ld.w    d15,[a15]76
        extr    d5,d15,#0,#8
        ld.a    a4,[a10]440
        mov.aa  a5,a13
        mov.aa  a7,a14
        call    _ZSt16__pad_and_outputIcSt11char_traitsIcEESt19ostreambuf_iteratorIT_T0_ES5_PKS3_S7_S7_RSt8ios_baseS3_
        st.w    [a10]180,d2
        lea     a2,[a10]180
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]268,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a4,[a10]268
        st.a    [a15],a4
        mov     d15,#6
        st.b    [a10]272,d15
        ld.a    a15,[a2]
        eqz.a   d15,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]268
        st.a    [a15],a2
        jeq     d15,#0,.L35

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       726                                   __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       727                                   (__os.flags() & ios_base::adjustfield) == ios_base::left ?
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       728                                       __str + __len :
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       729                                       __str,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       730                                   __str + __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       731                                   __os,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       732                                   __os.fill()).failed())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       733                  __os.setstate(ios_base::badbit | ios_base::failbit);
        ld.a    a15,[a12]
        ld.w    d15,[a15]-12
        addsc.a a4,a12,d15,#0
        ld.w    d15,[a4]16
        or      d4,d15,#5
        call    _ZNSt8ios_base5clearEj
.L35:
.L21:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       734          }
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d15,#65535
        st.h    [a15],d15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       735  #ifndef _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       736      }
        lea     a4,[a10]172
        call    _ZNSo6sentryD1Ev
        j       .L36
.L20:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       737      catch (...)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       738      {
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov     d15,#1
        st.h    [a15],d15
        call    __exception_caught

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       739          __os.__set_badbit_and_consider_rethrow();
        ld.a    a15,[a12]
        ld.w    d15,[a15]-12
        addsc.a a4,a12,d15,#0
        call    _ZNSt8ios_base33__set_badbit_and_consider_rethrowEv
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d15,#65535
        st.h    [a15],d15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       740      }
        call    __destroy_exception_object
.L36:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       741  #endif  // _LIBCPP_NO_EXCEPTIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       742      return __os;
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a10]108
        st.h    [a15],d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]88
        st.a    [a15],a2
        mov.aa  a2,a12
        j       .L37

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\ostream       743  }
.L37:
        ret

___ZSt24__put_character_sequenceIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_j_function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          2  //===-------------------------- locale ------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale          9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         11  #ifndef _LIBCPP_LOCALE
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         12  #define _LIBCPP_LOCALE
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         15      locale synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         17  namespace std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         18  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         19  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         20  class locale
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         21  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         22  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         23      // types:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         24      class facet;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         25      class id;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         26  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         27      typedef int category;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         28      static const category // values assigned here are for exposition only
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         29          none     = 0x000,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         30          collate  = 0x010,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         31          ctype    = 0x020,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         32          monetary = 0x040,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         33          numeric  = 0x080,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         34          time     = 0x100,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         35          messages = 0x200,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         36          all = collate | ctype | monetary | numeric | time | messages;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         37  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         38      // construct/copy/destroy:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         39      locale() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         40      locale(const locale& other) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         41      explicit locale(const char* std_name);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         42      explicit locale(const string& std_name);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         43      locale(const locale& other, const char* std_name, category);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         44      locale(const locale& other, const string& std_name, category);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         45      template <class Facet> locale(const locale& other, Facet* f);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         46      locale(const locale& other, const locale& one, category);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         47  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         48      ~locale(); // not virtual
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         49  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         50      const locale& operator=(const locale& other) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         51  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         52      template <class Facet> locale combine(const locale& other) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         53  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         54      // locale operations:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         55      basic_string<char> name() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         56      bool operator==(const locale& other) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         57      bool operator!=(const locale& other) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         58      template <class charT, class Traits, class Allocator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         59        bool operator()(const basic_string<charT,Traits,Allocator>& s1,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         60                        const basic_string<charT,Traits,Allocator>& s2) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         61  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         62      // global locale objects:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         63      static __far         locale global(const locale&);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         64      static __far         const locale& classic();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         65  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         66  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         67  template <class Facet> const Facet& use_facet(const locale&);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         68  template <class Facet> bool has_facet(const locale&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         69  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         70  // 22.3.3, convenience interfaces:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         71  template <class charT> bool isspace (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         72  template <class charT> bool isprint (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         73  template <class charT> bool iscntrl (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         74  template <class charT> bool isupper (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         75  template <class charT> bool islower (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         76  template <class charT> bool isalpha (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         77  template <class charT> bool isdigit (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         78  template <class charT> bool ispunct (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         79  template <class charT> bool isxdigit(charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         80  template <class charT> bool isalnum (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         81  template <class charT> bool isgraph (charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         82  template <class charT> charT toupper(charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         83  template <class charT> charT tolower(charT c, const locale& loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         84  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         85  template<class Codecvt, class Elem = wchar_t,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         86           class Wide_alloc = allocator<Elem>,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         87           class Byte_alloc = allocator<char>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         88  class wstring_convert
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         89  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         90  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         91      typedef basic_string<char, char_traits<char>, Byte_alloc> byte_string;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         92      typedef basic_string<Elem, char_traits<Elem>, Wide_alloc> wide_string;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         93      typedef typename Codecvt::state_type                      state_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         94      typedef typename wide_string::traits_type::int_type       int_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         95  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         96      explicit wstring_convert(Codecvt* pcvt = new Codecvt);          // explicit in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         97      wstring_convert(Codecvt* pcvt, state_type state);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         98      explicit wstring_convert(const byte_string& byte_err,           // explicit in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale         99                      const wide_string& wide_err = wide_string());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        100      wstring_convert(const wstring_convert&) = delete;               // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        101      wstring_convert & operator=(const wstring_convert &) = delete;  // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        102      ~wstring_convert();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        103  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        104      wide_string from_bytes(char byte);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        105      wide_string from_bytes(const char* ptr);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        106      wide_string from_bytes(const byte_string& str);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        107      wide_string from_bytes(const char* first, const char* last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        108  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        109      byte_string to_bytes(Elem wchar);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        110      byte_string to_bytes(const Elem* wptr);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        111      byte_string to_bytes(const wide_string& wstr);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        112      byte_string to_bytes(const Elem* first, const Elem* last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        113  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        114      size_t converted() const; // noexcept in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        115      state_type state() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        116  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        117  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        118  template <class Codecvt, class Elem = wchar_t, class Tr = char_traits<Elem>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        119  class wbuffer_convert
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        120      : public basic_streambuf<Elem, Tr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        121  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        122  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        123      typedef typename Tr::state_type state_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        125      explicit wbuffer_convert(streambuf* bytebuf = 0, Codecvt* pcvt = new Codecvt,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        126                      state_type state = state_type());       // explicit in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        127      wbuffer_convert(const wbuffer_convert&) = delete;               // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        128      wbuffer_convert & operator=(const wbuffer_convert &) = delete;  // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        129      ~wbuffer_convert();                                             // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        130      
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        131      streambuf* rdbuf() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        132      streambuf* rdbuf(streambuf* bytebuf);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        133  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        134      state_type state() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        135  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        136  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        137  // 22.4.1 and 22.4.1.3, ctype:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        138  class ctype_base;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        139  template <class charT> class ctype;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        140  template <> class ctype<char>; // specialization
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        141  template <class charT> class ctype_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        142  template <> class ctype_byname<char>; // specialization
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        143  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        144  class codecvt_base;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        145  template <class internT, class externT, class stateT> class codecvt;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        146  template <class internT, class externT, class stateT> class codecvt_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        148  // 22.4.2 and 22.4.3, numeric:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        149  template <class charT, class InputIterator> class num_get;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        150  template <class charT, class OutputIterator> class num_put;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        151  template <class charT> class numpunct;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        152  template <class charT> class numpunct_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        153  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        154  // 22.4.4, col lation:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        155  template <class charT> class collate;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        156  template <class charT> class collate_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        157  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        158  // 22.4.5, date and time:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        159  class time_base;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        160  template <class charT, class InputIterator> class time_get;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        161  template <class charT, class InputIterator> class time_get_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        162  template <class charT, class OutputIterator> class time_put;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        163  template <class charT, class OutputIterator> class time_put_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        164  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        165  // 22.4.6, money:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        166  class money_base;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        167  template <class charT, class InputIterator> class money_get;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        168  template <class charT, class OutputIterator> class money_put;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        169  template <class charT, bool Intl> class moneypunct;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        170  template <class charT, bool Intl> class moneypunct_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        171  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        172  // 22.4.7, message retrieval:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        173  class messages_base;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        174  template <class charT> class messages;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        175  template <class charT> class messages_byname;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        176  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        177  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        178  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        179  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        180  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        181  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        182  #include <__locale>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        183  #include <__debug>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        184  #include <algorithm>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        185  #include <memory>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        186  #include <ios>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        187  #include <streambuf>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        188  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        189  #include <limits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        190  #ifndef __APPLE__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        191  #include <cstdarg>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        192  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        193  #include <cstdlib>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        194  #include <ctime>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        195  #include <cstdio>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        196  #ifdef _LIBCPP_HAS_CATOPEN
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        197  #include <nl_types.h>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        198  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        199  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        200  #ifdef __APPLE__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        201  #include <Availability.h>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        202  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        203  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        204  #ifdef _LIBCPP_LOCALE__L_EXTENSIONS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        205  #include <__bsd_locale_defaults.h>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        206  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        207  #include <__bsd_locale_fallbacks.h>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        208  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        209  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        210  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        211  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        212  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        213  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        214  _LIBCPP_PUSH_MACROS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        215  #include <__undef_macros>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        216  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        217  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        218  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        219  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        220  #if defined(__APPLE__) || defined(__FreeBSD__)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        221  #  define _LIBCPP_GET_C_LOCALE 0
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        222  #elif defined(__CloudABI__) || defined(__NetBSD__)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        223  #  define _LIBCPP_GET_C_LOCALE LC_C_LOCALE
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        224  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        225  #  define _LIBCPP_GET_C_LOCALE __cloc()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        226     // Get the C locale object
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        227     _LIBCPP_FUNC_VIS locale_t __cloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        228  #define __cloc_defined
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        229  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        230  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        231  // __scan_keyword
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        232  // Scans [__b, __e) until a match is found in the basic_strings range
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        233  //  [__kb, __ke) or until it can be shown that there is no match in [__kb, __ke).
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        234  //  __b will be incremented (visibly), consuming CharT until a match is found
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        235  //  or proved to not exist.  A keyword may be "", in which will match anything.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        236  //  If one keyword is a prefix of another, and the next CharT in the input
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        237  //  might match another keyword, the algorithm will attempt to find the longest
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        238  //  matching keyword.  If the longer matching keyword ends up not matching, then
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        239  //  no keyword match is found.  If no keyword match is found, __ke is returned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        240  //  and failbit is set in __err.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        241  //  Else an iterator pointing to the matching keyword is found.  If more than
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        242  //  one keyword matches, an iterator to the first matching keyword is returned.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        243  //  If on exit __b == __e, eofbit is set in __err.  If __case_sensitive is false,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        244  //  __ct is used to force to lower case before comparing characters.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        245  //  Examples:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        246  //  Keywords:  "a", "abb"
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        247  //  If the input is "a", the first keyword matches and eofbit is set.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        248  //  If the input is "abc", no match is found and "ab" are consumed.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        249  template <class _InputIterator, class _ForwardIterator, class _Ctype>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        250  _LIBCPP_HIDDEN
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        251  _ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        252  __scan_keyword(_InputIterator& __b, _InputIterator __e,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        253                 _ForwardIterator __kb, _ForwardIterator __ke,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        254                 const _Ctype& __ct, ios_base::iostate& __err,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        255                 bool __case_sensitive = true)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        256  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        257      typedef typename iterator_traits<_InputIterator>::value_type _CharT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        258      size_t __nkw = static_cast<size_t>(_VSTD::distance(__kb, __ke));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        259      const unsigned char __doesnt_match = '\0';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        260      const unsigned char __might_match = '\1';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        261      const unsigned char __does_match = '\2';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        262      unsigned char __statbuf[100];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        263      unsigned char* __status = __statbuf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        264  #ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        265      unique_ptr<unsigned char, void(*)(unsigned char*)> __stat_hold(0, (void(*)(unsigned char*))free);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        266  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        267      unique_ptr<unsigned char, void(*)(void*)> __stat_hold(0, free);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        268  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        269      if (__nkw > sizeof(__statbuf))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        270      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        271          __status = (unsigned char*)malloc(__nkw);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        272          if (__status == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        273              __throw_bad_alloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        274          __stat_hold.reset(__status);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        275      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        276      size_t __n_might_match = __nkw;  // At this point, any keyword might match
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        277      size_t __n_does_match = 0;       // but none of them definitely do
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        278      // Initialize all statuses to __might_match, except for "" keywords are __does_match
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        279      unsigned char* __st = __status;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        280      for (_ForwardIterator __ky = __kb; __ky != __ke; ++__ky, (void) ++__st)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        281      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        282          if (!__ky->empty())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        283              *__st = __might_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        284          else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        285          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        286              *__st = __does_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        287              --__n_might_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        288              ++__n_does_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        289          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        290      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        291      // While there might be a match, test keywords against the next CharT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        292      for (size_t __indx = 0; __b != __e && __n_might_match > 0; ++__indx)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        293      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        294          // Peek at the next CharT but don't consume it
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        295          _CharT __c = *__b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        296          if (!__case_sensitive)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        297              __c = __ct.toupper(__c);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        298          bool __consume = false;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        299          // For each keyword which might match, see if the __indx character is __c
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        300          // If a match if found, consume __c
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        301          // If a match is found, and that is the last character in the keyword,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        302          //    then that keyword matches.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        303          // If the keyword doesn't match this character, then change the keyword
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        304          //    to doesn't match
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        305          __st = __status;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        306          for (_ForwardIterator __ky = __kb; __ky != __ke; ++__ky, (void) ++__st)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        307          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        308              if (*__st == __might_match)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        309              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        310                  _CharT __kc = (*__ky)[__indx];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        311                  if (!__case_sensitive)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        312                      __kc = __ct.toupper(__kc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        313                  if (__c == __kc)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        314                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        315                      __consume = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        316                      if (__ky->size() == __indx+1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        317                      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        318                          *__st = __does_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        319                          --__n_might_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        320                          ++__n_does_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        321                      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        322                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        323                  else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        324                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        325                      *__st = __doesnt_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        326                      --__n_might_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        327                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        328              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        329          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        330          // consume if we matched a character
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        331          if (__consume)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        332          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        333              ++__b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        334              // If we consumed a character and there might be a matched keyword that
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        335              //   was marked matched on a previous iteration, then such keywords
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        336              //   which are now marked as not matching.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        337              if (__n_might_match + __n_does_match > 1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        338              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        339                  __st = __status;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        340                  for (_ForwardIterator __ky = __kb; __ky != __ke; ++__ky, (void) ++__st)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        341                  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        342                      if (*__st == __does_match && __ky->size() != __indx+1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        343                      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        344                          *__st = __doesnt_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        345                          --__n_does_match;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        346                      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        347                  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        348              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        349          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        350      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        351      // We've exited the loop because we hit eof and/or we have no more "might matches".
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        352      if (__b == __e)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        353          __err |= ios_base::eofbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        354      // Return the first matching result
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        355      for (__st = __status; __kb != __ke; ++__kb, (void) ++__st)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        356          if (*__st == __does_match)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        357              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        358      if (__kb == __ke)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        359          __err |= ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        360      return __kb;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        361  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        362  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        363  struct _LIBCPP_TYPE_VIS __num_get_base
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        364  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        365      static __far         const int __num_get_buf_sz = 40;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        366  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        367      static int __get_base(ios_base&);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        368      static __far         const char __src[33];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        369  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        370  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        371  _LIBCPP_FUNC_VIS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        372  void __check_grouping(const string& __grouping, unsigned* __g, unsigned* __g_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        373                        ios_base::iostate& __err);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        374  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        375  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        376  struct __num_get
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        377      : protected __num_get_base
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        378  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        379      static string __stage2_float_prep(ios_base& __iob, _CharT* __atoms, _CharT& __decimal_point,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        380                                        _CharT& __thousands_sep);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        381  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        382      static int __stage2_float_loop(_CharT __ct, bool& __in_units, char& __exp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        383                                     char* __a, char*& __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        384                                     _CharT __decimal_point, _CharT __thousands_sep,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        385                                     const string& __grouping, unsigned* __g,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        386                                     unsigned*& __g_end, unsigned& __dc, _CharT* __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        387  #ifndef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        388      static string __stage2_int_prep(ios_base& __iob, _CharT* __atoms, _CharT& __thousands_sep);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        389      static int __stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        390                    unsigned& __dc, _CharT __thousands_sep, const string& __grouping,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        391                    unsigned* __g, unsigned*& __g_end, _CharT* __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        392  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        393  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        394      static string __stage2_int_prep(ios_base& __iob, _CharT& __thousands_sep)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        395      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        396          locale __loc = __iob.getloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        397          const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        398          __thousands_sep = __np.thousands_sep();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        399          return __np.grouping();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        400      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        401  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        402      const _CharT* __do_widen(ios_base& __iob, _CharT* __atoms) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        403      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        404        return __do_widen_p(__iob, __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        405      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        406  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        407  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        408      static int __stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        409                    unsigned& __dc, _CharT __thousands_sep, const string& __grouping,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        410                    unsigned* __g, unsigned*& __g_end, const _CharT* __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        411  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        412      template<typename T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        413      const T* __do_widen_p(ios_base& __iob, T* __atoms) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        414      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        415        locale __loc = __iob.getloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        416        use_facet<ctype<T> >(__loc).widen(__src, __src + 26, __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        417        return __atoms;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        418      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        419  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        420      const char* __do_widen_p(ios_base& __iob, char* __atoms) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        421      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        422        (void)__iob;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        423        (void)__atoms;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        424        return __src;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        425      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        426  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        427  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        428  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        429  #ifndef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        430  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        431  string
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        432  __num_get<_CharT>::__stage2_int_prep(ios_base& __iob, _CharT* __atoms, _CharT& __thousands_sep)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        433  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        434      locale __loc = __iob.getloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        435      use_facet<ctype<_CharT> >(__loc).widen(__src, __src + 26, __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        436      const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        437      __thousands_sep = __np.thousands_sep();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        438      return __np.grouping();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        439  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        440  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        441  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        442  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        443  string
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        444  __num_get<_CharT>::__stage2_float_prep(ios_base& __iob, _CharT* __atoms, _CharT& __decimal_point,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        445                      _CharT& __thousands_sep)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        446  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        447      locale __loc = __iob.getloc();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        448      use_facet<ctype<_CharT> >(__loc).widen(__src, __src + 32, __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        449      const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        450      __decimal_point = __np.decimal_point();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        451      __thousands_sep = __np.thousands_sep();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        452      return __np.grouping();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        453  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        454  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        455  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        456  int
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        457  #ifndef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        458  __num_get<_CharT>::__stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        459                    unsigned& __dc, _CharT __thousands_sep, const string& __grouping,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        460                    unsigned* __g, unsigned*& __g_end, _CharT* __atoms)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        461  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        462  __num_get<_CharT>::__stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        463                    unsigned& __dc, _CharT __thousands_sep, const string& __grouping,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        464                    unsigned* __g, unsigned*& __g_end, const _CharT* __atoms)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        465  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        466  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        467  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        468      if (__a_end == __a && (__ct == __atoms[24] || __ct == __atoms[25]))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        469      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        470          *__a_end++ = __ct == __atoms[24] ? '+' : '-';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        471          __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        472          return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        473      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        474      if (__grouping.size() != 0 && __ct == __thousands_sep)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        475      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        476          if (__g_end-__g < __num_get_buf_sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        477          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        478              *__g_end++ = __dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        479              __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        480          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        481          return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        482      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        483      ptrdiff_t __f = find(__atoms, __atoms + 26, __ct) - __atoms;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        484      if (__f >= 24)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        485          return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        486      switch (__base)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        487      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        488      case 8:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        489      case 10:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        490          if (__f >= __base)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        491              return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        492          break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        493      case 16:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        494          if (__f < 22)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        495              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        496          if (__a_end != __a && __a_end - __a <= 2 && __a_end[-1] == '0')
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        497          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        498              __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        499              *__a_end++ = __src[__f];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        500              return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        501          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        502          return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        503      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        504      *__a_end++ = __src[__f];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        505      ++__dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        506      return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        507  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        508  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        509  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        510  int
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        511  __num_get<_CharT>::__stage2_float_loop(_CharT __ct, bool& __in_units, char& __exp, char* __a, char*& __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        512                      _CharT __decimal_point, _CharT __thousands_sep, const string& __grouping,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        513                      unsigned* __g, unsigned*& __g_end, unsigned& __dc, _CharT* __atoms)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        514  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        515      if (__ct == __decimal_point)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        516      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        517          if (!__in_units)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        518              return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        519          __in_units = false;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        520          *__a_end++ = '.';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        521          if (__grouping.size() != 0 && __g_end-__g < __num_get_buf_sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        522              *__g_end++ = __dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        523          return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        524      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        525      if (__ct == __thousands_sep && __grouping.size() != 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        526      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        527          if (!__in_units)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        528              return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        529          if (__g_end-__g < __num_get_buf_sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        530          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        531              *__g_end++ = __dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        532              __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        533          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        534          return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        535      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        536      ptrdiff_t __f = find(__atoms, __atoms + 32, __ct) - __atoms;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        537      if (__f >= 32)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        538          return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        539      char __x = __src[__f];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        540      if (__x == '-' || __x == '+')
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        541      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        542          if (__a_end == __a || (__a_end[-1] & 0x5F) == (__exp & 0x7F))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        543          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        544              *__a_end++ = __x;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        545              return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        546          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        547          return -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        548      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        549      if (__x == 'x' || __x == 'X')
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        550          __exp = 'P';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        551      else if ((__x & 0x5F) == __exp)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        552      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        553          __exp |= 0x80;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        554          if (__in_units)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        555          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        556              __in_units = false;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        557              if (__grouping.size() != 0 && __g_end-__g < __num_get_buf_sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        558                  *__g_end++ = __dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        559          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        560      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        561      *__a_end++ = __x;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        562      if (__f >= 22)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        563          return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        564      ++__dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        565      return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        566  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        567  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        568  _LIBCPP_EXTERN_TEMPLATE2(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_get<char>)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        569  _LIBCPP_EXTERN_TEMPLATE2(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_get<wchar_t>)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        570  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        571  template <class _CharT, class _InputIterator = istreambuf_iterator<_CharT> >
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        572  class _LIBCPP_TEMPLATE_VIS num_get
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        573      : public locale::facet,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        574        private __num_get<_CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        575  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        576  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        577      typedef _CharT char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        578      typedef _InputIterator iter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        579  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        580      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        581      explicit num_get(size_t __refs = 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        582          : locale::facet(__refs) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        583  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        584      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        585      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        586                    ios_base::iostate& __err, bool& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        587      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        588          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        589      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        590  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        591      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        592      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        593                    ios_base::iostate& __err, long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        594      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        595          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        596      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        597  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        598      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        599      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        600                    ios_base::iostate& __err, long long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        601      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        602          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        603      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        604  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        605      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        606      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        607                    ios_base::iostate& __err, unsigned short& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        608      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        609          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        610      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        611  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        612      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        613      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        614                    ios_base::iostate& __err, unsigned int& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        615      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        616          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        617      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        618  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        619      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        620      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        621                    ios_base::iostate& __err, unsigned long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        622      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        623          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        624      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        625  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        626      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        627      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        628                    ios_base::iostate& __err, unsigned long long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        629      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        630          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        631      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        632  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        633      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        634      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        635                    ios_base::iostate& __err, float& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        636      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        637          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        638      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        639  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        640      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        641      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        642                    ios_base::iostate& __err, double& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        643      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        644          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        645      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        646  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        647      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        648      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        649                    ios_base::iostate& __err, long double& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        650      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        651          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        652      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        653  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        654      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        655      iter_type get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        656                    ios_base::iostate& __err, void*& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        657      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        658          return do_get(__b, __e, __iob, __err, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        659      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        660  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        661      static __far         locale::id id;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        662  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        663  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        664      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        665      ~num_get() {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        666  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        667      template <class _Fp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        668      _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        669      iter_type __do_get_floating_point
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        670                              (iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        671                               ios_base::iostate& __err, _Fp& __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        672  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        673      template <class _Signed>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        674      _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        675      iter_type __do_get_signed
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        676                              (iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        677                               ios_base::iostate& __err, _Signed& __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        678  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        679      template <class _Unsigned>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        680      _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        681      iter_type __do_get_unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        682                              (iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        683                               ios_base::iostate& __err, _Unsigned& __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        684  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        685  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        686      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        687                               ios_base::iostate& __err, bool& __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        688  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        689      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        690                               ios_base::iostate& __err, long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        691      { return this->__do_get_signed ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        692  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        693      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        694                               ios_base::iostate& __err, long long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        695      { return this->__do_get_signed ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        696  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        697      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        698                               ios_base::iostate& __err, unsigned short& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        699      { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        700  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        701      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        702                               ios_base::iostate& __err, unsigned int& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        703      { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        704  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        705      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        706                               ios_base::iostate& __err, unsigned long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        707      { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        708  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        709      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        710                               ios_base::iostate& __err, unsigned long long& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        711      { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        712  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        713      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        714                               ios_base::iostate& __err, float& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        715      { return this->__do_get_floating_point ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        716  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        717      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        718                               ios_base::iostate& __err, double& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        719      { return this->__do_get_floating_point ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        720  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        721      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        722                               ios_base::iostate& __err, long double& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        723      { return this->__do_get_floating_point ( __b, __e, __iob, __err, __v ); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        724  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        725      virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        726                               ios_base::iostate& __err, void*& __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        727  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        728  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        729  template <class _CharT, class _InputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        730  locale::id
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        731  num_get<_CharT, _InputIterator>::id;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        732  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        733  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        734  _Tp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        735  __num_get_signed_integral(const char* __a, const char* __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        736                            ios_base::iostate& __err, int __base)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        737  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        738      if (__a != __a_end)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        739      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        740          typename remove_reference<decltype(errno)>::type __save_errno = errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        741          errno = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        742          char *__p2;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        743          long long __ll = strtoll_l(__a, &__p2, __base, _LIBCPP_GET_C_LOCALE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        744          typename remove_reference<decltype(errno)>::type __current_errno = errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        745          if (__current_errno == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        746              errno = __save_errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        747          if (__p2 != __a_end)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        748          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        749              __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        750              return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        751          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        752          else if (__current_errno == ERANGE         ||
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        753                   __ll < numeric_limits<_Tp>::min() ||
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        754                   numeric_limits<_Tp>::max() < __ll)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        755          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        756              __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        757              if (__ll > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        758                  return numeric_limits<_Tp>::max();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        759              else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        760                  return numeric_limits<_Tp>::min();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        761          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        762          return static_cast<_Tp>(__ll);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        763      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        764      __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        765      return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        766  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        767  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        768  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        769  _Tp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        770  __num_get_unsigned_integral(const char* __a, const char* __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        771                              ios_base::iostate& __err, int __base)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        772  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        773      if (__a != __a_end)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        774      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        775          const bool __negate = *__a == '-';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        776          if (__negate && ++__a == __a_end) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        777            __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        778            return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        779          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        780          typename remove_reference<decltype(errno)>::type __save_errno = errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        781          errno = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        782          char *__p2;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        783  #ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        784          unsigned long long __ll = strtoull(__a, &__p2, __base);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        785  #else // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        786          unsigned long long __ll = strtoull_l(__a, &__p2, __base, _LIBCPP_GET_C_LOCALE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        787  #endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        788          typename remove_reference<decltype(errno)>::type __current_errno = errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        789          if (__current_errno == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        790              errno = __save_errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        791          if (__p2 != __a_end)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        792          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        793              __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        794              return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        795          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        796          else if (__current_errno == ERANGE || numeric_limits<_Tp>::max() < __ll)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        797          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        798              __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        799              return numeric_limits<_Tp>::max();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        800          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        801          _Tp __res = static_cast<_Tp>(__ll);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        802          if (__negate) __res = -__res;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        803          return __res;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        804      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        805      __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        806      return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        807  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        808  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        809  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        810  _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        811  _Tp __do_strtod(const char* __a, char** __p2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        812  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        813  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        814  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        815  float __do_strtod<float>(const char* __a, char** __p2) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        816  #ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        817      return strtof(__a, __p2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        818  #else // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        819      return strtof_l(__a, __p2, _LIBCPP_GET_C_LOCALE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        820  #endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        821  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        822  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        823  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        824  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        825  double __do_strtod<double>(const char* __a, char** __p2) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        826  #ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        827      return strtod(__a, __p2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        828  #else // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        829      return strtod_l(__a, __p2, _LIBCPP_GET_C_LOCALE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        830  #endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        831  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        832  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        833  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        834  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        835  long double __do_strtod<long double>(const char* __a, char** __p2) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        836  #ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        837      return strtod(__a, __p2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        838  #else // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        839      return strtod_l(__a, __p2, _LIBCPP_GET_C_LOCALE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        840  #endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        841  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        842  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        843  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        844  _LIBCPP_HIDDEN
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        845  _Tp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        846  __num_get_float(const char* __a, const char* __a_end, ios_base::iostate& __err)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        847  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        848      if (__a != __a_end)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        849      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        850          typename remove_reference<decltype(errno)>::type __save_errno = errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        851          errno = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        852          char *__p2;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        853          _Tp __ld = __do_strtod<_Tp>(__a, &__p2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        854          typename remove_reference<decltype(errno)>::type __current_errno = errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        855          if (__current_errno == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        856              errno = __save_errno;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        857          if (__p2 != __a_end)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        858          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        859              __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        860              return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        861          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        862          else if (__current_errno == ERANGE)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        863              __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        864          return __ld;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        865      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        866      __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        867      return 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        868  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        869  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        870  template <class _CharT, class _InputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        871  _InputIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        872  num_get<_CharT, _InputIterator>::do_get(iter_type __b, iter_type __e,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        873                                          ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        874                                          ios_base::iostate& __err,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        875                                          bool& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        876  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        877      if ((__iob.flags() & ios_base::boolalpha) == 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        878      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        879          long __lv = -1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        880          __b = do_get(__b, __e, __iob, __err, __lv);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        881          switch (__lv)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        882          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        883          case 0:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        884              __v = false;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        885              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        886          case 1:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        887              __v = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        888              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        889          default:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        890              __v = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        891              __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        892              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        893          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        894          return __b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        895      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        896      const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__iob.getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        897      const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__iob.getloc());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        898      typedef typename numpunct<_CharT>::string_type string_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        899      const string_type __names[2] = {__np.truename(), __np.falsename()};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        900      const string_type* __i = __scan_keyword(__b, __e, __names, __names+2,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        901                                              __ct, __err);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        902      __v = __i == __names;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        903      return __b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        904  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        905  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        906  // signed
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        907  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        908  template <class _CharT, class _InputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        909  template <class _Signed>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        910  _InputIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        911  num_get<_CharT, _InputIterator>::__do_get_signed(iter_type __b, iter_type __e,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        912                                          ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        913                                          ios_base::iostate& __err,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        914                                          _Signed& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        915  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        916      // Stage 1
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        917      int __base = this->__get_base(__iob);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        918      // Stage 2
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        919      char_type __thousands_sep;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        920      const int __atoms_size = 26;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        921  #ifdef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        922      char_type __atoms1[__atoms_size];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        923      const char_type *__atoms = this->__do_widen(__iob, __atoms1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        924      string __grouping = this->__stage2_int_prep(__iob, __thousands_sep);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        925  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        926      char_type __atoms[__atoms_size];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        927      string __grouping = this->__stage2_int_prep(__iob, __atoms, __thousands_sep);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        928  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        929      string __buf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        930      __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        931      char* __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        932      char* __a_end = __a;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        933      unsigned __g[__num_get_base::__num_get_buf_sz];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        934      unsigned* __g_end = __g;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        935      unsigned __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        936      for (; __b != __e; ++__b)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        937      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        938          if (__a_end == __a + __buf.size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        939          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        940              size_t __tmp = __buf.size();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        941              __buf.resize(2*__buf.size());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        942              __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        943              __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        944              __a_end = __a + __tmp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        945          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        946          if (this->__stage2_int_loop(*__b, __base, __a, __a_end, __dc,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        947                                      __thousands_sep, __grouping, __g, __g_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        948                                      __atoms))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        949              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        950      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        951      if (__grouping.size() != 0 && __g_end-__g < __num_get_base::__num_get_buf_sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        952          *__g_end++ = __dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        953      // Stage 3
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        954      __v = __num_get_signed_integral<_Signed>(__a, __a_end, __err, __base);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        955      // Digit grouping checked
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        956      __check_grouping(__grouping, __g, __g_end, __err);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        957      // EOF checked
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        958      if (__b == __e)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        959          __err |= ios_base::eofbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        960      return __b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        961  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        962  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        963  // unsigned
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        964  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        965  template <class _CharT, class _InputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        966  template <class _Unsigned>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        967  _InputIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        968  num_get<_CharT, _InputIterator>::__do_get_unsigned(iter_type __b, iter_type __e,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        969                                          ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        970                                          ios_base::iostate& __err,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        971                                          _Unsigned& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        972  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        973      // Stage 1
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        974      int __base = this->__get_base(__iob);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        975      // Stage 2
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        976      char_type __thousands_sep;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        977      const int __atoms_size = 26;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        978  #ifdef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        979      char_type __atoms1[__atoms_size];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        980      const char_type *__atoms = this->__do_widen(__iob, __atoms1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        981      string __grouping = this->__stage2_int_prep(__iob, __thousands_sep);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        982  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        983      char_type __atoms[__atoms_size];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        984      string __grouping = this->__stage2_int_prep(__iob, __atoms, __thousands_sep);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        985  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        986      string __buf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        987      __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        988      char* __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        989      char* __a_end = __a;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        990      unsigned __g[__num_get_base::__num_get_buf_sz];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        991      unsigned* __g_end = __g;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        992      unsigned __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        993      for (; __b != __e; ++__b)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        994      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        995          if (__a_end == __a + __buf.size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        996          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        997              size_t __tmp = __buf.size();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        998              __buf.resize(2*__buf.size());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale        999              __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1000              __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1001              __a_end = __a + __tmp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1002          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1003          if (this->__stage2_int_loop(*__b, __base, __a, __a_end, __dc,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1004                                      __thousands_sep, __grouping, __g, __g_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1005                                      __atoms))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1006              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1007      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1008      if (__grouping.size() != 0 && __g_end-__g < __num_get_base::__num_get_buf_sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1009          *__g_end++ = __dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1010      // Stage 3
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1011      __v = __num_get_unsigned_integral<_Unsigned>(__a, __a_end, __err, __base);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1012      // Digit grouping checked
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1013      __check_grouping(__grouping, __g, __g_end, __err);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1014      // EOF checked
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1015      if (__b == __e)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1016          __err |= ios_base::eofbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1017      return __b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1018  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1019  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1020  // floating point
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1021  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1022  template <class _CharT, class _InputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1023  template <class _Fp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1024  _InputIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1025  num_get<_CharT, _InputIterator>::__do_get_floating_point(iter_type __b, iter_type __e,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1026                                          ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1027                                          ios_base::iostate& __err,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1028                                          _Fp& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1029  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1030      // Stage 1, nothing to do
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1031      // Stage 2
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1032      char_type __atoms[32];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1033      char_type __decimal_point;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1034      char_type __thousands_sep;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1035      string __grouping = this->__stage2_float_prep(__iob, __atoms,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1036                                                    __decimal_point,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1037                                                    __thousands_sep);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1038      string __buf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1039      __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1040      char* __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1041      char* __a_end = __a;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1042      unsigned __g[__num_get_base::__num_get_buf_sz];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1043      unsigned* __g_end = __g;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1044      unsigned __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1045      bool __in_units = true;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1046      char __exp = 'E';
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1047      for (; __b != __e; ++__b)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1048      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1049          if (__a_end == __a + __buf.size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1050          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1051              size_t __tmp = __buf.size();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1052              __buf.resize(2*__buf.size());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1053              __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1054              __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1055              __a_end = __a + __tmp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1056          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1057          if (this->__stage2_float_loop(*__b, __in_units, __exp, __a, __a_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1058                                        __decimal_point, __thousands_sep,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1059                                        __grouping, __g, __g_end,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1060                                        __dc, __atoms))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1061              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1062      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1063      if (__grouping.size() != 0 && __in_units && __g_end-__g < __num_get_base::__num_get_buf_sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1064          *__g_end++ = __dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1065      // Stage 3
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1066      __v = __num_get_float<_Fp>(__a, __a_end, __err);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1067      // Digit grouping checked
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1068      __check_grouping(__grouping, __g, __g_end, __err);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1069      // EOF checked
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1070      if (__b == __e)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1071          __err |= ios_base::eofbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1072      return __b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1073  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1074  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1075  template <class _CharT, class _InputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1076  _InputIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1077  num_get<_CharT, _InputIterator>::do_get(iter_type __b, iter_type __e,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1078                                          ios_base& __iob,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1079                                          ios_base::iostate& __err,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1080                                          void*& __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1081  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1082      // Stage 1
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1083      int __base = 16;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1084      // Stage 2
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1085      char_type __atoms[26];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1086      char_type __thousands_sep = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1087      string __grouping;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1088      use_facet<ctype<_CharT> >(__iob.getloc()).widen(__num_get_base::__src,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1089                                                      __num_get_base::__src + 26, __atoms);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1090      string __buf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1091      __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1092      char* __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1093      char* __a_end = __a;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1094      unsigned __g[__num_get_base::__num_get_buf_sz];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1095      unsigned* __g_end = __g;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1096      unsigned __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1097      for (; __b != __e; ++__b)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1098      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1099          if (__a_end == __a + __buf.size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1100          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1101              size_t __tmp = __buf.size();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1102              __buf.resize(2*__buf.size());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1103              __buf.resize(__buf.capacity());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1104              __a = &__buf[0];
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1105              __a_end = __a + __tmp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1106          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1107          if (this->__stage2_int_loop(*__b, __base, __a, __a_end, __dc,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1108                                      __thousands_sep, __grouping,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1109                                      __g, __g_end, __atoms))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1110              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1111      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1112      // Stage 3
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1113      __buf.resize(__a_end - __a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1114      if (__libcpp_sscanf_l(__buf.c_str(), _LIBCPP_GET_C_LOCALE, "%p", &__v) != 1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1115          __err = ios_base::failbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1116      // EOF checked
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1117      if (__b == __e)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1118          __err |= ios_base::eofbit;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1119      return __b;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1120  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1121  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1122  _LIBCPP_EXTERN_TEMPLATE2(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS num_get<char>)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1123  _LIBCPP_EXTERN_TEMPLATE2(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS num_get<wchar_t>)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1125  struct _LIBCPP_TYPE_VIS __num_put_base
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1126  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1127  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1128      static void __format_int(char* __fmt, const char* __len, bool __signd,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1129                               ios_base::fmtflags __flags);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1130      static bool __format_float(char* __fmt, const char* __len,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1131                                 ios_base::fmtflags __flags);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1132      static char* __identify_padding(char* __nb, char* __ne,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1133                                      const ios_base& __iob);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1134  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1135  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1136  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1137  struct __num_put
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1138      : protected __num_put_base
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1139  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1140      static void __widen_and_group_int(char* __nb, char* __np, char* __ne,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1141                                        _CharT* __ob, _CharT*& __op, _CharT*& __oe,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1142                                        const locale& __loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1143      static void __widen_and_group_float(char* __nb, char* __np, char* __ne,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1144                                          _CharT* __ob, _CharT*& __op, _CharT*& __oe,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1145                                          const locale& __loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1146  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1148  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1149  void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1150  __num_put<_CharT>::__widen_and_group_int(char* __nb, char* __np, char* __ne,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1151                                           _CharT* __ob, _CharT*& __op, _CharT*& __oe,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1152                                           const locale& __loc)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1154      const ctype<_CharT>&    __ct = use_facet<ctype<_CharT> >   (__loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1155      const numpunct<_CharT>& __npt = use_facet<numpunct<_CharT> >(__loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1156      string __grouping = __npt.grouping();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1157      if (__grouping.empty())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1158      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1159          __ct.widen(__nb, __ne, __ob);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1160          __oe = __ob + (__ne - __nb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1161      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1162      else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1163      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1164          __oe = __ob;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1165          char* __nf = __nb;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1166          if (*__nf == '-' || *__nf == '+')
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1167              *__oe++ = __ct.widen(*__nf++);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1168          if (__ne - __nf >= 2 && __nf[0] == '0' && (__nf[1] == 'x' ||
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1169                                                     __nf[1] == 'X'))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1170          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1171              *__oe++ = __ct.widen(*__nf++);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1172              *__oe++ = __ct.widen(*__nf++);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1173          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1174          reverse(__nf, __ne);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1175          _CharT __thousands_sep = __npt.thousands_sep();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1176          unsigned __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1177          unsigned __dg = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1178          for (char* __p = __nf; __p < __ne; ++__p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1179          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1180              if (static_cast<unsigned>(__grouping[__dg]) > 0 &&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1181                  __dc == static_cast<unsigned>(__grouping[__dg]))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1182              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1183                  *__oe++ = __thousands_sep;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1184                  __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1185                  if (__dg < __grouping.size()-1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1186                      ++__dg;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1187              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1188              *__oe++ = __ct.widen(*__p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1189              ++__dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1190          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1191          reverse(__ob + (__nf - __nb), __oe);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1192      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1193      if (__np == __ne)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1194          __op = __oe;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1195      else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1196          __op = __ob + (__np - __nb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1197  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1198  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1199  template <class _CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1200  void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1201  __num_put<_CharT>::__widen_and_group_float(char* __nb, char* __np, char* __ne,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1202                                             _CharT* __ob, _CharT*& __op, _CharT*& __oe,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1203                                             const locale& __loc)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1204  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1205      const ctype<_CharT>&    __ct = use_facet<ctype<_CharT> >   (__loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1206      const numpunct<_CharT>& __npt = use_facet<numpunct<_CharT> >(__loc);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1207      string __grouping = __npt.grouping();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1208      __oe = __ob;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1209      char* __nf = __nb;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1210      if (*__nf == '-' || *__nf == '+')
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1211          *__oe++ = __ct.widen(*__nf++);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1212      char* __ns;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1213      if (__ne - __nf >= 2 && __nf[0] == '0' && (__nf[1] == 'x' ||
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1214                                                 __nf[1] == 'X'))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1215      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1216          *__oe++ = __ct.widen(*__nf++);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1217          *__oe++ = __ct.widen(*__nf++);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1218          for (__ns = __nf; __ns < __ne; ++__ns)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1219  #ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1220              if (!isxdigit(*__ns))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1221  #else // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1222              if (!isxdigit_l(*__ns, _LIBCPP_GET_C_LOCALE))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1223  #endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1224                  break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1225      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1226      else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1227      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1228          for (__ns = __nf; __ns < __ne; ++__ns)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1229  #ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1230              if (!isdigit(*__ns))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1231  #else // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1232              if (!isdigit_l(*__ns, _LIBCPP_GET_C_LOCALE))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1233  #endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1234                  break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1235      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1236      if (__grouping.empty())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1237      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1238          __ct.widen(__nf, __ns, __oe);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1239          __oe += __ns - __nf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1240      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1241      else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1242      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1243          reverse(__nf, __ns);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1244          _CharT __thousands_sep = __npt.thousands_sep();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1245          unsigned __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1246          unsigned __dg = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1247          for (char* __p = __nf; __p < __ns; ++__p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1248          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1249              if (__grouping[__dg] > 0 && __dc == static_cast<unsigned>(__grouping[__dg]))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1250              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1251                  *__oe++ = __thousands_sep;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1252                  __dc = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1253                  if (__dg < __grouping.size()-1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1254                      ++__dg;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1255              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1256              *__oe++ = __ct.widen(*__p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1257              ++__dc;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1258          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1259          reverse(__ob + (__nf - __nb), __oe);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1260      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1261      for (__nf = __ns; __nf < __ne; ++__nf)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1262      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1263          if (*__nf == '.')
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1264          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1265              *__oe++ = __npt.decimal_point();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1266              ++__nf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1267              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1268          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1269          else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1270              *__oe++ = __ct.widen(*__nf);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1271      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1272      __ct.widen(__nf, __ne, __oe);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1273      __oe += __ne - __nf;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1274      if (__np == __ne)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1275          __op = __oe;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1276      else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1277          __op = __ob + (__np - __nb);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1278  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1279  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1280  _LIBCPP_EXTERN_TEMPLATE2(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_put<char>)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1281  _LIBCPP_EXTERN_TEMPLATE2(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_put<wchar_t>)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1282  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1283  template <class _CharT, class _OutputIterator = ostreambuf_iterator<_CharT> >
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1284  class _LIBCPP_TEMPLATE_VIS num_put
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1285      : public locale::facet,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1286        private __num_put<_CharT>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1287  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1288  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1289      typedef _CharT char_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1290      typedef _OutputIterator iter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1291  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1292      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1293      explicit num_put(size_t __refs = 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1294          : locale::facet(__refs) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1295  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1296      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1297      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1298                    bool __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1299      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1300          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1301      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1302  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1303      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1304      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1305                    long __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1306      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1307          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1308      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1309  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1310      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1311      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1312                    long long __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1313      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1314          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1315      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1316  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1317      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1318      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1319                    unsigned long __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1320      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1321          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1322      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1323  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1324      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1325      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1326                    unsigned long long __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1327      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1328          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1329      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1330  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1331      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1332      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1333                    double __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1334      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1335          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1336      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1337  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1338      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1339      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1340                    long double __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1341      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1342          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1343      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1344  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1345      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1346      iter_type put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1347                    const void* __v) const
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1348      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1349          return do_put(__s, __iob, __fl, __v);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1350      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1351  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1352      static __far         locale::id id;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1353  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1354  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1355      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1356      ~num_put() {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1357  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1358      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1359                               bool __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1360      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1361                               long __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1362      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1363                               long long __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1364      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1365                               unsigned long) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1366      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1367                               unsigned long long) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1368      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1369                               double __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1370      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1371                               long double __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1372      virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1373                               const void* __v) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1374  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1375  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1376  template <class _CharT, class _OutputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1377  locale::id
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1378  num_put<_CharT, _OutputIterator>::id;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1379  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1380  template <class _CharT, class _OutputIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1381  _LIBCPP_HIDDEN
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1382  _OutputIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1383  __pad_and_output(_OutputIterator __s,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1384                   const _CharT* __ob, const _CharT* __op, const _CharT* __oe,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1385                   ios_base& __iob, _CharT __fl)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1386  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1387      streamsize __sz = __oe - __ob;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1388      streamsize __ns = __iob.width();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1389      if (__ns > __sz)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1390          __ns -= __sz;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1391      else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1392          __ns = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1393      for (;__ob < __op; ++__ob, ++__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1394          *__s = *__ob;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1395      for (; __ns; --__ns, ++__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1396          *__s = __fl;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1397      for (; __ob < __oe; ++__ob, ++__s)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1398          *__s = *__ob;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1399      __iob.width(0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1400      return __s;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1401  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1402  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1403  #if !defined(__APPLE__) || \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1404      (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED > __MAC_10_8) || \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1405      (defined(__IPHONE_OS_VERSION_MIN_REQUIRED) && __IPHONE_OS_VERSION_MIN_REQUIRED > __IPHONE_6_0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1406  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1407  template <class _CharT, class _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1408  _LIBCPP_HIDDEN
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1409  ostreambuf_iterator<_CharT, _Traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1410  __pad_and_output(ostreambuf_iterator<_CharT, _Traits> __s,
; Function _ZSt16__pad_and_outputIcSt11char_traitsIcEESt19ostreambuf_iteratorIT_T0_ES5_PKS3_S7_S7_RSt8ios_baseS3_
_ZSt16__pad_and_outputIcSt11char_traitsIcEESt19ostreambuf_iteratorIT_T0_ES5_PKS3_S7_S7_RSt8ios_baseS3_: .type     func
        lea     a10,[a10]-3888
        mov.a   a12,d4
        mov.aa  a2,a4
        mov.aa  a13,a5
        mov.aa  a14,a6
        st.a    [a10]3880,a7
        mov     d9,d5

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1411                   const _CharT* __ob, const _CharT* __op, const _CharT* __oe,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1412                   ios_base& __iob, _CharT __fl)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1413  {
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]4,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a4,[a10]4
        st.a    [a15],a4
        mov     d15,#1
        st.b    [a10]8,d15
        movh.a  a15,#@his(_999003___T32)
        lea     a15,[a15]@los(_999003___T32)
        st.a    [a10]12,a15
        lea     a15,[a10]0
        st.a    [a10]16,a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a15]0
        st.h    [a10]24,d15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d15,#65535
        st.h    [a15],d15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1414      if (__s.__sbuf_ == nullptr)
        jnz.a   a12,.L38

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1415          return __s;
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a10]24
        st.h    [a15],d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]4
        st.a    [a15],a2
        mov.d   d2,a12
        j       .L39
.L38:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1416      streamsize __sz = __oe - __ob;
        sub.a   a15,a14,a2
        mov.d   d0,a15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1417      streamsize __ns = __iob.width();
        ld.a    a15,[a10]3880
        ld.w    d15,[a15]12

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1418      if (__ns > __sz)
        jge     d0,d15,.L40

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1419          __ns -= __sz;
        sub     d10,d15,d0
        j       .L41
.L40:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1420      else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1421          __ns = 0;
        mov     d10,#0
.L41:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1422      streamsize __np = __op - __ob;
        sub.a   a15,a13,a2
        mov.d   d8,a15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1423      if (__np > 0)
        jlt     d8,#1,.L42

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1424      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1425          if (__s.__sbuf_->sputn(__ob, __np) != __np)
        ld.a    a15,[a12]
        ld.w    d15,[a15]48
        mov.a   a15,d15
        mov.aa  a4,a12
        mov.aa  a5,a2
        mov     d4,d8
        calli   a15
        jeq     d2,d8,.L43

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1426          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1427              __s.__sbuf_ = nullptr;
        mov.a   a15,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1428              return __s;
        movh.a  a2,#@his(__eh_curr_region)
        lea     a2,[a2]@los(__eh_curr_region)
        ld.hu   d15,[a10]24
        st.h    [a2],d15
        movh.a  a2,#@his(__curr_eh_stack_entry)
        lea     a2,[a2]@los(__curr_eh_stack_entry)
        ld.a    a4,[a10]4
        st.a    [a2],a4
        mov.d   d2,a15
        j       .L44
.L43:
.L42:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1429          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1430      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1431      if (__ns > 0)
        jlt     d10,#1,.L45

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1432      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1433          basic_string<_CharT, _Traits> __sp(__ns, __fl);
        lea     a4,[a10]2608

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          2  //===-------------------------- memory ------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         11  #ifndef _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         12  #define _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         15      memory synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         17  namespace std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         18  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         19  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         20  struct allocator_arg_t { };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         21  inline constexpr allocator_arg_t allocator_arg = allocator_arg_t();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         22  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         23  template <class T, class Alloc> struct uses_allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         24  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         25  template <class Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         26  struct pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         27  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         28      typedef Ptr pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         29      typedef <details> element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         30      typedef <details> difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         31  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         32      template <class U> using rebind = <details>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         34      static pointer pointer_to(<details>);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         35  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         36  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         37  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         38  struct pointer_traits<T*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         39  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         40      typedef T* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         41      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         42      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         43  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         44      template <class U> using rebind = U*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         45  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         46      static pointer pointer_to(<details>) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         47  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         48  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         49  template <class T> constexpr T* to_address(T* p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         50  template <class Ptr> auto to_address(const Ptr& p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         51  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         52  template <class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         53  struct allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         54  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         55      typedef Alloc                        allocator_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         56      typedef typename allocator_type::value_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         57                                           value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         58  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         59      typedef Alloc::pointer | value_type* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         60      typedef Alloc::const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         61            | pointer_traits<pointer>::rebind<const value_type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         62                                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         63      typedef Alloc::void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         64            | pointer_traits<pointer>::rebind<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         65                                           void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         66      typedef Alloc::const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         67            | pointer_traits<pointer>::rebind<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         68                                           const_void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         69      typedef Alloc::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         70            | pointer_traits<pointer>::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         71                                           difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         72      typedef Alloc::size_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         73            | make_unsigned<difference_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         74                                           size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         75      typedef Alloc::propagate_on_container_copy_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         76            | false_type                   propagate_on_container_copy_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         77      typedef Alloc::propagate_on_container_move_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         78            | false_type                   propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         79      typedef Alloc::propagate_on_container_swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         80            | false_type                   propagate_on_container_swap;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         81      typedef Alloc::is_always_equal
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         82            | is_empty                     is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         84      template <class T> using rebind_alloc  = Alloc::rebind<U>::other | Alloc<T, Args...>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         85      template <class T> using rebind_traits = allocator_traits<rebind_alloc<T>>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         87      static pointer allocate(allocator_type& a, size_type n);                          // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         88      static pointer allocate(allocator_type& a, size_type n, const_void_pointer hint); // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         90      static void deallocate(allocator_type& a, pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         92      template <class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         93          static void construct(allocator_type& a, T* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         95      template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         96          static void destroy(allocator_type& a, T* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         98      static size_type max_size(const allocator_type& a); // noexcept in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         99  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        100      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        101          select_on_container_copy_construction(const allocator_type& a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        102  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        103  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        104  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        105  class allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        106  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        107  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        108      typedef void*                                 pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        109      typedef const void*                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        110      typedef void                                  value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        112      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        113  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        115  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        116  class allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        117  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        118  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        119      typedef size_t                                size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        120      typedef ptrdiff_t                             difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        121      typedef T*                                    pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        122      typedef const T*                              const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        123      typedef typename add_lvalue_reference<T>::type       reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        124      typedef typename add_lvalue_reference<const T>::type const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        125      typedef T                                     value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        126  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        127      template <class U> struct rebind {typedef allocator<U> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        128  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        129      constexpr allocator() noexcept;                      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        130      constexpr allocator(const allocator&) noexcept;      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        131      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        132        constexpr allocator(const allocator<U>&) noexcept; // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        133      ~allocator();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        134      pointer address(reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        135      const_pointer address(const_reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        136      pointer allocate(size_type, allocator<void>::const_pointer hint = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        137      void deallocate(pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        138      size_type max_size() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        139      template<class U, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        140          void construct(U* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        141      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        142          void destroy(U* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        143  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        144  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        145  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        146  bool operator==(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        148  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        149  bool operator!=(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        150  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        151  template <class OutputIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        152  class raw_storage_iterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        153      : public iterator<output_iterator_tag,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        154                        T,                               // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        155                        ptrdiff_t,                       // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        156                        T*,                              // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        157                        raw_storage_iterator&>           // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        158  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        159  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        160      explicit raw_storage_iterator(OutputIterator x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        161      raw_storage_iterator& operator*();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        162      raw_storage_iterator& operator=(const T& element);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        163      raw_storage_iterator& operator++();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        164      raw_storage_iterator  operator++(int);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        165  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        166  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        167  template <class T> pair<T*,ptrdiff_t> get_temporary_buffer(ptrdiff_t n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        168  template <class T> void               return_temporary_buffer(T* p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        169  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        170  template <class T> T* addressof(T& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        171  template <class T> T* addressof(const T&& r) noexcept = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        172  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        173  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        174  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        175  uninitialized_copy(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        176  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        177  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        178  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        179  uninitialized_copy_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        180  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        181  template <class ForwardIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        182  void uninitialized_fill(ForwardIterator first, ForwardIterator last, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        183  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        184  template <class ForwardIterator, class Size, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        185  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        186  uninitialized_fill_n(ForwardIterator first, Size n, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        187  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        188  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        189  void destroy_at(T* location);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        190  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        191  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        192   void destroy(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        193  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        194  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        195   ForwardIterator destroy_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        197  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        198   ForwardIterator uninitialized_move(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        199  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        200  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        201   pair<InputIterator,ForwardIterator> uninitialized_move_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        202  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        203  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        204   void uninitialized_value_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        206  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        207   ForwardIterator uninitialized_value_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        208  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        209  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        210   void uninitialized_default_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        211  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        212  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        213   ForwardIterator uninitialized_default_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        214  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        215  template <class Y> struct auto_ptr_ref {};      // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        216  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        217  template<class X>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        218  class auto_ptr                                  // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        219  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        220  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        221      typedef X element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        222  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        223      explicit auto_ptr(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        224      auto_ptr(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        225      template<class Y> auto_ptr(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        226      auto_ptr& operator=(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        227      template<class Y> auto_ptr& operator=(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        228      auto_ptr& operator=(auto_ptr_ref<X> r) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        229      ~auto_ptr() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        230  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        231      typename add_lvalue_reference<X>::type operator*() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        232      X* operator->() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        233      X* get() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        234      X* release() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        235      void reset(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        236  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        237      auto_ptr(auto_ptr_ref<X>) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        238      template<class Y> operator auto_ptr_ref<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        239      template<class Y> operator auto_ptr<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        240  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        241  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        242  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        243  struct default_delete
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        244  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        245      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        246      template <class U> default_delete(const default_delete<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        248      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        249  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        250  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        251  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        252  struct default_delete<T[]>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        253  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        254      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        255      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        256      template <class U> void operator()(U*) const = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        257  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        258  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        259  template <class T, class D = default_delete<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        260  class unique_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        262  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        263      typedef see below pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        264      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        265      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        266  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        267      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        268      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        269      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        270      unique_ptr(pointer p, see below d1) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        271      unique_ptr(pointer p, see below d2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        272      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        273      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        274      template <class U, class E>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        275          unique_ptr(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        276      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        277          unique_ptr(auto_ptr<U>&& u) noexcept;       // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        278  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        279      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        280      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        281  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        282      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        283      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        284      template <class U, class E> unique_ptr& operator=(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        285      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        286  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        287      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        288      typename add_lvalue_reference<T>::type operator*() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        289      pointer operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        290      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        291      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        292      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        293      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        294  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        295      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        296      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        297      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        298      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        299  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        300  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        301  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        302  class unique_ptr<T[], D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        303  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        304  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        305      typedef implementation-defined pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        306      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        307      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        309      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        310      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        311      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        312      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        313      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        314      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        315      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        316  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        317      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        318      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        319  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        320      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        321      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        322      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        323  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        324      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        325      T& operator[](size_t i) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        326      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        327      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        328      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        329      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        330  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        331      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        332      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        333      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        334      void reset(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        335      template <class U> void reset(U) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        336      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        337  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        338  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        339  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        340      void swap(unique_ptr<T, D>& x, unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        341  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        342  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        343      bool operator==(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        344  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        345      bool operator!=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        346  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        347      bool operator<(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        348  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        349      bool operator<=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        350  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        351      bool operator>(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        352  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        353      bool operator>=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        354  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        355  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        356      bool operator==(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        357  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        358      bool operator==(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        359  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        360      bool operator!=(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        361  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        362      bool operator!=(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        363  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        364  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        365      bool operator<(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        366  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        367      bool operator<(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        368  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        369      bool operator<=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        370  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        371      bool operator<=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        372  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        373      bool operator>(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        374  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        375      bool operator>(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        376  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        377      bool operator>=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        378  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        379      bool operator>=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        380  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        381  class bad_weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        382      : public std::exception
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        383  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        384      bad_weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        385  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        386  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        387  template<class T, class... Args> unique_ptr<T> make_unique(Args&&... args);     // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        388  template<class T>                unique_ptr<T> make_unique(size_t n);           // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        389  template<class T, class... Args> unspecified   make_unique(Args&&...) = delete; // C++14, T == U[N]
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        390  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        391  template<class E, class T, class Y, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        392      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, unique_ptr<Y, D> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        393  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        394  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        395  class shared_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        396  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        397  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        398      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        399      typedef weak_ptr<T> weak_type; // C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        400  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        401      // constructors:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        402      constexpr shared_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        403      template<class Y> explicit shared_ptr(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        404      template<class Y, class D> shared_ptr(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        405      template<class Y, class D, class A> shared_ptr(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        406      template <class D> shared_ptr(nullptr_t p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        407      template <class D, class A> shared_ptr(nullptr_t p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        408      template<class Y> shared_ptr(const shared_ptr<Y>& r, T *p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        409      shared_ptr(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        410      template<class Y> shared_ptr(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        411      shared_ptr(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        412      template<class Y> shared_ptr(shared_ptr<Y>&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        413      template<class Y> explicit shared_ptr(const weak_ptr<Y>& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        414      template<class Y> shared_ptr(auto_ptr<Y>&& r);          // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        415      template <class Y, class D> shared_ptr(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        416      shared_ptr(nullptr_t) : shared_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        417  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        418      // destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        419      ~shared_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        420  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        421      // assignment:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        422      shared_ptr& operator=(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        423      template<class Y> shared_ptr& operator=(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        424      shared_ptr& operator=(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        425      template<class Y> shared_ptr& operator=(shared_ptr<Y>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        426      template<class Y> shared_ptr& operator=(auto_ptr<Y>&& r); // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        427      template <class Y, class D> shared_ptr& operator=(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        428  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        429      // modifiers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        430      void swap(shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        431      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        432      template<class Y> void reset(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        433      template<class Y, class D> void reset(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        434      template<class Y, class D, class A> void reset(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        435  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        436      // observers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        437      T* get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        438      T& operator*() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        439      T* operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        440      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        441      bool unique() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        442      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        443      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        444      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        445  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        446  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        447  // shared_ptr comparisons:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        448  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        449      bool operator==(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        450  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        451      bool operator!=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        452  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        453      bool operator<(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        454  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        455      bool operator>(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        456  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        457      bool operator<=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        458  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        459      bool operator>=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        460  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        461  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        462      bool operator==(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        463  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        464      bool operator==(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        465  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        466      bool operator!=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        467  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        468      bool operator!=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        469  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        470      bool operator<(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        471  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        472  bool operator<(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        473  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        474      bool operator<=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        475  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        476      bool operator<=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        477  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        478      bool operator>(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        479  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        480      bool operator>(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        481  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        482      bool operator>=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        483  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        484      bool operator>=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        485  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        486  // shared_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        487  template<class T> void swap(shared_ptr<T>& a, shared_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        488  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        489  // shared_ptr casts:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        490  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        491      shared_ptr<T> static_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        492  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        493      shared_ptr<T> dynamic_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        494  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        495      shared_ptr<T> const_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        496  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        497  // shared_ptr I/O:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        498  template<class E, class T, class Y>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        499      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, shared_ptr<Y> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        500  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        501  // shared_ptr get_deleter:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        502  template<class D, class T> D* get_deleter(shared_ptr<T> const& p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        504  template<class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        505      shared_ptr<T> make_shared(Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        506  template<class T, class A, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        507      shared_ptr<T> allocate_shared(const A& a, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        508  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        509  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        510  class weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        511  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        512  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        513      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        514  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        515      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        516      constexpr weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        517      template<class Y> weak_ptr(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        518      weak_ptr(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        519      template<class Y> weak_ptr(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        520      weak_ptr(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        521      template<class Y> weak_ptr(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        522  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        523      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        524      ~weak_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        525  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        526      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        527      weak_ptr& operator=(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        528      template<class Y> weak_ptr& operator=(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        529      template<class Y> weak_ptr& operator=(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        530      weak_ptr& operator=(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        531      template<class Y> weak_ptr& operator=(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        532  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        533      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        534      void swap(weak_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        535      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        536  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        537      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        538      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        539      bool expired() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        540      shared_ptr<T> lock() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        541      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        542      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        543  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        544  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        545  // weak_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        546  template<class T> void swap(weak_ptr<T>& a, weak_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        547  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        548  // class owner_less:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        549  template<class T> struct owner_less;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        550  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        551  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        552  struct owner_less<shared_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        553      : binary_function<shared_ptr<T>, shared_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        554  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        555      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        556      bool operator()(shared_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        557      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        558      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        559  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        560  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        561  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        562  struct owner_less<weak_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        563      : binary_function<weak_ptr<T>, weak_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        564  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        565      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        566      bool operator()(weak_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        567      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        568      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        569  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        570  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        571  template <>  // Added in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        572  struct owner_less<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        573  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        574      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        575      bool operator()( shared_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        576      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        577      bool operator()( shared_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        578      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        579      bool operator()(   weak_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        580      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        581      bool operator()(   weak_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        582  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        583      typedef void is_transparent;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        584  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        585  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        586  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        587  class enable_shared_from_this
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        588  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        589  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        590      constexpr enable_shared_from_this() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        591      enable_shared_from_this(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        592      enable_shared_from_this& operator=(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        593      ~enable_shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        594  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        595      shared_ptr<T> shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        596      shared_ptr<T const> shared_from_this() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        597  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        598  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        599  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        600      bool atomic_is_lock_free(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        601  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        602      shared_ptr<T> atomic_load(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        603  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        604      shared_ptr<T> atomic_load_explicit(const shared_ptr<T>* p, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        605  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        606      void atomic_store(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        607  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        608      void atomic_store_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        609  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        610      shared_ptr<T> atomic_exchange(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        611  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        612      shared_ptr<T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        613      atomic_exchange_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        614  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        615      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        616      atomic_compare_exchange_weak(shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        617  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        618      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        619      atomic_compare_exchange_strong( shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        620  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        621      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        622      atomic_compare_exchange_weak_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        623                                            shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        624                                            memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        625  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        626      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        627      atomic_compare_exchange_strong_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        628                                              shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        629                                              memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        630  // Hash support
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        631  template <class T> struct hash;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        632  template <class T, class D> struct hash<unique_ptr<T, D> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        633  template <class T> struct hash<shared_ptr<T> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        634  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        635  template <class T, class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        636    inline constexpr bool uses_allocator_v = uses_allocator<T, Alloc>::value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        637  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        638  // Pointer safety
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        639  enum class pointer_safety { relaxed, preferred, strict };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        640  void declare_reachable(void *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        641  template <class T> T *undeclare_reachable(T *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        642  void declare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        643  void undeclare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        644  pointer_safety get_pointer_safety() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        645  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        646  void* align(size_t alignment, size_t size, void*& ptr, size_t& space);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        647  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        648  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        649  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        650  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        651  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        652  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        653  #include <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        654  #include <typeinfo>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        655  #include <cstddef>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        656  #include <cstdint>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        657  #include <new>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        658  #include <utility>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        659  #include <limits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        660  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        661  #include <__functional_base>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        662  #include <iosfwd>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        663  #include <tuple>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        664  #include <stdexcept>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        665  #include <cstring>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        666  #include <cassert>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        667  #if !defined(_LIBCPP_HAS_NO_ATOMIC_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        668  #  include <atomic>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        669  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        670  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        671  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        672  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        673  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        674  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        675  _LIBCPP_PUSH_MACROS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        676  #include <__undef_macros>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        677  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        678  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        679  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        680  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        681  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        682  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        683  _ValueType __libcpp_relaxed_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        684  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        685      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        686  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        687      defined(__ATOMIC_RELAXED) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        688      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        689      return __atomic_load_n(__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        690  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        691      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        692  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        693  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        694  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        695  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        696  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        697  _ValueType __libcpp_acquire_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        698  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        699      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        700  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        701      defined(__ATOMIC_ACQUIRE) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        702      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        703      return __atomic_load_n(__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        704  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        705      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        706  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        707  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        708  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        709  // addressof moved to <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        710  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        711  template <class _Tp> class allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        712  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        713  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        714  class _LIBCPP_TEMPLATE_VIS allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        715  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        716  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        717      typedef void*             pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        718      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        719      typedef void              value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        720  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        721      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        722  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        723  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        724  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        725  class _LIBCPP_TEMPLATE_VIS allocator<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        726  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        727  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        728      typedef const void*       pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        729      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        730      typedef const void        value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        731  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        732      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        733  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        734  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        735  // pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        736  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        737  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        738  struct __has_element_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        739  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        740  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        741  struct __has_element_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        742                typename __void_t<typename _Tp::element_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        743  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        744  template <class _Ptr, bool = __has_element_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        745  struct __pointer_traits_element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        746  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        747  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        748  struct __pointer_traits_element_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        750      typedef typename _Ptr::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        751  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        753  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        754  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        755  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        756  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        757  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        758      typedef typename _Sp<_Tp, _Args...>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        759  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        760  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        761  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        762  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        763  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        764      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        765  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        766  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        767  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        768  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        769  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        770  struct __pointer_traits_element_type<_Sp<_Tp>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        771  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        772      typedef typename _Sp<_Tp>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        773  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        774  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        775  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        776  struct __pointer_traits_element_type<_Sp<_Tp>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        777  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        778      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        779  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        780  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        781  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        782  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        783  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        784      typedef typename _Sp<_Tp, _A0>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        785  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        786  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        787  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        788  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        790      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        791  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        793  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        794  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        795  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        796      typedef typename _Sp<_Tp, _A0, _A1>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        797  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        798  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        799  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        800  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        801  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        802      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        803  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        804  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        805  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        806                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        807  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        808  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        809      typedef typename _Sp<_Tp, _A0, _A1, _A2>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        810  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        811  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        812  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        813                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        814  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        815  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        816      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        817  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        818  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        819  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        820  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        821  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        822  struct __has_difference_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        823  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        824  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        825  struct __has_difference_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        826              typename __void_t<typename _Tp::difference_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        827  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        828  template <class _Ptr, bool = __has_difference_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        829  struct __pointer_traits_difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        830  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        831      typedef ptrdiff_t type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        832  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        833  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        834  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        835  struct __pointer_traits_difference_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        836  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        837      typedef typename _Ptr::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        838  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        839  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        840  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        841  struct __has_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        842  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        843  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        844      struct __two {char __lx; char __lxx;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        845      template <class _Xp> static __two __test(...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        846      template <class _Xp> static char __test(typename _Xp::template rebind<_Up>* = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        847  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        848      static const bool value = sizeof(__test<_Tp>(0)) == 1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        849  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        850  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        851  template <class _Tp, class _Up, bool = __has_rebind<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        852  struct __pointer_traits_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        853  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        854  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        855      typedef typename _Tp::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        856  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        857      typedef typename _Tp::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        858  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        859  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        860  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        861  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        862  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        863  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        864  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        865  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        866  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        867      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        868  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        869      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        870  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        871  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        872  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        873  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        874  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        875  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        876      typedef _Sp<_Up, _Args...> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        877  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        878  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        879  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        880  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        881  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        882  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        883  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        884  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        885      typedef typename _Sp<_Tp>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        886  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        887      typedef typename _Sp<_Tp>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        888  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        889  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        890  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        891  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        892  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        893  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        894      typedef _Sp<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        895  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        896  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        897  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        898  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        899  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        900  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        901      typedef typename _Sp<_Tp, _A0>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        902  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        903      typedef typename _Sp<_Tp, _A0>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        904  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        905  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        906  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        907  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        908  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        909  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        910      typedef _Sp<_Up, _A0> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        911  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        912  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        913  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        914                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        915  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        916  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        917  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        918      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        919  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        920      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        921  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        922  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        923  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        924  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        925                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        926  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        927  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        928      typedef _Sp<_Up, _A0, _A1> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        929  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        930  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        931  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        932                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        933  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        934  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        935  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        936      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        937  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        938      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        939  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        940  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        941  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        942  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        943                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        944  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        945  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        946      typedef _Sp<_Up, _A0, _A1, _A2> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        947  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        948  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        949  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        950  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        951  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        952  struct _LIBCPP_TEMPLATE_VIS pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        953  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        954      typedef _Ptr                                                     pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        955      typedef typename __pointer_traits_element_type<pointer>::type    element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        956      typedef typename __pointer_traits_difference_type<pointer>::type difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        957  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        958  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        959      template <class _Up> using rebind = typename __pointer_traits_rebind<pointer, _Up>::type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        960  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        961      template <class _Up> struct rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        962          {typedef typename __pointer_traits_rebind<pointer, _Up>::type other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        963  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        964  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        965  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        966      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        967  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        968      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        969      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        970                                             __nat, element_type>::type& __r)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        971          {return pointer::pointer_to(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        972  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        973  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        974  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        975  struct _LIBCPP_TEMPLATE_VIS pointer_traits<_Tp*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        976  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        977      typedef _Tp*      pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        978      typedef _Tp       element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        979      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        980  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        981  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        982      template <class _Up> using rebind = _Up*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        983  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        984      template <class _Up> struct rebind {typedef _Up* other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        985  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        986  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        987  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        988      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        989  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        990      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        991      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        992                                        __nat, element_type>::type& __r) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        993          {return _VSTD::addressof(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        994  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        996  template <class _From, class _To>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        997  struct __rebind_pointer {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        998  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        999      typedef typename pointer_traits<_From>::template rebind<_To>        type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1000  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1001      typedef typename pointer_traits<_From>::template rebind<_To>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1002  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1003  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1004  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1005  // allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1006  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1007  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1008  struct __has_pointer_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1009  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1010  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1011  struct __has_pointer_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1012            typename __void_t<typename _Tp::pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1013  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1014  namespace __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1015  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1016  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1017  template <class _Tp, class _Dp, bool = __has_pointer_type<_Dp>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1018  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1019  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1020      typedef typename _Dp::pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1021  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1022  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1023  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1024  struct __pointer_type<_Tp, _Dp, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1025  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1026      typedef _Tp* type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1027  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1028  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1029  }  // __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1030  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1031  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1032  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1033  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1034      typedef typename __pointer_type_imp::__pointer_type<_Tp, typename remove_reference<_Dp>::type>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1035  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1036  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1037  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1038  struct __has_const_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1039  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1040  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1041  struct __has_const_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1042              typename __void_t<typename _Tp::const_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1043  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1044  template <class _Tp, class _Ptr, class _Alloc, bool = __has_const_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1045  struct __const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1046  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1047      typedef typename _Alloc::const_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1048  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1049  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1050  template <class _Tp, class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1051  struct __const_pointer<_Tp, _Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1052  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1053  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1054      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1055  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1056      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1057  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1058  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1059  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1060  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1061  struct __has_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1062  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1063  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1064  struct __has_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1065                 typename __void_t<typename _Tp::void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1066  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1067  template <class _Ptr, class _Alloc, bool = __has_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1068  struct __void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1069  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1070      typedef typename _Alloc::void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1071  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1072  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1073  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1074  struct __void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1075  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1076  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1077      typedef typename pointer_traits<_Ptr>::template rebind<void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1078  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1079      typedef typename pointer_traits<_Ptr>::template rebind<void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1080  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1081  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1082  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1083  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1084  struct __has_const_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1085  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1086  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1087  struct __has_const_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1088              typename __void_t<typename _Tp::const_void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1089  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1090  template <class _Ptr, class _Alloc, bool = __has_const_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1091  struct __const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1092  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1093      typedef typename _Alloc::const_void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1094  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1095  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1096  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1097  struct __const_void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1098  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1099  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1100      typedef typename pointer_traits<_Ptr>::template rebind<const void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1101  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1102      typedef typename pointer_traits<_Ptr>::template rebind<const void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1103  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1104  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1105  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1106  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1107  inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1108  _Tp*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1109  __to_raw_pointer(_Tp* __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1110  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1111      return __p;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1112  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1113  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1114  #if _LIBCPP_STD_VER <= 17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1115  template <class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1116  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1117  typename pointer_traits<_Pointer>::element_type*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1118  __to_raw_pointer(_Pointer __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1119  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1120      return _VSTD::__to_raw_pointer(__p.operator->());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1121  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1122  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1123  template <class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1124  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1125  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1126  __to_raw_pointer(const _Pointer& __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1127  -> decltype(pointer_traits<_Pointer>::to_address(__p))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1128  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1129      return pointer_traits<_Pointer>::to_address(__p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1130  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1131  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1132  template <class _Pointer, class... _None>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1133  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1134  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1135  __to_raw_pointer(const _Pointer& __p, _None...) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1136  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1137      return _VSTD::__to_raw_pointer(__p.operator->());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1138  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1139  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1140  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1141  inline _LIBCPP_INLINE_VISIBILITY constexpr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1142  _Tp*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1143  to_address(_Tp* __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1144  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1145      static_assert(!is_function_v<_Tp>, "_Tp is a function type");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1146      return __p;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1147  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1148  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1149  template <class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1150  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1151  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1152  to_address(const _Pointer& __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1153  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1154      return _VSTD::__to_raw_pointer(__p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1155  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1156  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1157  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1158  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1159  struct __has_size_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1160  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1161  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1162  struct __has_size_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1163                 typename __void_t<typename _Tp::size_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1164  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1165  template <class _Alloc, class _DiffType, bool = __has_size_type<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1166  struct __size_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1167  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1168      typedef typename make_unsigned<_DiffType>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1169  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1170  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1171  template <class _Alloc, class _DiffType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1172  struct __size_type<_Alloc, _DiffType, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1173  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1174      typedef typename _Alloc::size_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1175  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1176  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1177  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1178  struct __has_propagate_on_container_copy_assignment : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1179  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1180  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1181  struct __has_propagate_on_container_copy_assignment<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1182      typename __void_t<typename _Tp::propagate_on_container_copy_assignment>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1183          : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1184  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1185  template <class _Alloc, bool = __has_propagate_on_container_copy_assignment<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1186  struct __propagate_on_container_copy_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1187  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1188      typedef false_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1189  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1190  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1191  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1192  struct __propagate_on_container_copy_assignment<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1193  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1194      typedef typename _Alloc::propagate_on_container_copy_assignment type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1195  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1197  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1198  struct __has_propagate_on_container_move_assignment : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1199  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1200  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1201  struct __has_propagate_on_container_move_assignment<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1202             typename __void_t<typename _Tp::propagate_on_container_move_assignment>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1203                 : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1204  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1205  template <class _Alloc, bool = __has_propagate_on_container_move_assignment<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1206  struct __propagate_on_container_move_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1207  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1208      typedef false_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1209  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1210  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1211  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1212  struct __propagate_on_container_move_assignment<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1213  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1214      typedef typename _Alloc::propagate_on_container_move_assignment type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1215  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1216  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1217  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1218  struct __has_propagate_on_container_swap : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1219  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1220  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1221  struct __has_propagate_on_container_swap<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1222             typename __void_t<typename _Tp::propagate_on_container_swap>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1223                 : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1224  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1225  template <class _Alloc, bool = __has_propagate_on_container_swap<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1226  struct __propagate_on_container_swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1227  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1228      typedef false_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1229  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1230  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1231  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1232  struct __propagate_on_container_swap<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1233  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1234      typedef typename _Alloc::propagate_on_container_swap type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1235  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1236  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1237  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1238  struct __has_is_always_equal : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1239  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1240  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1241  struct __has_is_always_equal<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1242             typename __void_t<typename _Tp::is_always_equal>::type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1243                 : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1244  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1245  template <class _Alloc, bool = __has_is_always_equal<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1246  struct __is_always_equal
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1247  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1248      typedef typename _VSTD::is_empty<_Alloc>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1249  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1250  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1251  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1252  struct __is_always_equal<_Alloc, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1253  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1254      typedef typename _Alloc::is_always_equal type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1255  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1256  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1257  template <class _Tp, class _Up, bool = __has_rebind<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1258  struct __has_rebind_other
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1259  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1260  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1261      struct __two {char __lx; char __lxx;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1262      template <class _Xp> static __two __test(...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1263      template <class _Xp> static char __test(typename _Xp::template rebind<_Up>::other* = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1264  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1265      static const bool value = sizeof(__test<_Tp>(0)) == 1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1266  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1267  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1268  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1269  struct __has_rebind_other<_Tp, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1270  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1271      static const bool value = false;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1272  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1273  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1274  template <class _Tp, class _Up, bool = __has_rebind_other<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1275  struct __allocator_traits_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1276  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1277      typedef typename _Tp::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1278  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1279  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1280  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1281  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1282  template <template <class, class...> class _Alloc, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1283  struct __allocator_traits_rebind<_Alloc<_Tp, _Args...>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1284  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1285      typedef typename _Alloc<_Tp, _Args...>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1286  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1287  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1288  template <template <class, class...> class _Alloc, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1289  struct __allocator_traits_rebind<_Alloc<_Tp, _Args...>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1290  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1291      typedef _Alloc<_Up, _Args...> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1292  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1293  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1294  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1295  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1296  template <template <class> class _Alloc, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1297  struct __allocator_traits_rebind<_Alloc<_Tp>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1298  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1299      typedef typename _Alloc<_Tp>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1300  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1301  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1302  template <template <class> class _Alloc, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1303  struct __allocator_traits_rebind<_Alloc<_Tp>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1304  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1305      typedef _Alloc<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1306  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1307  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1308  template <template <class, class> class _Alloc, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1309  struct __allocator_traits_rebind<_Alloc<_Tp, _A0>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1310  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1311      typedef typename _Alloc<_Tp, _A0>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1312  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1313  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1314  template <template <class, class> class _Alloc, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1315  struct __allocator_traits_rebind<_Alloc<_Tp, _A0>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1316  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1317      typedef _Alloc<_Up, _A0> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1318  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1319  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1320  template <template <class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1321                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1322  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1323  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1324      typedef typename _Alloc<_Tp, _A0, _A1>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1325  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1326  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1327  template <template <class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1328                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1329  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1330  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1331      typedef _Alloc<_Up, _A0, _A1> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1332  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1333  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1334  template <template <class, class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1335                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1336  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1, _A2>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1337  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1338      typedef typename _Alloc<_Tp, _A0, _A1, _A2>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1339  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1340  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1341  template <template <class, class, class, class> class _Alloc, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1342                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1343  struct __allocator_traits_rebind<_Alloc<_Tp, _A0, _A1, _A2>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1344  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1345      typedef _Alloc<_Up, _A0, _A1, _A2> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1346  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1347  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1348  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1349  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1350  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1351  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1352  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1353  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1354  __has_allocate_hint_test(_Alloc&& __a, _SizeType&& __sz, _ConstVoidPtr&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1355      -> decltype((void)__a.allocate(__sz, __p), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1356  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1357  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1358  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1359  __has_allocate_hint_test(const _Alloc& __a, _SizeType&& __sz, _ConstVoidPtr&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1360      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1361  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1362  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1363  struct __has_allocate_hint
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1364      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1365          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1366              decltype(_VSTD::__has_allocate_hint_test(declval<_Alloc>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1367                                            declval<_SizeType>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1368                                            declval<_ConstVoidPtr>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1369              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1370  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1371  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1372  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1373  #else  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1374  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1375  template <class _Alloc, class _SizeType, class _ConstVoidPtr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1376  struct __has_allocate_hint
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1377      : true_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1378  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1379  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1380  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1381  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1382  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1383  #if !defined(_LIBCPP_CXX03_LANG)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1384  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1385  template <class _Alloc, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1386  decltype(_VSTD::declval<_Alloc>().construct(_VSTD::declval<_Tp*>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1387                                             _VSTD::declval<_Args>()...),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1388                                             true_type())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1389  __has_construct_test(_Alloc&& __a, _Tp* __p, _Args&& ...__args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1390  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1391  template <class _Alloc, class _Pointer, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1392  false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1393  __has_construct_test(const _Alloc& __a, _Pointer&& __p, _Args&& ...__args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1394  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1395  template <class _Alloc, class _Pointer, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1396  struct __has_construct
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1397      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1398          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1399              decltype(_VSTD::__has_construct_test(declval<_Alloc>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1400                                            declval<_Pointer>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1401                                            declval<_Args>()...)),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1402              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1403  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1404  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1405  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1406  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1407  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1408  __has_destroy_test(_Alloc&& __a, _Pointer&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1409      -> decltype(__a.destroy(__p), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1410  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1411  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1412  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1413  __has_destroy_test(const _Alloc& __a, _Pointer&& __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1414      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1415  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1416  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1417  struct __has_destroy
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1418      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1419          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1420              decltype(_VSTD::__has_destroy_test(declval<_Alloc>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1421                                          declval<_Pointer>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1422              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1423  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1424  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1425  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1426  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1427  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1428  __has_max_size_test(_Alloc&& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1429      -> decltype(__a.max_size(), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1430  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1431  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1432  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1433  __has_max_size_test(const volatile _Alloc& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1434      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1435  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1436  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1437  struct __has_max_size
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1438      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1439          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1440              decltype(_VSTD::__has_max_size_test(declval<_Alloc&>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1441              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1442  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1443  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1444  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1445  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1446  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1447  __has_select_on_container_copy_construction_test(_Alloc&& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1448      -> decltype(__a.select_on_container_copy_construction(), true_type());
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1449  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1450  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1451  auto
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1452  __has_select_on_container_copy_construction_test(const volatile _Alloc& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1453      -> false_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1454  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1455  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1456  struct __has_select_on_container_copy_construction
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1457      : integral_constant<bool,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1458          is_same<
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1459              decltype(_VSTD::__has_select_on_container_copy_construction_test(declval<_Alloc&>())),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1460              true_type>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1461  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1462  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1463  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1464  #else  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1465  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1466  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1467  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1468  template <class _Alloc, class _Pointer, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1469  struct __has_construct
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1470      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1471  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1472  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1473  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1474  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1475  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1476  template <class _Alloc, class _Pointer, class _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1477  struct __has_construct
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1478      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1479  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1480  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1481  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1482  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1483  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1484  template <class _Alloc, class _Pointer>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1485  struct __has_destroy
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1486      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1487  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1488  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1489  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1490  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1491  struct __has_max_size
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1492      : true_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1493  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1494  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1495  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1496  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1497  struct __has_select_on_container_copy_construction
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1498      : false_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1499  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1500  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1501  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1502  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1504  template <class _Alloc, class _Ptr, bool = __has_difference_type<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1505  struct __alloc_traits_difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1506  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1507      typedef typename pointer_traits<_Ptr>::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1508  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1509  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1510  template <class _Alloc, class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1511  struct __alloc_traits_difference_type<_Alloc, _Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1512  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1513      typedef typename _Alloc::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1514  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1515  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1516  template <class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1517  struct _LIBCPP_TEMPLATE_VIS allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1518  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1519      typedef _Alloc                              allocator_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1520      typedef typename allocator_type::value_type value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1521  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1522      typedef typename __pointer_type<value_type, allocator_type>::type pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1523      typedef typename __const_pointer<value_type, pointer, allocator_type>::type const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1524      typedef typename __void_pointer<pointer, allocator_type>::type void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1525      typedef typename __const_void_pointer<pointer, allocator_type>::type const_void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1526  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1527      typedef typename __alloc_traits_difference_type<allocator_type, pointer>::type difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1528      typedef typename __size_type<allocator_type, difference_type>::type size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1529  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1530      typedef typename __propagate_on_container_copy_assignment<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1531                       propagate_on_container_copy_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1532      typedef typename __propagate_on_container_move_assignment<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1533                       propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1534      typedef typename __propagate_on_container_swap<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1535                       propagate_on_container_swap;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1536      typedef typename __is_always_equal<allocator_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1537                       is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1538  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1539  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1540      template <class _Tp> using rebind_alloc =
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1541                    typename __allocator_traits_rebind<allocator_type, _Tp>::type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1542      template <class _Tp> using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1543  #else  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1544      template <class _Tp> struct rebind_alloc
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1545          {typedef typename __allocator_traits_rebind<allocator_type, _Tp>::type other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1546      template <class _Tp> struct rebind_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1547          {typedef allocator_traits<typename rebind_alloc<_Tp>::other> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1548  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1549  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1550      _LIBCPP_NODISCARD_AFTER_CXX17 _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1551      static pointer allocate(allocator_type& __a, size_type __n)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1552          {return __a.allocate(__n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1553      _LIBCPP_NODISCARD_AFTER_CXX17 _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1554      static pointer allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1555          {return __allocate(__a, __n, __hint,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1556              __has_allocate_hint<allocator_type, size_type, const_void_pointer>());}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1557  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1558      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1559      static void deallocate(allocator_type& __a, pointer __p, size_type __n) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1560          {__a.deallocate(__p, __n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1561  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1562  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1563      template <class _Tp, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1564          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1565          static void construct(allocator_type& __a, _Tp* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1566              {__construct(__has_construct<allocator_type, _Tp*, _Args...>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1567                           __a, __p, _VSTD::forward<_Args>(__args)...);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1568  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1569      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1570          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1571          static void construct(allocator_type&, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1572              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1573                  ::new ((void*)__p) _Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1574              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1575      template <class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1576          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1577          static void construct(allocator_type&, _Tp* __p, const _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1578              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1579                  ::new ((void*)__p) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1580              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1581      template <class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1582          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1583          static void construct(allocator_type&, _Tp* __p, const _A0& __TSK_a0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1584                                const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1585              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1586                  ::new ((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1587              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1588      template <class _Tp, class _A0, class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1589          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1590          static void construct(allocator_type&, _Tp* __p, const _A0& __TSK_a0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1591                                const _A1& __TSK_a1, const _A2& __TSK_a2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1592              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1593                  ::new ((void*)__p) _Tp(__TSK_a0, __TSK_a1, __TSK_a2);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1594              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1595  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1596  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1597      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1598          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1599          static void destroy(allocator_type& __a, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1600              {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1601  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1602      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1603      static size_type max_size(const allocator_type& __a) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1604          {return __max_size(__has_max_size<const allocator_type>(), __a);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1605  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1606      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1607      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1608          select_on_container_copy_construction(const allocator_type& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1609              {return __select_on_container_copy_construction(
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1610                  __has_select_on_container_copy_construction<const allocator_type>(),
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1611                  __a);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1612  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1613      template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1614          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1615          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1616          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1617          __construct_forward(allocator_type& __a, _Ptr __begin1, _Ptr __end1, _Ptr& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1618          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1619              for (; __begin1 != __end1; ++__begin1, ++__begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1620                  construct(__a, _VSTD::__to_raw_pointer(__begin2), _VSTD::move_if_noexcept(*__begin1));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1621          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1622  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1623      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1624          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1625          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1626          typename enable_if
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1627          <
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1628              (is_same<allocator_type, allocator<_Tp> >::value
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1629                  || !__has_construct<allocator_type, _Tp*, _Tp>::value) &&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1630               is_trivially_move_constructible<_Tp>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1631              void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1632          >::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1633          __construct_forward(allocator_type&, _Tp* __begin1, _Tp* __end1, _Tp*& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1634          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1635              ptrdiff_t _Np = __end1 - __begin1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1636              if (_Np > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1637              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1638                  _VSTD::memcpy(__begin2, __begin1, _Np * sizeof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1639                  __begin2 += _Np;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1640              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1641          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1642  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1643      template <class _Iter, class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1644          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1645          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1646          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1647          __construct_range_forward(allocator_type& __a, _Iter __begin1, _Iter __end1, _Ptr& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1648          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1649              for (; __begin1 != __end1; ++__begin1, (void) ++__begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1650                  construct(__a, _VSTD::__to_raw_pointer(__begin2), *__begin1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1651          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1652  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1653      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1654          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1655          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1656          typename enable_if
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1657          <
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1658              (is_same<allocator_type, allocator<_Tp> >::value
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1659                  || !__has_construct<allocator_type, _Tp*, _Tp>::value) &&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1660               is_trivially_move_constructible<_Tp>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1661              void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1662          >::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1663          __construct_range_forward(allocator_type&, _Tp* __begin1, _Tp* __end1, _Tp*& __begin2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1664          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1665              typedef typename remove_const<_Tp>::type _Vp;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1666              ptrdiff_t _Np = __end1 - __begin1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1667              if (_Np > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1668              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1669                  _VSTD::memcpy(const_cast<_Vp*>(__begin2), __begin1, _Np * sizeof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1670                  __begin2 += _Np;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1671              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1672          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1673  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1674      template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1675          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1676          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1677          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1678          __construct_backward(allocator_type& __a, _Ptr __begin1, _Ptr __end1, _Ptr& __end2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1679          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1680              while (__end1 != __begin1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1681              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1682                  construct(__a, _VSTD::__to_raw_pointer(__end2-1), _VSTD::move_if_noexcept(*--__end1));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1683                  --__end2;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1684              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1685          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1686  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1687      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1688          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1689          static
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1690          typename enable_if
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1691          <
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1692              (is_same<allocator_type, allocator<_Tp> >::value
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1693                  || !__has_construct<allocator_type, _Tp*, _Tp>::value) &&
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1694               is_trivially_move_constructible<_Tp>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1695              void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1696          >::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1697          __construct_backward(allocator_type&, _Tp* __begin1, _Tp* __end1, _Tp*& __end2)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1698          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1699              ptrdiff_t _Np = __end1 - __begin1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1700              __end2 -= _Np;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1701              if (_Np > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1702                  _VSTD::memcpy(__end2, __begin1, _Np * sizeof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1703          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1704  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1705  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1706  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1707      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1708      static pointer __allocate(allocator_type& __a, size_type __n,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1709          const_void_pointer __hint, true_type)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1710          {return __a.allocate(__n, __hint);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1711      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1712      static pointer __allocate(allocator_type& __a, size_type __n,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1713          const_void_pointer, false_type)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1714          {return __a.allocate(__n);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1715  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1716  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1717      template <class _Tp, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1718          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1719          static void __construct(true_type, allocator_type& __a, _Tp* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1720              {__a.construct(__p, _VSTD::forward<_Args>(__args)...);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1721      template <class _Tp, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1722          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1723          static void __construct(false_type, allocator_type&, _Tp* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1724              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1725                  ::new ((void*)__p) _Tp(_VSTD::forward<_Args>(__args)...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1726              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1727  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1728  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1729      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1730          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1731          static void __destroy(true_type, allocator_type& __a, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1732              {__a.destroy(__p);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1733      template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1734          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1735          static void __destroy(false_type, allocator_type&, _Tp* __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1736              {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1737                  __p->~_Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1738              }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1739  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1740      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1741      static size_type __max_size(true_type, const allocator_type& __a) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1742              {return __a.max_size();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1743      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1744      static size_type __max_size(false_type, const allocator_type&) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1745              {return numeric_limits<size_type>::max() / sizeof(value_type);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1746  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1747      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1748      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1749          __select_on_container_copy_construction(true_type, const allocator_type& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1750              {return __a.select_on_container_copy_construction();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1751      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1752      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1753          __select_on_container_copy_construction(false_type, const allocator_type& __a)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1754              {return __a;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1755  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1756  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1757  template <class _Traits, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1758  struct __rebind_alloc_helper
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1759  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1760  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1761      typedef typename _Traits::template rebind_alloc<_Tp>        type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1762  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1763      typedef typename _Traits::template rebind_alloc<_Tp>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1764  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1765  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1766  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1767  // allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1768  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1769  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1770  class _LIBCPP_TEMPLATE_VIS allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1771  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1772  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1773      typedef size_t            size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1774      typedef ptrdiff_t         difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1775      typedef _Tp*              pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1776      typedef const _Tp*        const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1777      typedef _Tp&              reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1778      typedef const _Tp&        const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1779      typedef _Tp               value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1780  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1781      typedef true_type propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1782      typedef true_type is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1783  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1784  //#ifdef __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1785      //TASKING hack to get it compiling
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1786  //    static allocator<_Tp> select_on_container_copy_construction() { return allocator<_Tp>(); }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1787  //#endif // __TASKING__
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1788  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1789      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1790  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1791      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1792      allocator() _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1793  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1794      template <class _Up> 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1795      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1796      allocator(const allocator<_Up>&) _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1797  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1798      _LIBCPP_INLINE_VISIBILITY pointer address(reference __x) const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1799          {return _VSTD::addressof(__x);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1800      _LIBCPP_INLINE_VISIBILITY const_pointer address(const_reference __x) const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1801          {return _VSTD::addressof(__x);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1802      _LIBCPP_NODISCARD_AFTER_CXX17 _LIBCPP_INLINE_VISIBILITY 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1803      pointer allocate(size_type __n, allocator<void>::const_pointer = 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1804          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1805          if (__n > max_size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1806              __throw_length_error("allocator<T>::allocate(size_t n)"
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1807                                   " 'n' exceeds maximum supported size");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1808          return static_cast<pointer>(_VSTD::__libcpp_allocate(__n * sizeof(_Tp), __alignof(_Tp)));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1809          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1810      _LIBCPP_INLINE_VISIBILITY void deallocate(pointer __p, size_type) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1811          {_VSTD::__libcpp_deallocate((void*)__p, __alignof(_Tp));}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1812      _LIBCPP_INLINE_VISIBILITY size_type max_size() const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1813          {return size_type(~0) / sizeof(_Tp);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1814  #if !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1815      template <class _Up, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1816          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1817          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1818          construct(_Up* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1819          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1820              ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1821          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1822  #else  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1823          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1824          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1825          construct(pointer __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1826          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1827              ::new((void*)__p) _Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1828          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1829  # if defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1830  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1831      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1832          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1833          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1834          construct(pointer __p, _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1835          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1836              ::new((void*)__p) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1837          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1838      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1839          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1840          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1841          construct(pointer __p, const _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1842          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1843              ::new((void*)__p) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1844          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1845  # endif  // defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1846      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1847          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1848          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1849          construct(pointer __p, _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1850          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1851              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1852          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1853      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1854          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1855          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1856          construct(pointer __p, const _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1857          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1858              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1859          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1860      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1861          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1862          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1863          construct(pointer __p, _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1864          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1865              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1866          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1867      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1868          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1869          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1870          construct(pointer __p, const _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1871          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1872              ::new((void*)__p) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1873          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1874  #endif  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1875      _LIBCPP_INLINE_VISIBILITY void destroy(pointer __p) {__p->~_Tp();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1876  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1877  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1878  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1879  class _LIBCPP_TEMPLATE_VIS allocator<const _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1880  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1881  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1882      typedef size_t            size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1883      typedef ptrdiff_t         difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1884      typedef const _Tp*        pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1885      typedef const _Tp*        const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1886      typedef const _Tp&        reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1887      typedef const _Tp&        const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1888      typedef const _Tp         value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1889  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1890      typedef true_type propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1891      typedef true_type is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1892  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1893      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1894  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1895      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1896      allocator() _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1897  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1898      template <class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1899      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1900      allocator(const allocator<_Up>&) _NOEXCEPT {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1901  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1902      _LIBCPP_INLINE_VISIBILITY const_pointer address(const_reference __x) const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1903          {return _VSTD::addressof(__x);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1904      _LIBCPP_INLINE_VISIBILITY pointer allocate(size_type __n, allocator<void>::const_pointer = 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1905      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1906          if (__n > max_size())
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1907              __throw_length_error("allocator<const T>::allocate(size_t n)"
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1908                                   " 'n' exceeds maximum supported size");
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1909          return static_cast<pointer>(_VSTD::__libcpp_allocate(__n * sizeof(_Tp), __alignof(_Tp)));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1910      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1911      _LIBCPP_INLINE_VISIBILITY void deallocate(pointer __p, size_type) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1912          {_VSTD::__libcpp_deallocate((void*) const_cast<_Tp *>(__p), __alignof(_Tp));}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1913      _LIBCPP_INLINE_VISIBILITY size_type max_size() const _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1914          {return size_type(~0) / sizeof(_Tp);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1915  #if !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1916      template <class _Up, class... _Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1917          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1918          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1919          construct(_Up* __p, _Args&&... __args)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1920          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1921              ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1922          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1923  #else  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1924          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1925          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1926          construct(pointer __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1927          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1928              ::new((void*) const_cast<_Tp *>(__p)) _Tp();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1929          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1930  # if defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1931  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1932      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1933          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1934          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1935          construct(pointer __p, _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1936          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1937              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1938          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1939      template <class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1940          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1941          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1942          construct(pointer __p, const _A0& __TSK_a0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1943          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1944              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1945          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1946  # endif  // defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1947      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1948          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1949          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1950          construct(pointer __p, _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1951          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1952              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1953          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1954      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1955          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1956          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1957          construct(pointer __p, const _A0& __TSK_a0, _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1958          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1959              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1960          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1961      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1962          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1963          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1964          construct(pointer __p, _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1965          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1966              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1967          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1968      template <class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1969          _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1970          void
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1971          construct(pointer __p, const _A0& __TSK_a0, const _A1& __TSK_a1)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1972          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1973              ::new((void*) const_cast<_Tp *>(__p)) _Tp(__TSK_a0, __TSK_a1);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1974          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1975  #endif  // !defined(_LIBCPP_HAS_NO_RVALUE_REFERENCES) && !defined(_LIBCPP_HAS_NO_VARIADICS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1976      _LIBCPP_INLINE_VISIBILITY void destroy(pointer __p) {__p->~_Tp();}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1977  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1978  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1979  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1980  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1981  bool operator==(const allocator<_Tp>&, const allocator<_Up>&) _NOEXCEPT {return true;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1982  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1983  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1984  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1985  bool operator!=(const allocator<_Tp>&, const allocator<_Up>&) _NOEXCEPT {return false;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1986  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1987  template <class _OutputIterator, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1988  class _LIBCPP_TEMPLATE_VIS raw_storage_iterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1989      : public iterator<output_iterator_tag,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1990                        _Tp,                                         // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1991                        ptrdiff_t,                                   // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1992                        _Tp*,                                        // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1993                        raw_storage_iterator<_OutputIterator, _Tp>&> // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1994  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1995  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1996      _OutputIterator __x_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1997  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1998      _LIBCPP_INLINE_VISIBILITY explicit raw_storage_iterator(_OutputIterator __x) : __x_(__x) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1999      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator*() {return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2000      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator=(const _Tp& __element)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2001          {::new(_VSTD::addressof(*__x_)) _Tp(__element); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2002  #if _LIBCPP_STD_VER >= 14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2003      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator=(_Tp&& __element)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2004          {::new(_VSTD::addressof(*__x_)) _Tp(_VSTD::move(__element)); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2005  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2006      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator& operator++() {++__x_; return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2007      _LIBCPP_INLINE_VISIBILITY raw_storage_iterator  operator++(int)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2008          {raw_storage_iterator __t(*this); ++__x_; return __t;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2009  #if _LIBCPP_STD_VER >= 14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2010      _LIBCPP_INLINE_VISIBILITY _OutputIterator base() const { return __x_; }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2011  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2012  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2013  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2014  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2015  _LIBCPP_NO_CFI
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2016  pair<_Tp*, ptrdiff_t>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2017  get_temporary_buffer(ptrdiff_t __n) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2018  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2019      pair<_Tp*, ptrdiff_t> __r(0, 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2020      const ptrdiff_t __m = (~ptrdiff_t(0) ^
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2021                             ptrdiff_t(ptrdiff_t(1) << (sizeof(ptrdiff_t) * __CHAR_BIT__ - 1)))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2022                             / sizeof(_Tp);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2023      if (__n > __m)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2024          __n = __m;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2025      while (__n > 0)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2026      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2027  #if !defined(_LIBCPP_HAS_NO_ALIGNED_ALLOCATION)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2028      if (__is_overaligned_for_new(__alignof(_Tp)))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2029          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2030              std::align_val_t __al =
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2031                  std::align_val_t(std::alignment_of<_Tp>::value);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2032              __r.first = static_cast<_Tp*>(::operator new(
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2033                  __n * sizeof(_Tp), __al, nothrow));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2034          } else {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2035              __r.first = static_cast<_Tp*>(::operator new(
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2036                  __n * sizeof(_Tp), nothrow));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2037          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2038  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2039      if (__is_overaligned_for_new(__alignof(_Tp)))
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2040          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2041              // Since aligned operator new is unavailable, return an empty
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2042              // buffer rather than one with invalid alignment.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2043              return __r;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2044          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2045  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2046          __r.first = static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), nothrow));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2047  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2048  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2049          if (__r.first)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2050          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2051              __r.second = __n;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2052              break;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2053          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2054          __n /= 2;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2055      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2056      return __r;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2057  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2058  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2059  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2060  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2061  void return_temporary_buffer(_Tp* __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2062  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2063    _VSTD::__libcpp_deallocate((void*)__p, __alignof(_Tp));
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2064  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2065  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2066  #if _LIBCPP_STD_VER <= 14 || defined(_LIBCPP_ENABLE_CXX17_REMOVED_AUTO_PTR)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2067  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2068  struct auto_ptr_ref
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2069  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2070      _Tp* __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2071  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2072  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2073  template<class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2074  class _LIBCPP_TEMPLATE_VIS auto_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2075  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2076  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2077      _Tp* __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2078  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2079      typedef _Tp element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2080  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2081      _LIBCPP_INLINE_VISIBILITY explicit auto_ptr(_Tp* __p = 0) throw() : __ptr_(__p) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2082      _LIBCPP_INLINE_VISIBILITY auto_ptr(auto_ptr& __p) throw() : __ptr_(__p.release()) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2083      template<class _Up> _LIBCPP_INLINE_VISIBILITY auto_ptr(auto_ptr<_Up>& __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2084          : __ptr_(__p.release()) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2085      _LIBCPP_INLINE_VISIBILITY auto_ptr& operator=(auto_ptr& __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2086          {reset(__p.release()); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2087      template<class _Up> _LIBCPP_INLINE_VISIBILITY auto_ptr& operator=(auto_ptr<_Up>& __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2088          {reset(__p.release()); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2089      _LIBCPP_INLINE_VISIBILITY auto_ptr& operator=(auto_ptr_ref<_Tp> __p) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2090          {reset(__p.__ptr_); return *this;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2091      _LIBCPP_INLINE_VISIBILITY ~auto_ptr() throw() {delete __ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2092  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2093      _LIBCPP_INLINE_VISIBILITY _Tp& operator*() const throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2094          {return *__ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2095      _LIBCPP_INLINE_VISIBILITY _Tp* operator->() const throw() {return __ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2096      _LIBCPP_INLINE_VISIBILITY _Tp* get() const throw() {return __ptr_;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2097      _LIBCPP_INLINE_VISIBILITY _Tp* release() throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2098      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2099          _Tp* __t = __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2100          __ptr_ = 0;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2101          return __t;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2102      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2103      _LIBCPP_INLINE_VISIBILITY void reset(_Tp* __p = 0) throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2104      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2105          if (__ptr_ != __p)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2106              delete __ptr_;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2107          __ptr_ = __p;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2108      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2109  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2110      _LIBCPP_INLINE_VISIBILITY auto_ptr(auto_ptr_ref<_Tp> __p) throw() : __ptr_(__p.__ptr_) {}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2111      template<class _Up> _LIBCPP_INLINE_VISIBILITY operator auto_ptr_ref<_Up>() throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2112          {auto_ptr_ref<_Up> __t; __t.__ptr_ = release(); return __t;}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2113      template<class _Up> _LIBCPP_INLINE_VISIBILITY operator auto_ptr<_Up>() throw()
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2114          {return auto_ptr<_Up>(release());}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2115  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2116  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2117  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2118  class _LIBCPP_TEMPLATE_VIS auto_ptr<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2119  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2120  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2121      typedef void element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2122  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2123  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2124  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2125  template <class _Tp, int _Idx,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2126            bool _CanBeEmptyBase =
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2127                is_empty<_Tp>::value && !__libcpp_is_final<_Tp>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2128  struct __compressed_pair_elem {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2129    typedef _Tp _ParamT;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2130    typedef _Tp& reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2131    typedef const _Tp& const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2132  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2133  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       2134    _LIBCPP_INLINE_VISIBILITY constexpr __compressed_pair_elem() : __value_() {}
        mov     d4,#0
        mov     d5,#12
        call    memset
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]172,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]172
        st.a    [a15],a2
        mov     d0,#6
        st.b    [a10]176,d0
        lea     a15,[a10]172
        st.a    [a10]88,a15
        mov     d0,#6
        st.b    [a10]92,d0
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]172
        st.a    [a15],a2
        lea     a4,[a10]2608
        mov     e4,d9,d10
        call    _ZNSs6__initEjc
        lea     a15,[a10]2608
        st.a    [a10],a15
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov     d0,#0
        st.h    [a15],d0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1434          if (__s.__sbuf_->sputn(__sp.data(), __ns) != __ns)
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]1264,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1264
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1268,d15
        lea     a15,[a10]1264
        st.a    [a10]1180,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1180
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1184,d15
        lea     a15,[a10]1180
        st.a    [a10]424,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]424
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]428,d15
        lea     a15,[a10]424
        st.a    [a10]340,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]340
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]344,d15
        lea     a15,[a10]340
        st.a    [a10]256,a15
        mov     d15,#6
        st.b    [a10]260,d15
        lea     a15,[a10]2608
        movh.a  a2,#@his(__curr_eh_stack_entry)
        lea     a2,[a2]@los(__curr_eh_stack_entry)
        ld.a    a4,[a10]340
        st.a    [a2],a4
        ld.bu   d15,[a15]
        and     d15,#1
        ne      d15,d15,#0
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]424
        st.a    [a15],a2
        jeq     d15,#0,.L46
        ld.a    a15,[a10]424
        st.a    [a10]676,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]676
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]680,d15
        lea     a15,[a10]676
        st.a    [a10]592,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]592
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]596,d15
        lea     a15,[a10]592
        st.a    [a10]508,a15
        mov     d15,#6
        st.b    [a10]512,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]592
        st.a    [a15],a2
        ld.a    a5,[a10]2616
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]676
        st.a    [a15],a2
        j       .L47
.L46:
        ld.a    a15,[a10]424
        st.a    [a10]1096,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1096
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1100,d15
        lea     a15,[a10]1096
        st.a    [a10]844,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]844
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]848,d15
        lea     a15,[a10]844
        st.a    [a10]760,a15
        mov     d15,#6
        st.b    [a10]764,d15
        lea     a5,[a10]2608
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]844
        st.a    [a15],a2
        add.a   a5,#1
        ld.a    a15,[a10]844
        st.a    [a10]1012,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1012
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1016,d15
        lea     a15,[a10]1012
        st.a    [a10]928,a15
        mov     d15,#6
        st.b    [a10]932,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]1096
        st.a    [a15],a2
.L47:
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]1180
        st.a    [a15],a2

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          2  //===-------------------------- memory ------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         11  #ifndef _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         12  #define _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         15      memory synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         17  namespace std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         18  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         19  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         20  struct allocator_arg_t { };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         21  inline constexpr allocator_arg_t allocator_arg = allocator_arg_t();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         22  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         23  template <class T, class Alloc> struct uses_allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         24  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         25  template <class Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         26  struct pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         27  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         28      typedef Ptr pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         29      typedef <details> element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         30      typedef <details> difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         31  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         32      template <class U> using rebind = <details>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         34      static pointer pointer_to(<details>);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         35  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         36  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         37  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         38  struct pointer_traits<T*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         39  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         40      typedef T* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         41      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         42      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         43  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         44      template <class U> using rebind = U*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         45  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         46      static pointer pointer_to(<details>) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         47  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         48  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         49  template <class T> constexpr T* to_address(T* p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         50  template <class Ptr> auto to_address(const Ptr& p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         51  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         52  template <class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         53  struct allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         54  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         55      typedef Alloc                        allocator_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         56      typedef typename allocator_type::value_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         57                                           value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         58  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         59      typedef Alloc::pointer | value_type* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         60      typedef Alloc::const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         61            | pointer_traits<pointer>::rebind<const value_type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         62                                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         63      typedef Alloc::void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         64            | pointer_traits<pointer>::rebind<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         65                                           void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         66      typedef Alloc::const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         67            | pointer_traits<pointer>::rebind<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         68                                           const_void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         69      typedef Alloc::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         70            | pointer_traits<pointer>::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         71                                           difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         72      typedef Alloc::size_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         73            | make_unsigned<difference_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         74                                           size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         75      typedef Alloc::propagate_on_container_copy_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         76            | false_type                   propagate_on_container_copy_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         77      typedef Alloc::propagate_on_container_move_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         78            | false_type                   propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         79      typedef Alloc::propagate_on_container_swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         80            | false_type                   propagate_on_container_swap;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         81      typedef Alloc::is_always_equal
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         82            | is_empty                     is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         84      template <class T> using rebind_alloc  = Alloc::rebind<U>::other | Alloc<T, Args...>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         85      template <class T> using rebind_traits = allocator_traits<rebind_alloc<T>>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         87      static pointer allocate(allocator_type& a, size_type n);                          // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         88      static pointer allocate(allocator_type& a, size_type n, const_void_pointer hint); // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         90      static void deallocate(allocator_type& a, pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         92      template <class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         93          static void construct(allocator_type& a, T* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         95      template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         96          static void destroy(allocator_type& a, T* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         98      static size_type max_size(const allocator_type& a); // noexcept in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         99  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        100      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        101          select_on_container_copy_construction(const allocator_type& a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        102  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        103  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        104  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        105  class allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        106  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        107  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        108      typedef void*                                 pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        109      typedef const void*                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        110      typedef void                                  value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        112      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        113  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        115  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        116  class allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        117  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        118  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        119      typedef size_t                                size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        120      typedef ptrdiff_t                             difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        121      typedef T*                                    pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        122      typedef const T*                              const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        123      typedef typename add_lvalue_reference<T>::type       reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        124      typedef typename add_lvalue_reference<const T>::type const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        125      typedef T                                     value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        126  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        127      template <class U> struct rebind {typedef allocator<U> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        128  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        129      constexpr allocator() noexcept;                      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        130      constexpr allocator(const allocator&) noexcept;      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        131      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        132        constexpr allocator(const allocator<U>&) noexcept; // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        133      ~allocator();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        134      pointer address(reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        135      const_pointer address(const_reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        136      pointer allocate(size_type, allocator<void>::const_pointer hint = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        137      void deallocate(pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        138      size_type max_size() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        139      template<class U, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        140          void construct(U* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        141      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        142          void destroy(U* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        143  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        144  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        145  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        146  bool operator==(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        148  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        149  bool operator!=(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        150  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        151  template <class OutputIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        152  class raw_storage_iterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        153      : public iterator<output_iterator_tag,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        154                        T,                               // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        155                        ptrdiff_t,                       // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        156                        T*,                              // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        157                        raw_storage_iterator&>           // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        158  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        159  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        160      explicit raw_storage_iterator(OutputIterator x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        161      raw_storage_iterator& operator*();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        162      raw_storage_iterator& operator=(const T& element);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        163      raw_storage_iterator& operator++();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        164      raw_storage_iterator  operator++(int);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        165  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        166  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        167  template <class T> pair<T*,ptrdiff_t> get_temporary_buffer(ptrdiff_t n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        168  template <class T> void               return_temporary_buffer(T* p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        169  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        170  template <class T> T* addressof(T& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        171  template <class T> T* addressof(const T&& r) noexcept = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        172  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        173  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        174  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        175  uninitialized_copy(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        176  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        177  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        178  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        179  uninitialized_copy_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        180  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        181  template <class ForwardIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        182  void uninitialized_fill(ForwardIterator first, ForwardIterator last, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        183  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        184  template <class ForwardIterator, class Size, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        185  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        186  uninitialized_fill_n(ForwardIterator first, Size n, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        187  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        188  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        189  void destroy_at(T* location);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        190  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        191  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        192   void destroy(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        193  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        194  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        195   ForwardIterator destroy_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        197  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        198   ForwardIterator uninitialized_move(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        199  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        200  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        201   pair<InputIterator,ForwardIterator> uninitialized_move_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        202  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        203  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        204   void uninitialized_value_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        206  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        207   ForwardIterator uninitialized_value_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        208  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        209  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        210   void uninitialized_default_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        211  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        212  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        213   ForwardIterator uninitialized_default_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        214  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        215  template <class Y> struct auto_ptr_ref {};      // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        216  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        217  template<class X>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        218  class auto_ptr                                  // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        219  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        220  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        221      typedef X element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        222  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        223      explicit auto_ptr(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        224      auto_ptr(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        225      template<class Y> auto_ptr(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        226      auto_ptr& operator=(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        227      template<class Y> auto_ptr& operator=(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        228      auto_ptr& operator=(auto_ptr_ref<X> r) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        229      ~auto_ptr() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        230  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        231      typename add_lvalue_reference<X>::type operator*() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        232      X* operator->() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        233      X* get() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        234      X* release() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        235      void reset(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        236  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        237      auto_ptr(auto_ptr_ref<X>) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        238      template<class Y> operator auto_ptr_ref<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        239      template<class Y> operator auto_ptr<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        240  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        241  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        242  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        243  struct default_delete
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        244  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        245      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        246      template <class U> default_delete(const default_delete<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        248      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        249  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        250  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        251  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        252  struct default_delete<T[]>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        253  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        254      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        255      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        256      template <class U> void operator()(U*) const = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        257  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        258  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        259  template <class T, class D = default_delete<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        260  class unique_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        262  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        263      typedef see below pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        264      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        265      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        266  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        267      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        268      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        269      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        270      unique_ptr(pointer p, see below d1) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        271      unique_ptr(pointer p, see below d2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        272      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        273      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        274      template <class U, class E>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        275          unique_ptr(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        276      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        277          unique_ptr(auto_ptr<U>&& u) noexcept;       // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        278  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        279      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        280      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        281  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        282      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        283      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        284      template <class U, class E> unique_ptr& operator=(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        285      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        286  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        287      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        288      typename add_lvalue_reference<T>::type operator*() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        289      pointer operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        290      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        291      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        292      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        293      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        294  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        295      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        296      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        297      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        298      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        299  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        300  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        301  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        302  class unique_ptr<T[], D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        303  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        304  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        305      typedef implementation-defined pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        306      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        307      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        309      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        310      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        311      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        312      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        313      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        314      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        315      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        316  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        317      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        318      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        319  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        320      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        321      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        322      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        323  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        324      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        325      T& operator[](size_t i) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        326      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        327      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        328      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        329      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        330  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        331      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        332      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        333      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        334      void reset(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        335      template <class U> void reset(U) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        336      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        337  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        338  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        339  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        340      void swap(unique_ptr<T, D>& x, unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        341  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        342  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        343      bool operator==(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        344  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        345      bool operator!=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        346  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        347      bool operator<(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        348  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        349      bool operator<=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        350  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        351      bool operator>(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        352  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        353      bool operator>=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        354  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        355  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        356      bool operator==(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        357  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        358      bool operator==(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        359  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        360      bool operator!=(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        361  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        362      bool operator!=(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        363  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        364  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        365      bool operator<(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        366  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        367      bool operator<(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        368  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        369      bool operator<=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        370  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        371      bool operator<=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        372  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        373      bool operator>(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        374  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        375      bool operator>(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        376  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        377      bool operator>=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        378  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        379      bool operator>=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        380  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        381  class bad_weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        382      : public std::exception
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        383  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        384      bad_weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        385  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        386  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        387  template<class T, class... Args> unique_ptr<T> make_unique(Args&&... args);     // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        388  template<class T>                unique_ptr<T> make_unique(size_t n);           // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        389  template<class T, class... Args> unspecified   make_unique(Args&&...) = delete; // C++14, T == U[N]
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        390  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        391  template<class E, class T, class Y, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        392      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, unique_ptr<Y, D> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        393  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        394  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        395  class shared_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        396  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        397  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        398      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        399      typedef weak_ptr<T> weak_type; // C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        400  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        401      // constructors:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        402      constexpr shared_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        403      template<class Y> explicit shared_ptr(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        404      template<class Y, class D> shared_ptr(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        405      template<class Y, class D, class A> shared_ptr(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        406      template <class D> shared_ptr(nullptr_t p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        407      template <class D, class A> shared_ptr(nullptr_t p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        408      template<class Y> shared_ptr(const shared_ptr<Y>& r, T *p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        409      shared_ptr(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        410      template<class Y> shared_ptr(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        411      shared_ptr(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        412      template<class Y> shared_ptr(shared_ptr<Y>&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        413      template<class Y> explicit shared_ptr(const weak_ptr<Y>& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        414      template<class Y> shared_ptr(auto_ptr<Y>&& r);          // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        415      template <class Y, class D> shared_ptr(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        416      shared_ptr(nullptr_t) : shared_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        417  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        418      // destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        419      ~shared_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        420  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        421      // assignment:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        422      shared_ptr& operator=(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        423      template<class Y> shared_ptr& operator=(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        424      shared_ptr& operator=(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        425      template<class Y> shared_ptr& operator=(shared_ptr<Y>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        426      template<class Y> shared_ptr& operator=(auto_ptr<Y>&& r); // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        427      template <class Y, class D> shared_ptr& operator=(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        428  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        429      // modifiers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        430      void swap(shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        431      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        432      template<class Y> void reset(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        433      template<class Y, class D> void reset(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        434      template<class Y, class D, class A> void reset(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        435  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        436      // observers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        437      T* get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        438      T& operator*() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        439      T* operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        440      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        441      bool unique() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        442      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        443      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        444      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        445  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        446  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        447  // shared_ptr comparisons:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        448  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        449      bool operator==(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        450  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        451      bool operator!=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        452  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        453      bool operator<(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        454  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        455      bool operator>(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        456  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        457      bool operator<=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        458  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        459      bool operator>=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        460  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        461  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        462      bool operator==(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        463  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        464      bool operator==(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        465  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        466      bool operator!=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        467  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        468      bool operator!=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        469  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        470      bool operator<(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        471  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        472  bool operator<(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        473  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        474      bool operator<=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        475  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        476      bool operator<=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        477  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        478      bool operator>(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        479  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        480      bool operator>(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        481  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        482      bool operator>=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        483  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        484      bool operator>=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        485  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        486  // shared_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        487  template<class T> void swap(shared_ptr<T>& a, shared_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        488  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        489  // shared_ptr casts:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        490  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        491      shared_ptr<T> static_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        492  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        493      shared_ptr<T> dynamic_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        494  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        495      shared_ptr<T> const_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        496  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        497  // shared_ptr I/O:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        498  template<class E, class T, class Y>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        499      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, shared_ptr<Y> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        500  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        501  // shared_ptr get_deleter:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        502  template<class D, class T> D* get_deleter(shared_ptr<T> const& p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        504  template<class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        505      shared_ptr<T> make_shared(Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        506  template<class T, class A, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        507      shared_ptr<T> allocate_shared(const A& a, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        508  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        509  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        510  class weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        511  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        512  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        513      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        514  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        515      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        516      constexpr weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        517      template<class Y> weak_ptr(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        518      weak_ptr(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        519      template<class Y> weak_ptr(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        520      weak_ptr(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        521      template<class Y> weak_ptr(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        522  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        523      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        524      ~weak_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        525  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        526      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        527      weak_ptr& operator=(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        528      template<class Y> weak_ptr& operator=(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        529      template<class Y> weak_ptr& operator=(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        530      weak_ptr& operator=(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        531      template<class Y> weak_ptr& operator=(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        532  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        533      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        534      void swap(weak_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        535      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        536  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        537      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        538      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        539      bool expired() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        540      shared_ptr<T> lock() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        541      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        542      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        543  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        544  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        545  // weak_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        546  template<class T> void swap(weak_ptr<T>& a, weak_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        547  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        548  // class owner_less:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        549  template<class T> struct owner_less;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        550  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        551  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        552  struct owner_less<shared_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        553      : binary_function<shared_ptr<T>, shared_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        554  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        555      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        556      bool operator()(shared_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        557      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        558      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        559  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        560  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        561  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        562  struct owner_less<weak_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        563      : binary_function<weak_ptr<T>, weak_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        564  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        565      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        566      bool operator()(weak_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        567      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        568      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        569  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        570  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        571  template <>  // Added in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        572  struct owner_less<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        573  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        574      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        575      bool operator()( shared_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        576      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        577      bool operator()( shared_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        578      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        579      bool operator()(   weak_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        580      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        581      bool operator()(   weak_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        582  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        583      typedef void is_transparent;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        584  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        585  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        586  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        587  class enable_shared_from_this
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        588  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        589  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        590      constexpr enable_shared_from_this() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        591      enable_shared_from_this(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        592      enable_shared_from_this& operator=(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        593      ~enable_shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        594  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        595      shared_ptr<T> shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        596      shared_ptr<T const> shared_from_this() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        597  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        598  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        599  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        600      bool atomic_is_lock_free(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        601  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        602      shared_ptr<T> atomic_load(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        603  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        604      shared_ptr<T> atomic_load_explicit(const shared_ptr<T>* p, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        605  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        606      void atomic_store(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        607  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        608      void atomic_store_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        609  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        610      shared_ptr<T> atomic_exchange(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        611  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        612      shared_ptr<T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        613      atomic_exchange_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        614  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        615      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        616      atomic_compare_exchange_weak(shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        617  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        618      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        619      atomic_compare_exchange_strong( shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        620  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        621      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        622      atomic_compare_exchange_weak_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        623                                            shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        624                                            memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        625  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        626      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        627      atomic_compare_exchange_strong_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        628                                              shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        629                                              memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        630  // Hash support
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        631  template <class T> struct hash;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        632  template <class T, class D> struct hash<unique_ptr<T, D> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        633  template <class T> struct hash<shared_ptr<T> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        634  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        635  template <class T, class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        636    inline constexpr bool uses_allocator_v = uses_allocator<T, Alloc>::value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        637  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        638  // Pointer safety
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        639  enum class pointer_safety { relaxed, preferred, strict };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        640  void declare_reachable(void *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        641  template <class T> T *undeclare_reachable(T *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        642  void declare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        643  void undeclare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        644  pointer_safety get_pointer_safety() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        645  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        646  void* align(size_t alignment, size_t size, void*& ptr, size_t& space);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        647  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        648  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        649  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        650  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        651  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        652  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        653  #include <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        654  #include <typeinfo>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        655  #include <cstddef>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        656  #include <cstdint>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        657  #include <new>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        658  #include <utility>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        659  #include <limits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        660  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        661  #include <__functional_base>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        662  #include <iosfwd>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        663  #include <tuple>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        664  #include <stdexcept>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        665  #include <cstring>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        666  #include <cassert>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        667  #if !defined(_LIBCPP_HAS_NO_ATOMIC_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        668  #  include <atomic>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        669  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        670  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        671  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        672  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        673  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        674  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        675  _LIBCPP_PUSH_MACROS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        676  #include <__undef_macros>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        677  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        678  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        679  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        680  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        681  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        682  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        683  _ValueType __libcpp_relaxed_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        684  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        685      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        686  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        687      defined(__ATOMIC_RELAXED) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        688      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        689      return __atomic_load_n(__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        690  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        691      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        692  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        693  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        694  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        695  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        696  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        697  _ValueType __libcpp_acquire_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        698  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        699      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        700  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        701      defined(__ATOMIC_ACQUIRE) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        702      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        703      return __atomic_load_n(__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        704  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        705      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        706  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        707  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        708  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        709  // addressof moved to <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        710  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        711  template <class _Tp> class allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        712  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        713  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        714  class _LIBCPP_TEMPLATE_VIS allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        715  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        716  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        717      typedef void*             pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        718      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        719      typedef void              value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        720  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        721      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        722  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        723  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        724  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        725  class _LIBCPP_TEMPLATE_VIS allocator<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        726  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        727  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        728      typedef const void*       pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        729      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        730      typedef const void        value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        731  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        732      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        733  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        734  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        735  // pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        736  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        737  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        738  struct __has_element_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        739  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        740  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        741  struct __has_element_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        742                typename __void_t<typename _Tp::element_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        743  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        744  template <class _Ptr, bool = __has_element_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        745  struct __pointer_traits_element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        746  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        747  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        748  struct __pointer_traits_element_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        750      typedef typename _Ptr::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        751  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        753  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        754  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        755  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        756  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        757  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        758      typedef typename _Sp<_Tp, _Args...>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        759  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        760  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        761  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        762  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        763  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        764      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        765  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        766  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        767  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        768  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        769  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        770  struct __pointer_traits_element_type<_Sp<_Tp>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        771  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        772      typedef typename _Sp<_Tp>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        773  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        774  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        775  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        776  struct __pointer_traits_element_type<_Sp<_Tp>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        777  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        778      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        779  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        780  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        781  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        782  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        783  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        784      typedef typename _Sp<_Tp, _A0>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        785  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        786  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        787  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        788  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        790      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        791  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        793  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        794  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        795  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        796      typedef typename _Sp<_Tp, _A0, _A1>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        797  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        798  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        799  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        800  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        801  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        802      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        803  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        804  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        805  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        806                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        807  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        808  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        809      typedef typename _Sp<_Tp, _A0, _A1, _A2>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        810  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        811  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        812  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        813                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        814  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        815  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        816      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        817  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        818  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        819  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        820  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        821  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        822  struct __has_difference_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        823  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        824  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        825  struct __has_difference_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        826              typename __void_t<typename _Tp::difference_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        827  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        828  template <class _Ptr, bool = __has_difference_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        829  struct __pointer_traits_difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        830  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        831      typedef ptrdiff_t type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        832  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        833  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        834  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        835  struct __pointer_traits_difference_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        836  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        837      typedef typename _Ptr::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        838  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        839  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        840  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        841  struct __has_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        842  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        843  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        844      struct __two {char __lx; char __lxx;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        845      template <class _Xp> static __two __test(...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        846      template <class _Xp> static char __test(typename _Xp::template rebind<_Up>* = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        847  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        848      static const bool value = sizeof(__test<_Tp>(0)) == 1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        849  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        850  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        851  template <class _Tp, class _Up, bool = __has_rebind<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        852  struct __pointer_traits_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        853  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        854  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        855      typedef typename _Tp::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        856  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        857      typedef typename _Tp::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        858  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        859  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        860  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        861  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        862  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        863  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        864  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        865  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        866  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        867      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        868  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        869      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        870  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        871  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        872  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        873  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        874  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        875  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        876      typedef _Sp<_Up, _Args...> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        877  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        878  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        879  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        880  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        881  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        882  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        883  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        884  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        885      typedef typename _Sp<_Tp>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        886  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        887      typedef typename _Sp<_Tp>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        888  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        889  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        890  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        891  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        892  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        893  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        894      typedef _Sp<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        895  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        896  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        897  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        898  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        899  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        900  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        901      typedef typename _Sp<_Tp, _A0>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        902  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        903      typedef typename _Sp<_Tp, _A0>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        904  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        905  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        906  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        907  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        908  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        909  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        910      typedef _Sp<_Up, _A0> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        911  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        912  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        913  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        914                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        915  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        916  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        917  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        918      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        919  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        920      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        921  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        922  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        923  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        924  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        925                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        926  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        927  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        928      typedef _Sp<_Up, _A0, _A1> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        929  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        930  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        931  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        932                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        933  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        934  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        935  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        936      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        937  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        938      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        939  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        940  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        941  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        942  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        943                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        944  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        945  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        946      typedef _Sp<_Up, _A0, _A1, _A2> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        947  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        948  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        949  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        950  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        951  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        952  struct _LIBCPP_TEMPLATE_VIS pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        953  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        954      typedef _Ptr                                                     pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        955      typedef typename __pointer_traits_element_type<pointer>::type    element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        956      typedef typename __pointer_traits_difference_type<pointer>::type difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        957  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        958  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        959      template <class _Up> using rebind = typename __pointer_traits_rebind<pointer, _Up>::type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        960  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        961      template <class _Up> struct rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        962          {typedef typename __pointer_traits_rebind<pointer, _Up>::type other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        963  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        964  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        965  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        966      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        967  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        968      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        969      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        970                                             __nat, element_type>::type& __r)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        971          {return pointer::pointer_to(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        972  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        973  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        974  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        975  struct _LIBCPP_TEMPLATE_VIS pointer_traits<_Tp*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        976  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        977      typedef _Tp*      pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        978      typedef _Tp       element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        979      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        980  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        981  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        982      template <class _Up> using rebind = _Up*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        983  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        984      template <class _Up> struct rebind {typedef _Up* other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        985  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        986  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        987  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        988      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        989  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        990      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        991      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        992                                        __nat, element_type>::type& __r) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        993          {return _VSTD::addressof(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        994  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        996  template <class _From, class _To>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        997  struct __rebind_pointer {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        998  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        999      typedef typename pointer_traits<_From>::template rebind<_To>        type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1000  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1001      typedef typename pointer_traits<_From>::template rebind<_To>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1002  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1003  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1004  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1005  // allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1006  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1007  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1008  struct __has_pointer_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1009  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1010  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1011  struct __has_pointer_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1012            typename __void_t<typename _Tp::pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1013  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1014  namespace __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1015  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1016  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1017  template <class _Tp, class _Dp, bool = __has_pointer_type<_Dp>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1018  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1019  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1020      typedef typename _Dp::pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1021  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1022  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1023  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1024  struct __pointer_type<_Tp, _Dp, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1025  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1026      typedef _Tp* type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1027  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1028  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1029  }  // __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1030  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1031  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1032  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1033  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1034      typedef typename __pointer_type_imp::__pointer_type<_Tp, typename remove_reference<_Dp>::type>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1035  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1036  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1037  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1038  struct __has_const_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1039  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1040  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1041  struct __has_const_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1042              typename __void_t<typename _Tp::const_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1043  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1044  template <class _Tp, class _Ptr, class _Alloc, bool = __has_const_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1045  struct __const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1046  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1047      typedef typename _Alloc::const_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1048  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1049  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1050  template <class _Tp, class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1051  struct __const_pointer<_Tp, _Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1052  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1053  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1054      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1055  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1056      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1057  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1058  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1059  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1060  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1061  struct __has_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1062  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1063  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1064  struct __has_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1065                 typename __void_t<typename _Tp::void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1066  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1067  template <class _Ptr, class _Alloc, bool = __has_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1068  struct __void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1069  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1070      typedef typename _Alloc::void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1071  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1072  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1073  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1074  struct __void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1075  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1076  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1077      typedef typename pointer_traits<_Ptr>::template rebind<void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1078  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1079      typedef typename pointer_traits<_Ptr>::template rebind<void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1080  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1081  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1082  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1083  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1084  struct __has_const_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1085  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1086  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1087  struct __has_const_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1088              typename __void_t<typename _Tp::const_void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1089  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1090  template <class _Ptr, class _Alloc, bool = __has_const_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1091  struct __const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1092  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1093      typedef typename _Alloc::const_void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1094  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1095  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1096  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1097  struct __const_void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1098  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1099  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1100      typedef typename pointer_traits<_Ptr>::template rebind<const void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1101  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1102      typedef typename pointer_traits<_Ptr>::template rebind<const void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1103  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1104  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1105  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1106  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1107  inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1108  _Tp*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1109  __to_raw_pointer(_Tp* __p) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1110  {
        ld.a    a15,[a10]1180
        st.a    [a10]2620,a15
        mov     d15,#6
        st.b    [a10]2624,d15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1111      return __p;
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2620
        st.a    [a15],a2

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1111      return __p;      (inlined)
        j       .L48

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1112  }      (inlined)
.L48:
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]1264
        st.a    [a15],a2
        ld.a    a15,[a12]
        ld.w    d15,[a15]48
        mov.a   a15,d15
        mov.aa  a4,a12
        mov     d4,d10
        calli   a15
        jeq     d2,d10,.L49

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1435          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1436              __s.__sbuf_ = nullptr;
        mov.a   a12,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1437              return __s;
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d15,#65535
        st.h    [a15],d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]3796,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3796
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3800,d15
        lea     a15,[a10]3796
        st.a    [a10]2788,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2788
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2792,d15
        lea     a15,[a10]2788
        st.a    [a10]2704,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2704
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2708,d15
        lea     a15,[a10]2704
        st.a    [a10]2620,a15
        mov     d15,#6
        st.b    [a10]2624,d15
        lea     a15,[a10]2608
        movh.a  a2,#@his(__curr_eh_stack_entry)
        lea     a2,[a2]@los(__curr_eh_stack_entry)
        ld.a    a4,[a10]2704
        st.a    [a2],a4
        ld.bu   d15,[a15]
        and     d15,#1
        ne      d15,d15,#0
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2788
        st.a    [a15],a2
        jeq     d15,#0,.L50
        ld.a    a15,[a10]2788
        st.a    [a10]3040,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3040
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3044,d15
        lea     a15,[a10]3040
        st.a    [a10]2956,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2956
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2960,d15
        lea     a15,[a10]2956
        st.a    [a10]2872,a15
        mov     d15,#6
        st.b    [a10]2876,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]3040
        st.a    [a15],a2
        ld.a    a15,[a10]3040
        st.a    [a10]3292,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3292
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3296,d15
        lea     a15,[a10]3292
        st.a    [a10]3208,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3208
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3212,d15
        lea     a15,[a10]3208
        st.a    [a10]3124,a15
        mov     d15,#6
        st.b    [a10]3128,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]3208
        st.a    [a15],a2
        ld.a    a4,[a10]2616
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]3292
        st.a    [a15],a2
        ld.a    a15,[a10]3292
        st.a    [a10]3544,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3544
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3548,d15
        lea     a15,[a10]3544
        st.a    [a10]3460,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3460
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3464,d15
        lea     a15,[a10]3460
        st.a    [a10]3376,a15
        mov     d15,#6
        st.b    [a10]3380,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]3460
        st.a    [a15],a2
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]3544
        st.a    [a15],a2
        ld.a    a15,[a10]3544
        st.a    [a10]3712,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3712
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3716,d15
        lea     a15,[a10]3712
        st.a    [a10]3628,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]3628
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]3632,d15
        call    _ZdlPv
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]3628
        st.a    [a15],a2
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]3712
        st.a    [a15],a2
.L50:
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a10]24
        st.h    [a15],d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]4
        st.a    [a15],a2
        mov.d   d2,a12
        j       .L51
.L49:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1438          }
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        mov.u   d15,#65535
        st.h    [a15],d15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1439      }
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10]2524,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2524
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2528,d15
        lea     a15,[a10]2524
        st.a    [a10]1516,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1516
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1520,d15
        lea     a15,[a10]1516
        st.a    [a10]1432,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1432
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1436,d15
        lea     a15,[a10]1432
        st.a    [a10]1348,a15
        mov     d15,#6
        st.b    [a10]1352,d15
        lea     a15,[a10]2608
        movh.a  a2,#@his(__curr_eh_stack_entry)
        lea     a2,[a2]@los(__curr_eh_stack_entry)
        ld.a    a4,[a10]1432
        st.a    [a2],a4
        ld.bu   d15,[a15]
        and     d15,#1
        ne      d15,d15,#0
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]1516
        st.a    [a15],a2
        jeq     d15,#0,.L52
        ld.a    a15,[a10]1516
        st.a    [a10]1768,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1768
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1772,d15
        lea     a15,[a10]1768
        st.a    [a10]1684,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1684
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1688,d15
        lea     a15,[a10]1684
        st.a    [a10]1600,a15
        mov     d15,#6
        st.b    [a10]1604,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]1768
        st.a    [a15],a2
        ld.a    a15,[a10]1768
        st.a    [a10]2020,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2020
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2024,d15
        lea     a15,[a10]2020
        st.a    [a10]1936,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]1936
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]1940,d15
        lea     a15,[a10]1936
        st.a    [a10]1852,a15
        mov     d15,#6
        st.b    [a10]1856,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]1936
        st.a    [a15],a2
        ld.a    a4,[a10]2616
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2020
        st.a    [a15],a2
        ld.a    a15,[a10]2020
        st.a    [a10]2272,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2272
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2276,d15
        lea     a15,[a10]2272
        st.a    [a10]2188,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2188
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2192,d15
        lea     a15,[a10]2188
        st.a    [a10]2104,a15
        mov     d15,#6
        st.b    [a10]2108,d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2188
        st.a    [a15],a2
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2272
        st.a    [a15],a2
        ld.a    a15,[a10]2272
        st.a    [a10]2440,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2440
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2444,d15
        lea     a15,[a10]2440
        st.a    [a10]2356,a15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        lea     a2,[a10]2356
        st.a    [a15],a2
        mov     d15,#6
        st.b    [a10]2360,d15
        call    _ZdlPv
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2356
        st.a    [a15],a2
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2440
        st.a    [a15],a2
.L52:
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]2524
        st.a    [a15],a2
.L45:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1440      __np = __oe - __op;
        sub.a   a15,a14,a13
        mov.d   d8,a15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1441      if (__np > 0)
        jlt     d8,#1,.L53

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1442      {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1443          if (__s.__sbuf_->sputn(__op, __np) != __np)
        ld.a    a15,[a12]
        ld.w    d15,[a15]48
        mov.a   a15,d15
        mov.aa  a4,a12
        mov.aa  a5,a13
        mov     d4,d8
        calli   a15
        jeq     d2,d8,.L54

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1444          {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1445              __s.__sbuf_ = nullptr;
        mov.a   a15,#0

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1446              return __s;
        movh.a  a2,#@his(__eh_curr_region)
        lea     a2,[a2]@los(__eh_curr_region)
        ld.hu   d15,[a10]24
        st.h    [a2],d15
        movh.a  a2,#@his(__curr_eh_stack_entry)
        lea     a2,[a2]@los(__curr_eh_stack_entry)
        ld.a    a4,[a10]4
        st.a    [a2],a4
        mov.d   d2,a15
        j       .L55
.L54:
.L53:

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1447          }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1448      }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1449      __iob.width(0);
        mov     d15,#0
        ld.a    a15,[a10]3880
        st.w    [a15]12,d15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1450      return __s;
        movh.a  a15,#@his(__eh_curr_region)
        lea     a15,[a15]@los(__eh_curr_region)
        ld.hu   d15,[a10]24
        st.h    [a15],d15
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]4
        st.a    [a15],a2
        mov.d   d2,a12
        j       .L56

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\locale       1451  }
.L56:
.L55:
.L51:
.L44:
.L39:
        ret

___ZSt16__pad_and_outputIcSt11char_traitsIcEESt19ostreambuf_iteratorIT_T0_ES5_PKS3_S7_S7_RSt8ios_baseS3__function_end:
        ; End of function

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          1  // -*- C++ -*-
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          2  //===-------------------------- memory ------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          3  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          4  //                     The LLVM Compiler Infrastructure
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          5  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          6  // This file is dual licensed under the MIT and the University of Illinois Open
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          7  // Source Licenses. See LICENSE.TXT for details.
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          8  //
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory          9  //===----------------------------------------------------------------------===//
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         10  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         11  #ifndef _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         12  #define _LIBCPP_MEMORY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         13  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         14  /*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         15      memory synopsis
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         16  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         17  namespace std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         18  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         19  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         20  struct allocator_arg_t { };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         21  inline constexpr allocator_arg_t allocator_arg = allocator_arg_t();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         22  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         23  template <class T, class Alloc> struct uses_allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         24  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         25  template <class Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         26  struct pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         27  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         28      typedef Ptr pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         29      typedef <details> element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         30      typedef <details> difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         31  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         32      template <class U> using rebind = <details>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         33  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         34      static pointer pointer_to(<details>);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         35  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         36  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         37  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         38  struct pointer_traits<T*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         39  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         40      typedef T* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         41      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         42      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         43  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         44      template <class U> using rebind = U*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         45  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         46      static pointer pointer_to(<details>) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         47  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         48  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         49  template <class T> constexpr T* to_address(T* p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         50  template <class Ptr> auto to_address(const Ptr& p) noexcept; // C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         51  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         52  template <class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         53  struct allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         54  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         55      typedef Alloc                        allocator_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         56      typedef typename allocator_type::value_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         57                                           value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         58  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         59      typedef Alloc::pointer | value_type* pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         60      typedef Alloc::const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         61            | pointer_traits<pointer>::rebind<const value_type>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         62                                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         63      typedef Alloc::void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         64            | pointer_traits<pointer>::rebind<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         65                                           void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         66      typedef Alloc::const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         67            | pointer_traits<pointer>::rebind<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         68                                           const_void_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         69      typedef Alloc::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         70            | pointer_traits<pointer>::difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         71                                           difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         72      typedef Alloc::size_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         73            | make_unsigned<difference_type>::type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         74                                           size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         75      typedef Alloc::propagate_on_container_copy_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         76            | false_type                   propagate_on_container_copy_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         77      typedef Alloc::propagate_on_container_move_assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         78            | false_type                   propagate_on_container_move_assignment;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         79      typedef Alloc::propagate_on_container_swap
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         80            | false_type                   propagate_on_container_swap;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         81      typedef Alloc::is_always_equal
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         82            | is_empty                     is_always_equal;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         83  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         84      template <class T> using rebind_alloc  = Alloc::rebind<U>::other | Alloc<T, Args...>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         85      template <class T> using rebind_traits = allocator_traits<rebind_alloc<T>>;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         86  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         87      static pointer allocate(allocator_type& a, size_type n);                          // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         88      static pointer allocate(allocator_type& a, size_type n, const_void_pointer hint); // [[nodiscard]] in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         89  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         90      static void deallocate(allocator_type& a, pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         91  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         92      template <class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         93          static void construct(allocator_type& a, T* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         94  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         95      template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         96          static void destroy(allocator_type& a, T* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         97  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         98      static size_type max_size(const allocator_type& a); // noexcept in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory         99  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        100      static allocator_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        101          select_on_container_copy_construction(const allocator_type& a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        102  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        103  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        104  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        105  class allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        106  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        107  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        108      typedef void*                                 pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        109      typedef const void*                           const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        110      typedef void                                  value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        111  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        112      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        113  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        114  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        115  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        116  class allocator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        117  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        118  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        119      typedef size_t                                size_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        120      typedef ptrdiff_t                             difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        121      typedef T*                                    pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        122      typedef const T*                              const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        123      typedef typename add_lvalue_reference<T>::type       reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        124      typedef typename add_lvalue_reference<const T>::type const_reference;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        125      typedef T                                     value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        126  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        127      template <class U> struct rebind {typedef allocator<U> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        128  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        129      constexpr allocator() noexcept;                      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        130      constexpr allocator(const allocator&) noexcept;      // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        131      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        132        constexpr allocator(const allocator<U>&) noexcept; // constexpr in C++20
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        133      ~allocator();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        134      pointer address(reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        135      const_pointer address(const_reference x) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        136      pointer allocate(size_type, allocator<void>::const_pointer hint = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        137      void deallocate(pointer p, size_type n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        138      size_type max_size() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        139      template<class U, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        140          void construct(U* p, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        141      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        142          void destroy(U* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        143  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        144  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        145  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        146  bool operator==(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        147  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        148  template <class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        149  bool operator!=(const allocator<T>&, const allocator<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        150  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        151  template <class OutputIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        152  class raw_storage_iterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        153      : public iterator<output_iterator_tag,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        154                        T,                               // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        155                        ptrdiff_t,                       // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        156                        T*,                              // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        157                        raw_storage_iterator&>           // purposefully not C++03
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        158  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        159  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        160      explicit raw_storage_iterator(OutputIterator x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        161      raw_storage_iterator& operator*();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        162      raw_storage_iterator& operator=(const T& element);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        163      raw_storage_iterator& operator++();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        164      raw_storage_iterator  operator++(int);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        165  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        166  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        167  template <class T> pair<T*,ptrdiff_t> get_temporary_buffer(ptrdiff_t n) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        168  template <class T> void               return_temporary_buffer(T* p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        169  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        170  template <class T> T* addressof(T& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        171  template <class T> T* addressof(const T&& r) noexcept = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        172  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        173  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        174  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        175  uninitialized_copy(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        176  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        177  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        178  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        179  uninitialized_copy_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        180  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        181  template <class ForwardIterator, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        182  void uninitialized_fill(ForwardIterator first, ForwardIterator last, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        183  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        184  template <class ForwardIterator, class Size, class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        185  ForwardIterator
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        186  uninitialized_fill_n(ForwardIterator first, Size n, const T& x);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        187  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        188  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        189  void destroy_at(T* location);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        190  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        191  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        192   void destroy(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        193  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        194  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        195   ForwardIterator destroy_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        196  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        197  template <class InputIterator, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        198   ForwardIterator uninitialized_move(InputIterator first, InputIterator last, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        199  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        200  template <class InputIterator, class Size, class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        201   pair<InputIterator,ForwardIterator> uninitialized_move_n(InputIterator first, Size n, ForwardIterator result);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        202  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        203  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        204   void uninitialized_value_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        205  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        206  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        207   ForwardIterator uninitialized_value_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        208  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        209  template <class ForwardIterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        210   void uninitialized_default_construct(ForwardIterator first, ForwardIterator last);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        211  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        212  template <class ForwardIterator, class Size>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        213   ForwardIterator uninitialized_default_construct_n(ForwardIterator first, Size n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        214  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        215  template <class Y> struct auto_ptr_ref {};      // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        216  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        217  template<class X>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        218  class auto_ptr                                  // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        219  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        220  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        221      typedef X element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        222  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        223      explicit auto_ptr(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        224      auto_ptr(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        225      template<class Y> auto_ptr(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        226      auto_ptr& operator=(auto_ptr&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        227      template<class Y> auto_ptr& operator=(auto_ptr<Y>&) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        228      auto_ptr& operator=(auto_ptr_ref<X> r) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        229      ~auto_ptr() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        230  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        231      typename add_lvalue_reference<X>::type operator*() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        232      X* operator->() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        233      X* get() const throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        234      X* release() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        235      void reset(X* p =0) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        236  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        237      auto_ptr(auto_ptr_ref<X>) throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        238      template<class Y> operator auto_ptr_ref<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        239      template<class Y> operator auto_ptr<Y>() throw();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        240  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        241  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        242  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        243  struct default_delete
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        244  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        245      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        246      template <class U> default_delete(const default_delete<U>&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        247  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        248      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        249  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        250  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        251  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        252  struct default_delete<T[]>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        253  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        254      constexpr default_delete() noexcept = default;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        255      void operator()(T*) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        256      template <class U> void operator()(U*) const = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        257  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        258  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        259  template <class T, class D = default_delete<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        260  class unique_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        261  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        262  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        263      typedef see below pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        264      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        265      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        266  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        267      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        268      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        269      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        270      unique_ptr(pointer p, see below d1) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        271      unique_ptr(pointer p, see below d2) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        272      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        273      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        274      template <class U, class E>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        275          unique_ptr(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        276      template <class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        277          unique_ptr(auto_ptr<U>&& u) noexcept;       // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        278  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        279      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        280      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        281  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        282      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        283      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        284      template <class U, class E> unique_ptr& operator=(unique_ptr<U, E>&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        285      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        286  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        287      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        288      typename add_lvalue_reference<T>::type operator*() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        289      pointer operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        290      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        291      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        292      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        293      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        294  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        295      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        296      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        297      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        298      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        299  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        300  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        301  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        302  class unique_ptr<T[], D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        303  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        304  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        305      typedef implementation-defined pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        306      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        307      typedef D deleter_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        308  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        309      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        310      constexpr unique_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        311      explicit unique_ptr(pointer p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        312      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        313      unique_ptr(pointer p, see below d) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        314      unique_ptr(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        315      unique_ptr(nullptr_t) noexcept : unique_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        316  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        317      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        318      ~unique_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        319  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        320      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        321      unique_ptr& operator=(unique_ptr&& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        322      unique_ptr& operator=(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        323  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        324      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        325      T& operator[](size_t i) const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        326      pointer get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        327      deleter_type& get_deleter() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        328      const deleter_type& get_deleter() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        329      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        330  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        331      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        332      pointer release() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        333      void reset(pointer p = pointer()) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        334      void reset(nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        335      template <class U> void reset(U) = delete;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        336      void swap(unique_ptr& u) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        337  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        338  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        339  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        340      void swap(unique_ptr<T, D>& x, unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        341  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        342  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        343      bool operator==(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        344  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        345      bool operator!=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        346  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        347      bool operator<(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        348  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        349      bool operator<=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        350  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        351      bool operator>(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        352  template <class T1, class D1, class T2, class D2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        353      bool operator>=(const unique_ptr<T1, D1>& x, const unique_ptr<T2, D2>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        354  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        355  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        356      bool operator==(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        357  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        358      bool operator==(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        359  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        360      bool operator!=(const unique_ptr<T, D>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        361  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        362      bool operator!=(nullptr_t, const unique_ptr<T, D>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        363  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        364  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        365      bool operator<(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        366  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        367      bool operator<(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        368  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        369      bool operator<=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        370  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        371      bool operator<=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        372  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        373      bool operator>(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        374  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        375      bool operator>(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        376  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        377      bool operator>=(const unique_ptr<T, D>& x, nullptr_t);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        378  template <class T, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        379      bool operator>=(nullptr_t, const unique_ptr<T, D>& y);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        380  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        381  class bad_weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        382      : public std::exception
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        383  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        384      bad_weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        385  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        386  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        387  template<class T, class... Args> unique_ptr<T> make_unique(Args&&... args);     // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        388  template<class T>                unique_ptr<T> make_unique(size_t n);           // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        389  template<class T, class... Args> unspecified   make_unique(Args&&...) = delete; // C++14, T == U[N]
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        390  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        391  template<class E, class T, class Y, class D>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        392      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, unique_ptr<Y, D> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        393  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        394  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        395  class shared_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        396  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        397  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        398      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        399      typedef weak_ptr<T> weak_type; // C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        400  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        401      // constructors:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        402      constexpr shared_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        403      template<class Y> explicit shared_ptr(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        404      template<class Y, class D> shared_ptr(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        405      template<class Y, class D, class A> shared_ptr(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        406      template <class D> shared_ptr(nullptr_t p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        407      template <class D, class A> shared_ptr(nullptr_t p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        408      template<class Y> shared_ptr(const shared_ptr<Y>& r, T *p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        409      shared_ptr(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        410      template<class Y> shared_ptr(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        411      shared_ptr(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        412      template<class Y> shared_ptr(shared_ptr<Y>&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        413      template<class Y> explicit shared_ptr(const weak_ptr<Y>& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        414      template<class Y> shared_ptr(auto_ptr<Y>&& r);          // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        415      template <class Y, class D> shared_ptr(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        416      shared_ptr(nullptr_t) : shared_ptr() { }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        417  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        418      // destructor:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        419      ~shared_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        420  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        421      // assignment:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        422      shared_ptr& operator=(const shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        423      template<class Y> shared_ptr& operator=(const shared_ptr<Y>& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        424      shared_ptr& operator=(shared_ptr&& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        425      template<class Y> shared_ptr& operator=(shared_ptr<Y>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        426      template<class Y> shared_ptr& operator=(auto_ptr<Y>&& r); // removed in C++17
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        427      template <class Y, class D> shared_ptr& operator=(unique_ptr<Y, D>&& r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        428  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        429      // modifiers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        430      void swap(shared_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        431      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        432      template<class Y> void reset(Y* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        433      template<class Y, class D> void reset(Y* p, D d);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        434      template<class Y, class D, class A> void reset(Y* p, D d, A a);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        435  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        436      // observers:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        437      T* get() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        438      T& operator*() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        439      T* operator->() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        440      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        441      bool unique() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        442      explicit operator bool() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        443      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        444      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        445  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        446  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        447  // shared_ptr comparisons:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        448  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        449      bool operator==(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        450  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        451      bool operator!=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        452  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        453      bool operator<(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        454  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        455      bool operator>(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        456  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        457      bool operator<=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        458  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        459      bool operator>=(shared_ptr<T> const& a, shared_ptr<U> const& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        460  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        461  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        462      bool operator==(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        463  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        464      bool operator==(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        465  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        466      bool operator!=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        467  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        468      bool operator!=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        469  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        470      bool operator<(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        471  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        472  bool operator<(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        473  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        474      bool operator<=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        475  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        476      bool operator<=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        477  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        478      bool operator>(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        479  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        480      bool operator>(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        481  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        482      bool operator>=(const shared_ptr<T>& x, nullptr_t) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        483  template <class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        484      bool operator>=(nullptr_t, const shared_ptr<T>& y) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        485  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        486  // shared_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        487  template<class T> void swap(shared_ptr<T>& a, shared_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        488  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        489  // shared_ptr casts:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        490  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        491      shared_ptr<T> static_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        492  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        493      shared_ptr<T> dynamic_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        494  template<class T, class U>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        495      shared_ptr<T> const_pointer_cast(shared_ptr<U> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        496  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        497  // shared_ptr I/O:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        498  template<class E, class T, class Y>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        499      basic_ostream<E, T>& operator<< (basic_ostream<E, T>& os, shared_ptr<Y> const& p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        500  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        501  // shared_ptr get_deleter:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        502  template<class D, class T> D* get_deleter(shared_ptr<T> const& p) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        503  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        504  template<class T, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        505      shared_ptr<T> make_shared(Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        506  template<class T, class A, class... Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        507      shared_ptr<T> allocate_shared(const A& a, Args&&... args);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        508  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        509  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        510  class weak_ptr
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        511  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        512  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        513      typedef T element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        514  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        515      // constructors
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        516      constexpr weak_ptr() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        517      template<class Y> weak_ptr(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        518      weak_ptr(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        519      template<class Y> weak_ptr(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        520      weak_ptr(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        521      template<class Y> weak_ptr(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        522  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        523      // destructor
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        524      ~weak_ptr();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        525  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        526      // assignment
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        527      weak_ptr& operator=(weak_ptr const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        528      template<class Y> weak_ptr& operator=(weak_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        529      template<class Y> weak_ptr& operator=(shared_ptr<Y> const& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        530      weak_ptr& operator=(weak_ptr&& r) noexcept;                      // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        531      template<class Y> weak_ptr& operator=(weak_ptr<Y>&& r) noexcept; // C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        532  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        533      // modifiers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        534      void swap(weak_ptr& r) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        535      void reset() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        536  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        537      // observers
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        538      long use_count() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        539      bool expired() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        540      shared_ptr<T> lock() const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        541      template<class U> bool owner_before(shared_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        542      template<class U> bool owner_before(weak_ptr<U> const& b) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        543  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        544  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        545  // weak_ptr specialized algorithms:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        546  template<class T> void swap(weak_ptr<T>& a, weak_ptr<T>& b) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        547  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        548  // class owner_less:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        549  template<class T> struct owner_less;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        550  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        551  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        552  struct owner_less<shared_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        553      : binary_function<shared_ptr<T>, shared_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        554  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        555      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        556      bool operator()(shared_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        557      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        558      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        559  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        560  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        561  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        562  struct owner_less<weak_ptr<T>>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        563      : binary_function<weak_ptr<T>, weak_ptr<T>, bool>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        564  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        565      typedef bool result_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        566      bool operator()(weak_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        567      bool operator()(shared_ptr<T> const&, weak_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        568      bool operator()(weak_ptr<T> const&, shared_ptr<T> const&) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        569  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        570  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        571  template <>  // Added in C++14
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        572  struct owner_less<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        573  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        574      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        575      bool operator()( shared_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        576      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        577      bool operator()( shared_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        578      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        579      bool operator()(   weak_ptr<_Tp> const& __x, shared_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        580      template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        581      bool operator()(   weak_ptr<_Tp> const& __x,   weak_ptr<_Up> const& __y) const noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        582  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        583      typedef void is_transparent;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        584  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        585  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        586  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        587  class enable_shared_from_this
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        588  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        589  protected:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        590      constexpr enable_shared_from_this() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        591      enable_shared_from_this(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        592      enable_shared_from_this& operator=(enable_shared_from_this const&) noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        593      ~enable_shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        594  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        595      shared_ptr<T> shared_from_this();
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        596      shared_ptr<T const> shared_from_this() const;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        597  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        598  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        599  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        600      bool atomic_is_lock_free(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        601  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        602      shared_ptr<T> atomic_load(const shared_ptr<T>* p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        603  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        604      shared_ptr<T> atomic_load_explicit(const shared_ptr<T>* p, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        605  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        606      void atomic_store(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        607  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        608      void atomic_store_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        609  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        610      shared_ptr<T> atomic_exchange(shared_ptr<T>* p, shared_ptr<T> r);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        611  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        612      shared_ptr<T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        613      atomic_exchange_explicit(shared_ptr<T>* p, shared_ptr<T> r, memory_order mo);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        614  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        615      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        616      atomic_compare_exchange_weak(shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        617  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        618      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        619      atomic_compare_exchange_strong( shared_ptr<T>* p, shared_ptr<T>* v, shared_ptr<T> w);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        620  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        621      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        622      atomic_compare_exchange_weak_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        623                                            shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        624                                            memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        625  template<class T>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        626      bool
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        627      atomic_compare_exchange_strong_explicit(shared_ptr<T>* p, shared_ptr<T>* v,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        628                                              shared_ptr<T> w, memory_order success,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        629                                              memory_order failure);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        630  // Hash support
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        631  template <class T> struct hash;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        632  template <class T, class D> struct hash<unique_ptr<T, D> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        633  template <class T> struct hash<shared_ptr<T> >;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        634  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        635  template <class T, class Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        636    inline constexpr bool uses_allocator_v = uses_allocator<T, Alloc>::value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        637  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        638  // Pointer safety
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        639  enum class pointer_safety { relaxed, preferred, strict };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        640  void declare_reachable(void *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        641  template <class T> T *undeclare_reachable(T *p);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        642  void declare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        643  void undeclare_no_pointers(char *p, size_t n);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        644  pointer_safety get_pointer_safety() noexcept;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        645  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        646  void* align(size_t alignment, size_t size, void*& ptr, size_t& space);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        647  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        648  }  // std
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        649  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        650  */
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        651  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        652  #include <__config>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        653  #include <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        654  #include <typeinfo>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        655  #include <cstddef>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        656  #include <cstdint>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        657  #include <new>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        658  #include <utility>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        659  #include <limits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        660  #include <iterator>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        661  #include <__functional_base>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        662  #include <iosfwd>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        663  #include <tuple>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        664  #include <stdexcept>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        665  #include <cstring>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        666  #include <cassert>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        667  #if !defined(_LIBCPP_HAS_NO_ATOMIC_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        668  #  include <atomic>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        669  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        670  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        671  #if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        672  #pragma GCC system_header
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        673  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        674  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        675  _LIBCPP_PUSH_MACROS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        676  #include <__undef_macros>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        677  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        678  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        679  _LIBCPP_BEGIN_NAMESPACE_STD
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        680  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        681  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        682  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        683  _ValueType __libcpp_relaxed_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        684  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        685      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        686  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        687      defined(__ATOMIC_RELAXED) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        688      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        689      return __atomic_load_n(__value, __ATOMIC_RELAXED);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        690  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        691      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        692  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        693  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        694  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        695  template <class _ValueType>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        696  inline _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        697  _ValueType __libcpp_acquire_load(_ValueType const* __value) {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        698  #if defined(__TASKING__) && !defined(_LIBCPP_HAS_NO_THREADS)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        699      return __c11_atomic_load((_Atomic(_ValueType)*)__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        700  #elif !defined(_LIBCPP_HAS_NO_THREADS) && \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        701      defined(__ATOMIC_ACQUIRE) &&        \ 
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        702      (__has_builtin(__atomic_load_n) || _GNUC_VER >= 407)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        703      return __atomic_load_n(__value, __ATOMIC_ACQUIRE);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        704  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        705      return *__value;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        706  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        707  }
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        708  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        709  // addressof moved to <type_traits>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        710  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        711  template <class _Tp> class allocator;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        712  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        713  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        714  class _LIBCPP_TEMPLATE_VIS allocator<void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        715  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        716  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        717      typedef void*             pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        718      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        719      typedef void              value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        720  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        721      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        722  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        723  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        724  template <>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        725  class _LIBCPP_TEMPLATE_VIS allocator<const void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        726  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        727  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        728      typedef const void*       pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        729      typedef const void*       const_pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        730      typedef const void        value_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        731  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        732      template <class _Up> struct rebind {typedef allocator<_Up> other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        733  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        734  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        735  // pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        736  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        737  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        738  struct __has_element_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        739  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        740  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        741  struct __has_element_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        742                typename __void_t<typename _Tp::element_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        743  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        744  template <class _Ptr, bool = __has_element_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        745  struct __pointer_traits_element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        746  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        747  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        748  struct __pointer_traits_element_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        749  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        750      typedef typename _Ptr::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        751  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        752  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        753  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        754  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        755  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        756  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        757  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        758      typedef typename _Sp<_Tp, _Args...>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        759  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        760  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        761  template <template <class, class...> class _Sp, class _Tp, class ..._Args>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        762  struct __pointer_traits_element_type<_Sp<_Tp, _Args...>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        763  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        764      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        765  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        766  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        767  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        768  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        769  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        770  struct __pointer_traits_element_type<_Sp<_Tp>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        771  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        772      typedef typename _Sp<_Tp>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        773  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        774  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        775  template <template <class> class _Sp, class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        776  struct __pointer_traits_element_type<_Sp<_Tp>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        777  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        778      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        779  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        780  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        781  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        782  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        783  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        784      typedef typename _Sp<_Tp, _A0>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        785  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        786  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        787  template <template <class, class> class _Sp, class _Tp, class _A0>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        788  struct __pointer_traits_element_type<_Sp<_Tp, _A0>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        789  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        790      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        791  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        792  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        793  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        794  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        795  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        796      typedef typename _Sp<_Tp, _A0, _A1>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        797  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        798  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        799  template <template <class, class, class> class _Sp, class _Tp, class _A0, class _A1>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        800  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        801  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        802      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        803  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        804  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        805  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        806                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        807  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        808  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        809      typedef typename _Sp<_Tp, _A0, _A1, _A2>::element_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        810  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        811  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        812  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        813                                                             class _A1, class _A2>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        814  struct __pointer_traits_element_type<_Sp<_Tp, _A0, _A1, _A2>, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        815  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        816      typedef _Tp type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        817  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        818  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        819  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        820  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        821  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        822  struct __has_difference_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        823  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        824  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        825  struct __has_difference_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        826              typename __void_t<typename _Tp::difference_type>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        827  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        828  template <class _Ptr, bool = __has_difference_type<_Ptr>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        829  struct __pointer_traits_difference_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        830  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        831      typedef ptrdiff_t type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        832  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        833  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        834  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        835  struct __pointer_traits_difference_type<_Ptr, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        836  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        837      typedef typename _Ptr::difference_type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        838  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        839  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        840  template <class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        841  struct __has_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        842  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        843  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        844      struct __two {char __lx; char __lxx;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        845      template <class _Xp> static __two __test(...);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        846      template <class _Xp> static char __test(typename _Xp::template rebind<_Up>* = 0);
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        847  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        848      static const bool value = sizeof(__test<_Tp>(0)) == 1;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        849  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        850  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        851  template <class _Tp, class _Up, bool = __has_rebind<_Tp, _Up>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        852  struct __pointer_traits_rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        853  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        854  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        855      typedef typename _Tp::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        856  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        857      typedef typename _Tp::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        858  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        859  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        860  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        861  #ifndef _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        862  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        863  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        864  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        865  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        866  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        867      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        868  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        869      typedef typename _Sp<_Tp, _Args...>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        870  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        871  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        872  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        873  template <template <class, class...> class _Sp, class _Tp, class ..._Args, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        874  struct __pointer_traits_rebind<_Sp<_Tp, _Args...>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        875  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        876      typedef _Sp<_Up, _Args...> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        877  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        878  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        879  #else  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        880  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        881  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        882  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        883  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        884  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        885      typedef typename _Sp<_Tp>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        886  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        887      typedef typename _Sp<_Tp>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        888  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        889  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        890  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        891  template <template <class> class _Sp, class _Tp, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        892  struct __pointer_traits_rebind<_Sp<_Tp>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        893  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        894      typedef _Sp<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        895  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        896  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        897  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        898  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        899  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        900  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        901      typedef typename _Sp<_Tp, _A0>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        902  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        903      typedef typename _Sp<_Tp, _A0>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        904  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        905  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        906  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        907  template <template <class, class> class _Sp, class _Tp, class _A0, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        908  struct __pointer_traits_rebind<_Sp<_Tp, _A0>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        909  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        910      typedef _Sp<_Up, _A0> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        911  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        912  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        913  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        914                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        915  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        916  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        917  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        918      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        919  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        920      typedef typename _Sp<_Tp, _A0, _A1>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        921  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        922  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        923  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        924  template <template <class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        925                                           class _A1, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        926  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        927  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        928      typedef _Sp<_Up, _A0, _A1> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        929  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        930  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        931  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        932                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        933  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, true>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        934  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        935  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        936      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        937  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        938      typedef typename _Sp<_Tp, _A0, _A1, _A2>::template rebind<_Up>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        939  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        940  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        941  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        942  template <template <class, class, class, class> class _Sp, class _Tp, class _A0,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        943                                                  class _A1, class _A2, class _Up>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        944  struct __pointer_traits_rebind<_Sp<_Tp, _A0, _A1, _A2>, _Up, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        945  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        946      typedef _Sp<_Up, _A0, _A1, _A2> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        947  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        948  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        949  #endif  // _LIBCPP_HAS_NO_VARIADICS
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        950  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        951  template <class _Ptr>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        952  struct _LIBCPP_TEMPLATE_VIS pointer_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        953  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        954      typedef _Ptr                                                     pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        955      typedef typename __pointer_traits_element_type<pointer>::type    element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        956      typedef typename __pointer_traits_difference_type<pointer>::type difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        957  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        958  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        959      template <class _Up> using rebind = typename __pointer_traits_rebind<pointer, _Up>::type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        960  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        961      template <class _Up> struct rebind
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        962          {typedef typename __pointer_traits_rebind<pointer, _Up>::type other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        963  #endif  // _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        964  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        965  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        966      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        967  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        968      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        969      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        970                                             __nat, element_type>::type& __r)
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        971          {return pointer::pointer_to(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        972  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        973  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        974  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        975  struct _LIBCPP_TEMPLATE_VIS pointer_traits<_Tp*>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        976  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        977      typedef _Tp*      pointer;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        978      typedef _Tp       element_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        979      typedef ptrdiff_t difference_type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        980  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        981  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        982      template <class _Up> using rebind = _Up*;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        983  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        984      template <class _Up> struct rebind {typedef _Up* other;};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        985  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        986  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        987  private:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        988      struct __nat {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        989  public:
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        990      _LIBCPP_INLINE_VISIBILITY
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        991      static pointer pointer_to(typename conditional<is_void<element_type>::value,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        992                                        __nat, element_type>::type& __r) _NOEXCEPT
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        993          {return _VSTD::addressof(__r);}
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        994  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        995  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        996  template <class _From, class _To>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        997  struct __rebind_pointer {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        998  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory        999      typedef typename pointer_traits<_From>::template rebind<_To>        type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1000  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1001      typedef typename pointer_traits<_From>::template rebind<_To>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1002  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1003  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1004  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1005  // allocator_traits
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1006  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1007  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1008  struct __has_pointer_type : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1009  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1010  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1011  struct __has_pointer_type<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1012            typename __void_t<typename _Tp::pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1013  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1014  namespace __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1015  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1016  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1017  template <class _Tp, class _Dp, bool = __has_pointer_type<_Dp>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1018  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1019  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1020      typedef typename _Dp::pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1021  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1022  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1023  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1024  struct __pointer_type<_Tp, _Dp, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1025  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1026      typedef _Tp* type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1027  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1028  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1029  }  // __pointer_type_imp
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1030  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1031  template <class _Tp, class _Dp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1032  struct __pointer_type
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1033  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1034      typedef typename __pointer_type_imp::__pointer_type<_Tp, typename remove_reference<_Dp>::type>::type type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1035  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1036  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1037  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1038  struct __has_const_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1039  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1040  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1041  struct __has_const_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1042              typename __void_t<typename _Tp::const_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1043  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1044  template <class _Tp, class _Ptr, class _Alloc, bool = __has_const_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1045  struct __const_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1046  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1047      typedef typename _Alloc::const_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1048  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1049  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1050  template <class _Tp, class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1051  struct __const_pointer<_Tp, _Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1052  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1053  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1054      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1055  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1056      typedef typename pointer_traits<_Ptr>::template rebind<const _Tp>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1057  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1058  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1059  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1060  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1061  struct __has_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1062  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1063  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1064  struct __has_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1065                 typename __void_t<typename _Tp::void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1066  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1067  template <class _Ptr, class _Alloc, bool = __has_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1068  struct __void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1069  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1070      typedef typename _Alloc::void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1071  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1072  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1073  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1074  struct __void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1075  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1076  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1077      typedef typename pointer_traits<_Ptr>::template rebind<void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1078  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1079      typedef typename pointer_traits<_Ptr>::template rebind<void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1080  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1081  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1082  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1083  template <class _Tp, class = void>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1084  struct __has_const_void_pointer : false_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1085  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1086  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1087  struct __has_const_void_pointer<_Tp,
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1088              typename __void_t<typename _Tp::const_void_pointer>::type> : true_type {};
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1089  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1090  template <class _Ptr, class _Alloc, bool = __has_const_void_pointer<_Alloc>::value>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1091  struct __const_void_pointer
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1092  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1093      typedef typename _Alloc::const_void_pointer type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1094  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1095  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1096  template <class _Ptr, class _Alloc>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1097  struct __const_void_pointer<_Ptr, _Alloc, false>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1098  {
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1099  #ifndef _LIBCPP_CXX03_LANG
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1100      typedef typename pointer_traits<_Ptr>::template rebind<const void> type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1101  #else
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1102      typedef typename pointer_traits<_Ptr>::template rebind<const void>::other type;
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1103  #endif
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1104  };
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1105  
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1106  template <class _Tp>
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1107  inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1108  _Tp*
; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1109  __to_raw_pointer(_Tp* __p) _NOEXCEPT
; Function _ZSt16__to_raw_pointerIKcEPT_S2_
_ZSt16__to_raw_pointerIKcEPT_S2_:       .type func
        sub.a   a10,#88

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1110  {
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a15,[a15]
        st.a    [a10],a15
        mov     d15,#6
        st.b    [a10]4,d15

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1111      return __p;
        movh.a  a15,#@his(__curr_eh_stack_entry)
        lea     a15,[a15]@los(__curr_eh_stack_entry)
        ld.a    a2,[a10]
        st.a    [a15],a2
        mov.aa  a2,a4
        j       .L57

; C:\Users\QXZ3F7O\Desktop\Smartcode_v10.1r1\ctc\include.cxx\memory       1112  }
.L57:
        ret

___ZSt16__to_raw_pointerIKcEPT_S2__function_end:
        ; End of function

_ZZNSaIcE8allocateEjPKvEs:      .type       object
        .byte   97,108,108,111
        .byte   99,97,116,111
        .byte   114,60,84,62
        .byte   58,58,97,108
        .byte   108,111,99,97
        .byte   116,101,40,115
        .byte   105,122,101,95
        .byte   116,32,110,41
        .byte   32,39,110,39
        .byte   32,101,120,99
        .byte   101,101,100,115
        .byte   32,109,97,120
        .byte   105,109,117,109
        .byte   32,115,117,112
        .byte   112,111,114,116
        .byte   101,100,32,115
        .byte   105,122,101
.1.str: .type     object
        .byte   66,111,120,49
        .byte   32,-25,-102,-124
        .byte   -28,-67,-109,-25
        .byte   -89,-81,-17,-68
        .byte   -102
.2.str: .type     object
        .byte   66,111,120,50
        .byte   32,-25,-102,-124
        .byte   -28,-67,-109,-25
        .byte   -89,-81,-17,-68
        .byte   -102
.3.str: .type     object
        .byte   66,111,120,51
        .byte   32,-25,-102,-124
        .byte   -28,-67,-109,-25
        .byte   -89,-81,-17,-68
        .byte   -102
.4._ZNSt12length_errorC1EPKc.__T4:      .type       object
        .word   _ZNSt11logic_errorD2Ev
        .half   65535
        .byte   64
_999001___T16:  .type       object
        .word   48
_999002___T17:  .type       object
        .word   _ZNSo6sentryD1Ev
        .half   65535
        .word   __destroy_exception_object
        .half   65535
_999003___T32:  .type       object
        .word   _ZNSsD1Ev
        .half   65535

; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       59   
; C:\Users\QXZ3F7O\AppData\Local\Temp\compiler-explorer-compiler202312-20048-1tpjxlj.x0xp\example.cpp       60     cout << "Box3 的体积：" << volume <<endl;
        ; Module end